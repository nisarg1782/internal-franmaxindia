{"version":3,"file":"static/js/2133.dc015112.chunk.js","mappings":"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","sources":["components/LeasingEnquiryModal.jsx","components/LeaseDetails.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport Select from 'react-select';\r\nimport { toast, ToastContainer } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport './design/EnquiryModal.css';\r\nimport { getApiUrl } from '../utils/api';\r\n\r\nconst EnquiryModal = ({ onClose, property_key }) => {\r\n  const [states, setStates] = useState([]);\r\n  const [cities, setCities] = useState([]);\r\n  const [form, setForm] = useState({\r\n    name: '',\r\n    number: '',\r\n    email: '',\r\n    state_id: '',\r\n    city_id: '',\r\n    message: '',\r\n    property_key: ''\r\n  });\r\n\r\n  // Ensure property_key is set when modal is opened\r\n  useEffect(() => {\r\n    if (property_key) {\r\n      setForm(prev => ({ ...prev, property_key }));\r\n    }\r\n  }, [property_key]);\r\n\r\n  // Load states\r\n  useEffect(() => {\r\n    fetch(getApiUrl('get-indian-states.php'))\r\n      .then(res => res.json())\r\n      .then(data => {\r\n        const options = data.map(state => ({ value: state.id, label: state.name }));\r\n        setStates(options);\r\n      });\r\n  }, []);\r\n\r\n  // Load cities on state change\r\n  useEffect(() => {\r\n    if (form.state_id) {\r\n      fetch(getApiUrl(`get-cities.php?state_id=${form.state_id}`))\r\n        .then(res => res.json())\r\n        .then(data => {\r\n          const options = data.map(city => ({ value: city.id, label: city.name }));\r\n          setCities(options);\r\n        });\r\n    } else {\r\n      setCities([]);\r\n    }\r\n  }, [form.state_id]);\r\n\r\n  const handleChange = e => {\r\n    const { name, value } = e.target;\r\n    setForm(prev => ({ ...prev, [name]: value }));\r\n  };\r\n\r\n  const handleSelectChange = (selectedOption, { name }) => {\r\n    setForm(prev => ({ ...prev, [name]: selectedOption ? selectedOption.value : '' }));\r\n  };\r\n\r\n  const validateForm = () => {\r\n    const { name, number, email, state_id, city_id } = form;\r\n    const nameRegex = /^[a-zA-Z\\s]+$/;\r\n    const numberRegex = /^[6-9]\\d{9}$/;\r\n\r\n    if (!name.trim() || !nameRegex.test(name.trim())) {\r\n      toast.error(\"Enter a valid name (letters only)\");\r\n      return false;\r\n    }\r\n    if (!email || !/\\S+@\\S+\\.\\S+/.test(email)) {\r\n      toast.error(\"Enter a valid email\");\r\n      return false;\r\n    }\r\n    if (!numberRegex.test(number)) {\r\n      toast.error(\"Phone must start with 6/7/8/9 and be 10 digits\");\r\n      return false;\r\n    }\r\n    if (!state_id) {\r\n      toast.error(\"Select a state\");\r\n      return false;\r\n    }\r\n    if (!city_id) {\r\n      toast.error(\"Select a city\");\r\n      return false;\r\n    }\r\n    return true;\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    if (!validateForm()) return;\r\n\r\n    fetch(getApiUrl('submit-leasing-enquiry.php'), {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify(form)\r\n    })\r\n      .then(res => res.json())\r\n      .then(data => {\r\n        if (data.success) {\r\n          toast.success('Enquiry submitted ✅');\r\n          setTimeout(() => onClose(), 2000);\r\n        } else {\r\n          toast.error(data.error || 'Submission failed ❌');\r\n        }\r\n      })\r\n      .catch(err => {\r\n        console.error('Submission error:', err);\r\n        toast.error('Error submitting form');\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"enquiry-modal-overlay\">\r\n      <div className=\"enquiry-modal\">\r\n        <button className=\"close-btn\" onClick={onClose}>&times;</button>\r\n        <h2>Send Enquiry</h2>\r\n        <form onSubmit={handleSubmit}>\r\n          <input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            placeholder=\"Full Name\"\r\n            value={form.name}\r\n            onChange={handleChange}\r\n            required\r\n          />\r\n          <input\r\n            type=\"email\"\r\n            name=\"email\"\r\n            placeholder=\"Email\"\r\n            value={form.email}\r\n            onChange={handleChange}\r\n            required\r\n          />\r\n          <input\r\n            type=\"text\"\r\n            name=\"number\"\r\n            placeholder=\"Phone Number\"\r\n            value={form.number}\r\n            onChange={handleChange}\r\n            required\r\n          />\r\n          <Select\r\n            name=\"state_id\"\r\n            placeholder=\"Select State\"\r\n            options={states}\r\n            value={states.find(s => s.value === form.state_id) || null}\r\n            onChange={handleSelectChange}\r\n            className=\"react-select\"\r\n            classNamePrefix=\"select\"\r\n          />\r\n          <Select\r\n            name=\"city_id\"\r\n            placeholder=\"Select City\"\r\n            options={cities}\r\n            value={cities.find(c => c.value === form.city_id) || null}\r\n            onChange={handleSelectChange}\r\n            className=\"react-select\"\r\n            classNamePrefix=\"select\"\r\n          />\r\n          <textarea\r\n            name=\"message\"\r\n            placeholder=\"Your message (optional)\"\r\n            value={form.message}\r\n            onChange={handleChange}\r\n          />\r\n          <button type=\"submit\" className=\"submit-btn\">Submit</button>\r\n        </form>\r\n      </div>\r\n      <ToastContainer position=\"top-right\" autoClose={3000} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EnquiryModal;\r\n","// File: src/components/LeaseDetails.jsx\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport './design/LeaseDetails.css';\r\nimport EnquiryModal from './LeasingEnquiryModal';\r\nimport { getApiUrl , getImageUrl } from '../utils/api';\r\n\r\nconst LeaseDetails = () => {\r\n  const { id } = useParams();\r\n  const [property, setProperty] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [showModal, setShowModal] = useState(false);\r\n\r\n  useEffect(() => {\r\n    fetch(getApiUrl(`get-lease-property-detail.php?id=${id}`))\r\n      .then(res => res.json())\r\n      .then(data => {\r\n        if (data.status === 'success' && data.data) {\r\n          setProperty(data.data);\r\n        }\r\n        setLoading(false);\r\n      })\r\n      .catch(err => {\r\n        console.error(\"Error loading property details\", err);\r\n        setLoading(false);\r\n      });\r\n  }, [id]);\r\n\r\n  if (loading) return <div>Loading...</div>;\r\n  if (!property) return <div>Property not found.</div>;\r\n\r\n  return (\r\n    <div className=\"lease-detail-container\">\r\n      <h2>Lease Property Details</h2>\r\n      <div className=\"lease-quote\">\r\n        “Smart entrepreneurs lease – owning space doesn't build your business, opportunity does.”\r\n      </div>\r\n      <div className=\"lease-info-box\">\r\n        <div className=\"lease-image-side\">\r\n          <img\r\n            src={getImageUrl(`${property.image_path}`)}\r\n            alt=\"Lease Property\"\r\n            className=\"lease-img\"\r\n          />\r\n        </div>\r\n        <div className=\"lease-detail-side\">\r\n          <p><strong>Property Type:</strong> {property.property_type}</p>\r\n          <p><strong>Expected Rent:</strong> ₹{property.expected_rent}</p>\r\n          <p><strong>Area:</strong> {property.sqft} sqft</p>\r\n          <p><strong>Floor:</strong> {property.floor_type}</p>\r\n          <p><strong>City:</strong> {property.city_name}, {property.state_name}</p>\r\n          <p><strong>Description:</strong> {property.message || 'N/A'}</p>\r\n        </div>\r\n      </div>\r\n      <div className=\"lease-benefits\">\r\n        <h3>Why Lease a Property?</h3>\r\n        <ul>\r\n          <li>🔑 Lower upfront investment compared to buying</li>\r\n          <li>📍 Flexibility to change locations as your business grows</li>\r\n          <li>🛠 Maintenance often covered by the owner</li>\r\n          <li>🚀 Faster setup and launch for startups</li>\r\n          <li>💰 Keep capital free for other business investments</li>\r\n        </ul>\r\n      </div>\r\n      <div className=\"lease-back\">\r\n        <button onClick={() => setShowModal(true)} className=\"enquire-now-btn\">Enquire Now</button>\r\n      </div>\r\n      {showModal && (\r\n        <EnquiryModal onClose={() => setShowModal(false)} property_key={property.property_key} />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LeaseDetails;\r\n"],"names":["_ref","onClose","property_key","states","setStates","useState","cities","setCities","form","setForm","name","number","email","state_id","city_id","message","useEffect","prev","_objectSpread","fetch","getApiUrl","then","res","json","data","options","map","state","value","id","label","concat","city","handleChange","e","target","handleSelectChange","selectedOption","_ref2","_jsxs","className","children","_jsx","onClick","onSubmit","preventDefault","validateForm","trim","test","toast","error","method","headers","body","JSON","stringify","success","setTimeout","catch","err","console","type","placeholder","onChange","required","Select","find","s","classNamePrefix","c","ToastContainer","position","autoClose","LeaseDetails","useParams","property","setProperty","loading","setLoading","showModal","setShowModal","status","src","getImageUrl","image_path","alt","property_type","expected_rent","sqft","floor_type","city_name","state_name","EnquiryModal"],"sourceRoot":""}