{"version":3,"file":"static/js/8425.ffe88977.chunk.js","mappings":"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","sources":["admin/AssignModal.jsx","admin/LeadsPage.jsx","admin/Sidebar.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { toast } from 'react-toastify';\r\nimport { getApiUrl } from '../utils/api'; // Ensure this path is correct\r\nimport './AssignModal.css'; // Ensure this path is correct\r\n\r\nexport default function AssignModal({ investor, onClose, onAssign }) {\r\n  const [brands, setBrands] = useState([]);\r\n  const [selectedBrand, setSelectedBrand] = useState('');\r\n  const [loadingBrands, setLoadingBrands] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const fetchBrands = async () => {\r\n      try {\r\n        // Fetching brands for the dropdown\r\n        const response = await fetch(getApiUrl('get-brands-name.php')); \r\n        const result = await response.json();\r\n        if (result.success) {\r\n          setBrands(result.data);\r\n        } else {\r\n          toast.error(result.message || 'Failed to fetch brands for dropdown.');\r\n        }\r\n      } catch (e) {\r\n        toast.error('Network error fetching brands for dropdown.');\r\n        console.error('Error fetching brands:', e);\r\n      } finally {\r\n        setLoadingBrands(false);\r\n      }\r\n    };\r\n    fetchBrands();\r\n  }, []);\r\n\r\n  const handleAssignClick = async () => {\r\n    if (!selectedBrand) {\r\n      toast.error('Please select a brand to assign.');\r\n      return;\r\n    }\r\n\r\n    // Construct the data payload for the API\r\n    const dataToAssign = {\r\n      name: investor.name,\r\n      phone: investor.phone,\r\n      email: investor.email,\r\n      state: investor.state_name, // PHP expects 'state' and 'city' strings\r\n      state_id: investor.state_id,\r\n      city: investor.city_name,\r\n      city_id: investor.city_id,\r\n      message: investor.message,\r\n      brand_id: selectedBrand,\r\n    };\r\n\r\n    // --- DEBUGGING START ---\r\n    console.log('Data being sent to PHP:', dataToAssign);\r\n    console.log('JSON stringified data:', JSON.stringify(dataToAssign));\r\n    // --- DEBUGGING END ---\r\n    \r\n    try {\r\n      const response = await fetch(getApiUrl('assign-investor.php'), {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json', // Crucial header\r\n        },\r\n        body: JSON.stringify(dataToAssign),\r\n      });\r\n\r\n      // --- DEBUGGING START ---\r\n      console.log('Raw response status:', response.status);\r\n      const responseText = await response.text(); // Get raw text first\r\n      console.log('Raw response text:', responseText);\r\n      // --- DEBUGGING END ---\r\n\r\n      const result = JSON.parse(responseText); // Manually parse after logging raw text\r\n\r\n      if (result.success) {\r\n        toast.success(result.message);\r\n        onAssign(); // Callback to parent to refresh data and close modal\r\n      } else {\r\n        toast.error(result.message || 'Failed to assign investor.');\r\n      }\r\n    } catch (e) {\r\n      toast.error('API error during assignment: ' + e.message);\r\n      console.error('Error during API call:', e);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"modal-overlay\">\r\n      <div className=\"assign-modal\">\r\n        <div className=\"modal-header\">\r\n          <h3>Assign {investor.name} to Brand</h3>\r\n          <button className=\"close-btn\" onClick={onClose}>&times;</button>\r\n        </div>\r\n        <div className=\"modal-body\">\r\n          <p>\r\n            **Assigning** **`{investor.name}`** **to a brand.**\r\n          </p>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"brand-select\">Select Brand:</label>\r\n            {loadingBrands ? (\r\n              <p>Loading brands...</p>\r\n            ) : (\r\n              <select\r\n                id=\"brand-select\"\r\n                value={selectedBrand}\r\n                onChange={(e) => setSelectedBrand(e.target.value)}\r\n              >\r\n                <option value=\"\">-- Choose a Brand --</option>\r\n                {brands.map(brand => (\r\n                  <option key={brand.id} value={brand.id}>\r\n                    {brand.name}\r\n                  </option>\r\n                ))}\r\n              </select>\r\n            )}\r\n          </div>\r\n        </div>\r\n        <div className=\"modal-footer\">\r\n          <button className=\"btn-assign\" onClick={handleAssignClick} disabled={!selectedBrand}>\r\n            Assign\r\n          </button>\r\n          <button className=\"btn-cancel\" onClick={onClose}>\r\n            Cancel\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect, useCallback } from 'react';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport { FaPlusCircle } from 'react-icons/fa';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nimport Sidebar from './Sidebar';\r\nimport AssignModal from './AssignModal'; // New modal component for assignment\r\nimport './InvestorPage.css';\r\nimport './DashboardLayout.css';\r\n\r\nimport { getApiUrl } from '../utils/api';\r\n\r\nexport default function InvestorTable() {\r\n    const [investors, setInvestors] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState(null);\r\n    const [showAssignModal, setShowAssignModal] = useState(false);\r\n    const [selectedInvestor, setSelectedInvestor] = useState(null);\r\n\r\n    const fetchInvestors = useCallback(async () => {\r\n        setLoading(true);\r\n        try {\r\n            const response = await fetch(getApiUrl('get-generic-inquiries.php'));\r\n            const result = await response.json();\r\n            if (result.success) {\r\n                setInvestors(result.data);\r\n                setError(null);\r\n            } else {\r\n                toast.error(result.message || 'Failed to fetch inquiries.');\r\n                setError(result.message);\r\n            }\r\n        } catch (e) {\r\n            toast.error('Network error. Please check your server connection.');\r\n            setError(e.message);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        fetchInvestors();\r\n    }, [fetchInvestors]);\r\n\r\n    const openAssignModal = (investor) => {\r\n        setSelectedInvestor(investor);\r\n        setShowAssignModal(true);\r\n    };\r\n\r\n    const closeAssignModal = () => {\r\n        setSelectedInvestor(null);\r\n        setShowAssignModal(false);\r\n    };\r\n\r\n    const handleAssignmentSuccess = () => {\r\n        toast.success(\"Investor Assigned Successfully!\");\r\n        fetchInvestors();\r\n        closeAssignModal();\r\n    };\r\n\r\n    return (\r\n        <div className=\"dashboard-container\">\r\n            <Sidebar />\r\n            <div className=\"main-content\">\r\n                <ToastContainer position=\"top-right\" autoClose={3000} />\r\n                <div className=\"investor-table-container\">\r\n                    <div className=\"table-header\">\r\n                        <h2 className=\"table-title\">All Inquiries</h2>\r\n                    </div>\r\n                    {loading ? (\r\n                        <div className=\"loading\">Loading inquiries...</div>\r\n                    ) : error ? (\r\n                        <div className=\"error\">Error: {error}</div>\r\n                    ) : investors.length === 0 ? (\r\n                        <div className=\"no-data\">No Inquiries found.</div>\r\n                    ) : (\r\n                        <div className=\"table-wrapper\">\r\n                            <table>\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>Person Name</th>\r\n                                        <th>Phone</th>\r\n                                        <th>Email</th>\r\n                                        <th>State</th>\r\n                                        <th>City</th>\r\n                                        <th>Message</th>\r\n                                        <th>Assign</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {investors.map((inv) => (\r\n                                        <tr key={inv.id}>\r\n                                            <td>{inv.name}</td>\r\n                                            <td>{inv.phone}</td>\r\n                                            <td>{inv.email}</td>\r\n                                            <td>{inv.state_name}</td>\r\n                                            <td>{inv.city_name}</td>\r\n                                            <td>{inv.message}</td>\r\n                                            <td>\r\n                                                <button\r\n                                                    className=\"assign-btn\"\r\n                                                    onClick={() => openAssignModal(inv)}\r\n                                                >\r\n                                                    Assign\r\n                                                </button>\r\n                                            </td>\r\n                                        </tr>\r\n                                    ))}\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    )}\r\n                </div>\r\n                {showAssignModal && (\r\n                    <AssignModal\r\n                        investor={selectedInvestor}\r\n                        onClose={closeAssignModal}\r\n                        onAssign={handleAssignmentSuccess}\r\n                    />\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n}","import React, { useState, useEffect } from 'react';\r\nimport { Link, useNavigate } from 'react-router-dom'; // Import Link and useNavigate\r\nimport { toast } from 'react-toastify'; // Import toast for logout message\r\nimport './sidebar.css'; // Ensure this path is correct\r\nimport {\r\n  FaChevronDown, FaChevronRight, FaBuilding, FaUserTie,\r\n  FaBullhorn, FaCity, FaUsers, FaUserCircle, FaThLarge, FaBars, FaTimes\r\n} from 'react-icons/fa';\r\n\r\nconst Sidebar = () => {\r\n  // State to manage the collapse/expand status of each menu section\r\n  const [sectionCollapsed, setSectionCollapsed] = useState({\r\n    master: false, // Set initial state to open for better visibility\r\n    franchising: false, \r\n    marketing: false,\r\n    leasing: false,\r\n    admin: false,\r\n  });\r\n\r\n  // State to manage the overall collapse/expand status of the sidebar itself\r\n  const [sidebarCollapsed, setSidebarCollapsed] = useState(false);\r\n\r\n  // States to hold admin user's name and email from localStorage\r\n  const [adminName, setAdminName] = useState('Guest');\r\n  const [adminEmail, setAdminEmail] = useState('');\r\n\r\n  // Hook from react-router-dom for programmatic navigation\r\n  const navigate = useNavigate();\r\n\r\n  // Effect to read admin information from localStorage when the component mounts\r\n  useEffect(() => {\r\n    const storedAdminName = localStorage.getItem('adminName');\r\n    const storedAdminEmail = localStorage.getItem('adminEmail');\r\n    if (storedAdminName) {\r\n      setAdminName(storedAdminName);\r\n    }\r\n    if (storedAdminEmail) {\r\n      setAdminEmail(storedAdminEmail);\r\n    }\r\n  }, []); // Empty dependency array ensures this runs only once on mount\r\n\r\n  // Toggles the collapse/expand state of a specific menu section\r\n  const toggleSection = (section) => {\r\n    setSectionCollapsed((prev) => ({\r\n      ...prev,\r\n      [section]: !prev[section]\r\n    }));\r\n  };\r\n\r\n  // Handles the logout action\r\n  const handleLogout = () => {\r\n    // ✅ This is where localStorage items are removed\r\n    localStorage.removeItem('adminId');\r\n    localStorage.removeItem('adminName');\r\n    localStorage.removeItem('adminEmail');\r\n    \r\n    toast.info('You have been logged out.'); // Show a logout message\r\n    navigate('/admin/login'); // Redirect to the login page\r\n  };\r\n\r\n  return (\r\n    <aside className={`snbs-sidebar ${sidebarCollapsed ? 'collapsed' : ''}`}>\r\n      <div className=\"snbs-sidebar-header\">\r\n        <div className=\"snbs-logo\">\r\n          {!sidebarCollapsed && (\r\n            <>\r\n              <h2>FRANMAX INDIA</h2>\r\n              {/* Display admin's name and email */}\r\n              <p className=\"snbs-role\">Welcome, {adminName}</p>\r\n              {adminEmail && <p className=\"snbs-email\">{adminEmail}</p>}\r\n            </>\r\n          )}\r\n        </div>\r\n        {/* Button to toggle sidebar collapse/expand */}\r\n        <button\r\n          className=\"snbs-toggle-btn\"\r\n          onClick={() => setSidebarCollapsed(!sidebarCollapsed)}\r\n        >\r\n          {sidebarCollapsed ? <FaBars /> : <FaTimes />}\r\n        </button>\r\n      </div>\r\n\r\n      <nav className=\"snbs-menu\">\r\n        {/* Master Section */}\r\n        \r\n        {/* Franchising Section */}\r\n        <div className=\"snbs-section\">\r\n          <div className=\"snbs-section-header\" onClick={() => toggleSection('franchising')}>\r\n            <span>FRANCHISING</span>\r\n            {sectionCollapsed.franchising ? <FaChevronDown /> : <FaChevronRight />}\r\n          </div>\r\n          {sectionCollapsed.franchising && !sidebarCollapsed && (\r\n            <>\r\n              <Link to=\"/admin/brand-list\" className=\"snbs-link\"><FaBuilding /> Brand</Link>\r\n              <Link to=\"/admin/investors\" className=\"snbs-link\"><FaUserTie /> Investor</Link>\r\n              <Link to=\"/admin/leads\" className=\"snbs-link\"><FaUserTie />Generic Inquiries</Link>\r\n              <Link to=\"/admin/brand-inquiries\" className=\"snbs-link\"><FaUserTie />Brand Specific Inquiries</Link>\r\n              <Link to=\"/admin/partner-inquiries\" className=\"snbs-link\"><FaUserTie />Partner Inquiries</Link>\r\n               <Link to=\"/admin/newsletter\" className=\"snbs-link\"><FaUserTie />Newsletter</Link>\r\n                <Link to=\"/admin/faq\" className=\"snbs-link\"><FaUserTie />FAQ</Link>\r\n                <Link to=\"/admin/event\"  className=\"snbs-link\"><FaUserTie />Event</Link>\r\n            </>\r\n          )}\r\n        </div>\r\n        \r\n        {/* Marketing Section */}\r\n        <div className=\"snbs-section\">\r\n          <div className=\"snbs-section-header\" onClick={() => toggleSection('marketing')}>\r\n            <span>MARKETING</span>\r\n            {sectionCollapsed.marketing ? <FaChevronDown /> : <FaChevronRight />}\r\n          </div>\r\n          {sectionCollapsed.marketing && !sidebarCollapsed && (\r\n            <Link to=\"/admin/marketing-inquiries\" className=\"snbs-link\"><FaBullhorn /> Marketing</Link>\r\n          )}\r\n        </div>\r\n\r\n        {/* Leasing Section */}\r\n        <div className=\"snbs-section\">\r\n          <div className=\"snbs-section-header\" onClick={() => toggleSection('leasing')}>\r\n            <span>LEASING</span>\r\n            {sectionCollapsed.leasing ? <FaChevronDown /> : <FaChevronRight />}\r\n          </div>\r\n          {sectionCollapsed.leasing && !sidebarCollapsed && (\r\n            <>\r\n              <Link to=\"#\" className=\"snbs-link\"><FaCity /> Buy Lease Property inquiries</Link>\r\n              <Link to=\"/admin/lease-properties\" className=\"snbs-link\"><FaCity /> Lease Property inquiries</Link>\r\n              \r\n              <Link to=\"#\" className=\"snbs-link\"><FaCity /> Sell Property</Link>\r\n              <Link to=\"/admin/buy-business-inquiries\" className=\"snbs-link\"><FaCity />Buy Business Inquiry</Link>\r\n              <Link to=\"/admin/sell-business-inquiries\" className=\"snbs-link\"><FaCity /> Sell Business</Link>\r\n            </>\r\n          )}\r\n        </div>\r\n\r\n        {/* Admin Section */}\r\n        <div className=\"snbs-section\">\r\n          <div className=\"snbs-section-header\" onClick={() => toggleSection('admin')}>\r\n            <span>ADMIN</span>\r\n            {sectionCollapsed.admin ? <FaChevronDown /> : <FaChevronRight />}\r\n          </div>\r\n          {sectionCollapsed.admin && !sidebarCollapsed && (\r\n            <>\r\n              <Link to=\"/user-list\" className=\"snbs-link\"><FaUsers /> Users</Link>\r\n          \r\n              {/* Logout link calls the handleLogout function */}\r\n              <Link to=\"#\" onClick={handleLogout} className=\"snbs-link\"><FaThLarge /> Logout</Link>\r\n            </>\r\n          )}\r\n        </div>\r\n      </nav>\r\n    </aside>\r\n  );\r\n};\r\n\r\nexport default Sidebar;\r\n"],"names":["AssignModal","_ref","investor","onClose","onAssign","brands","setBrands","useState","selectedBrand","setSelectedBrand","loadingBrands","setLoadingBrands","useEffect","async","response","fetch","getApiUrl","result","json","success","data","toast","error","message","e","console","fetchBrands","_jsx","className","children","_jsxs","name","onClick","htmlFor","id","value","onChange","target","map","brand","dataToAssign","phone","email","state","state_name","state_id","city","city_name","city_id","brand_id","log","JSON","stringify","method","headers","body","status","responseText","text","parse","disabled","InvestorTable","investors","setInvestors","loading","setLoading","setError","showAssignModal","setShowAssignModal","selectedInvestor","setSelectedInvestor","fetchInvestors","useCallback","closeAssignModal","Sidebar","ToastContainer","position","autoClose","length","inv","handleAssignmentSuccess","sectionCollapsed","setSectionCollapsed","master","franchising","marketing","leasing","admin","sidebarCollapsed","setSidebarCollapsed","adminName","setAdminName","adminEmail","setAdminEmail","navigate","useNavigate","storedAdminName","localStorage","getItem","storedAdminEmail","toggleSection","section","prev","_objectSpread","concat","_Fragment","FaBars","FaTimes","FaChevronDown","FaChevronRight","Link","to","FaBuilding","FaUserTie","FaBullhorn","FaCity","FaUsers","handleLogout","removeItem","info","FaThLarge"],"sourceRoot":""}