{"version":3,"file":"static/js/5090.1f40018e.chunk.js","mappings":"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","sources":["components/Property/LeasePropertyForm.jsx","utils/validateLeaseForm.js","components/Property/LeasePropertyPage.jsx"],"sourcesContent":["// File: src/components/LeasePropertyForm.jsx\r\nimport React, { useState, useEffect } from 'react';\r\nimport Select from 'react-select';\r\nimport {\r\n  FaUser, FaPhone, FaEnvelope, FaMapMarkerAlt, FaCity,\r\n  FaHome, FaMoneyBillWave, FaLayerGroup\r\n} from 'react-icons/fa';\r\nimport { toast, ToastContainer } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport './LeasePropertyPage.css';\r\nimport { validateLeaseForm } from '../../utils/validateLeaseForm';\r\nimport { getApiUrl } from '../../utils/api';\r\n\r\n\r\nconst LeasePropertyForm = () => {\r\n  const [formData, setFormData] = useState({\r\n    ownerName: '',\r\n    contact: '',\r\n    email: '',\r\n    stateId: '',\r\n    cityId: '',\r\n    address: '',\r\n    message: '',\r\n    expectedRent: '',\r\n    sqft: '',\r\n    propertyType: '',\r\n    floorType: '',\r\n    image: null,\r\n    imagePreview: null\r\n  });\r\n\r\n  const [states, setStates] = useState([]);\r\n  const [cities, setCities] = useState([]);\r\n  const sqftOptions = [\r\n    '500 sq.ft', '1000 sq.ft', '1500 sq.ft', '2000 sq.ft', '2500+ sq.ft'\r\n  ];\r\n\r\n  useEffect(() => {\r\n    fetch(getApiUrl('get-indian-states.php'))\r\n      .then(res => res.json())\r\n      .then(data => Array.isArray(data) && setStates(data));\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (formData.stateId) {\r\n      fetch(getApiUrl(`get-cities.php?state_id=${formData.stateId}`))\r\n        .then(res => res.json())\r\n        .then(data => Array.isArray(data) && setCities(data));\r\n    } else {\r\n      setCities([]);\r\n    }\r\n  }, [formData.stateId]);\r\n\r\n  const handleChange = (e) => {\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleSelectChange = (selected, type) => {\r\n    if (type === 'state') {\r\n      setFormData(prev => ({\r\n        ...prev,\r\n        stateId: selected?.value || '',\r\n        cityId: ''\r\n      }));\r\n    } else if (type === 'city') {\r\n      setFormData(prev => ({\r\n        ...prev,\r\n        cityId: selected?.value || ''\r\n      }));\r\n    }\r\n  };\r\n\r\n  const handleImageChange = (e) => {\r\n    const file = e.target.files[0];\r\n    if (file) {\r\n      setFormData(prev => ({ ...prev, image: file, imagePreview: URL.createObjectURL(file) }));\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (!validateLeaseForm(formData, toast)) return;\r\n\r\n    const formPayload = new FormData();\r\n    for (const key in formData) {\r\n      if (key !== 'imagePreview' && formData[key]) {\r\n        formPayload.append(key, formData[key]);\r\n      }\r\n    }\r\n\r\n    try {\r\n      const response = await fetch(getApiUrl('submit-lease-property.php'), {\r\n        method: 'POST',\r\n        body: formPayload\r\n      });\r\n\r\n      const result = await response.json();\r\n      if (result.status === 'success') {\r\n        toast.success(result.message);\r\n        setFormData({\r\n          ownerName: '', contact: '', email: '', stateId: '', cityId: '', address: '', message: '', expectedRent: '', sqft: '', propertyType: '', floorType: '', image: null, imagePreview: null\r\n        });\r\n      } else if (result.status === 'exists') {\r\n        toast.warning(result.message);\r\n      } else {\r\n        toast.error(result.message);\r\n      }\r\n    } catch (error) {\r\n      toast.error('Submission failed.');\r\n      console.error('Error:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <form onSubmit={handleSubmit} className=\"lease-form-grid\">\r\n        <div className=\"lease-form-group\">\r\n          <label><FaUser /> Owner Name</label>\r\n          <input type=\"text\" name=\"ownerName\" value={formData.ownerName} onChange={handleChange} />\r\n        </div>\r\n\r\n        <div className=\"lease-form-group\">\r\n          <label><FaPhone /> Contact</label>\r\n          <input type=\"text\" name=\"contact\" value={formData.contact} onChange={handleChange} />\r\n        </div>\r\n\r\n        <div className=\"lease-form-group\">\r\n          <label><FaEnvelope /> Email</label>\r\n          <input type=\"email\" name=\"email\" value={formData.email} onChange={handleChange} />\r\n        </div>\r\n\r\n        <div className=\"lease-form-group\">\r\n          <label><FaMapMarkerAlt /> State</label>\r\n          <Select\r\n            options={states.map(s => ({ value: s.id, label: s.name }))}\r\n            onChange={(selected) => handleSelectChange(selected, 'state')}\r\n            value={states.find(s => s.id === formData.stateId) ? { value: formData.stateId, label: states.find(s => s.id === formData.stateId).name } : null}\r\n            placeholder=\"Select State\"\r\n            isClearable\r\n          />\r\n        </div>\r\n\r\n        <div className=\"lease-form-group\">\r\n          <label><FaCity /> City</label>\r\n          <Select\r\n            options={cities.map(c => ({ value: c.id, label: c.name }))}\r\n            onChange={(selected) => handleSelectChange(selected, 'city')}\r\n            value={cities.find(c => c.id === formData.cityId) ? { value: formData.cityId, label: cities.find(c => c.id === formData.cityId).name } : null}\r\n            placeholder=\"Select City\"\r\n            isClearable\r\n            isDisabled={!formData.stateId}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"lease-form-group\">\r\n          <label><FaMapMarkerAlt /> Full Address</label>\r\n          <textarea name=\"address\" value={formData.address} onChange={handleChange} />\r\n        </div>\r\n\r\n        <div className=\"lease-form-group\">\r\n          <label><FaMoneyBillWave /> Expected Rent (₹)</label>\r\n          <input type=\"number\" name=\"expectedRent\" value={formData.expectedRent} onChange={handleChange} />\r\n        </div>\r\n\r\n        <div className=\"lease-form-group\">\r\n          <label><FaLayerGroup /> Property Area</label>\r\n          <select name=\"sqft\" value={formData.sqft} onChange={handleChange}>\r\n            <option value=\"\">Select Area</option>\r\n            {sqftOptions.map((size, i) => <option key={i}>{size}</option>)}\r\n          </select>\r\n        </div>\r\n\r\n        <div className=\"lease-form-group\">\r\n          <label><FaHome /> Property Type</label>\r\n          <div>\r\n            <label><input type=\"radio\" name=\"propertyType\" value=\"Warehouse\" checked={formData.propertyType === 'Warehouse'} onChange={handleChange} /> Warehouse</label><br />\r\n            <label><input type=\"radio\" name=\"propertyType\" value=\"Showroom\" checked={formData.propertyType === 'Showroom'} onChange={handleChange} /> Showroom</label><br />\r\n            <label><input type=\"radio\" name=\"propertyType\" value=\"Multi Purpose\" checked={formData.propertyType === 'Multi Purpose'} onChange={handleChange} /> Multi Purpose</label>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"lease-form-group\">\r\n          <label><FaLayerGroup /> Property Floor</label>\r\n          <div>\r\n            <label><input type=\"radio\" name=\"floorType\" value=\"Ground Floor\" checked={formData.floorType === 'Ground Floor'} onChange={handleChange} /> Ground Floor</label><br />\r\n            <label><input type=\"radio\" name=\"floorType\" value=\"Upper Floor\" checked={formData.floorType === 'Upper Floor'} onChange={handleChange} /> Upper Floor</label>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"lease-form-group lease-form-full\">\r\n          <label><FaEnvelope /> Message</label>\r\n          <textarea name=\"message\" value={formData.message} onChange={handleChange} />\r\n        </div>\r\n\r\n        <div className=\"lease-form-group lease-form-full\">\r\n          <label>Upload Property Image</label>\r\n          <input type=\"file\" accept=\"image/*\" onChange={handleImageChange} />\r\n          {formData.imagePreview && (\r\n            <div className=\"image-preview\">\r\n              <img src={formData.imagePreview} alt=\"Preview\" />\r\n            </div>\r\n          )}\r\n        </div>\r\n\r\n        <button type=\"submit\" className=\"lease-submit-button\">Submit</button>\r\n      </form>\r\n      <ToastContainer position=\"top-right\" autoClose={3000} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LeasePropertyForm;\r\n","export const validateLeaseForm = (formData, toast) => {\r\n  const nameRegex = /^[A-Za-z\\s]+$/;\r\n  const phoneRegex = /^[6-9]\\d{9}$/;\r\n  const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n\r\n  if (!formData.ownerName.trim()) {\r\n    toast.error(\"Owner name cannot be empty.\");\r\n    return false;\r\n  }\r\n\r\n  if (!nameRegex.test(formData.ownerName.trim())) {\r\n    toast.error(\"Owner name must contain only letters and spaces.\");\r\n    return false;\r\n  }\r\n\r\n  if (!formData.contact || !phoneRegex.test(formData.contact)) {\r\n    toast.error(\"Enter valid 10-digit contact number starting with 6-9.\");\r\n    return false;\r\n  }\r\n\r\n  if (!formData.email || !emailRegex.test(formData.email)) {\r\n    toast.error(\"Enter a valid email address.\");\r\n    return false;\r\n  }\r\n\r\n  if (!formData.stateId || !formData.cityId) {\r\n    toast.error(\"Please select both state and city.\");\r\n    return false;\r\n  }\r\n\r\n  if (!formData.address.trim()) {\r\n    toast.error(\"Address cannot be empty.\");\r\n    return false;\r\n  }\r\n\r\n  if (!formData.expectedRent || parseFloat(formData.expectedRent) <= 0) {\r\n    toast.error(\"Expected rent must be a positive number.\");\r\n    return false;\r\n  }\r\n\r\n  if (!formData.sqft) {\r\n    toast.error(\"Please select property area.\");\r\n    return false;\r\n  }\r\n\r\n  if (!formData.propertyType) {\r\n    toast.error(\"Please select a property type.\");\r\n    return false;\r\n  }\r\n\r\n  if (!formData.floorType) {\r\n    toast.error(\"Please select a floor type.\");\r\n    return false;\r\n  }\r\n\r\n  return true;\r\n};\r\n","import React from 'react';\r\nimport LeasePropertyForm from './LeasePropertyForm';\r\nimport './LeasePropertyPage.css';\r\n\r\nconst LeasePropertyPage = () => {\r\n  return (\r\n    <div className=\"lease-page-container\">\r\n      <header className=\"lease-page-header\">\r\n        <h1>Lease Your Property with Franmax India</h1>\r\n        <p>Professional. Reliable. Transparent Property Leasing.</p>\r\n      </header>\r\n\r\n      <section className=\"lease-page-intro\">\r\n        <h2>Why Property Owners Trust Us</h2>\r\n        <p>\r\n          Franmax India is a dependable platform for property owners who want to lease out their commercial spaces such\r\n          as warehouses, showrooms, or multi-purpose properties. We help you find genuine leads, manage leasing formalities,\r\n          and deliver peace of mind through our professional service.\r\n        </p>\r\n      </section>\r\n\r\n      <section className=\"lease-form-section\">\r\n        <div className=\"lease-form-card\">\r\n          <h3 className=\"lease-form-title\">Submit Your Property Details</h3>\r\n          <LeasePropertyForm />\r\n        </div>\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LeasePropertyPage;"],"names":["LeasePropertyForm","formData","setFormData","useState","ownerName","contact","email","stateId","cityId","address","message","expectedRent","sqft","propertyType","floorType","image","imagePreview","states","setStates","cities","setCities","useEffect","fetch","getApiUrl","then","res","json","data","Array","isArray","concat","handleChange","e","_objectSpread","target","name","value","handleSelectChange","selected","type","prev","_jsxs","_Fragment","children","onSubmit","async","preventDefault","validateLeaseForm","toast","trim","test","parseFloat","error","formPayload","FormData","key","append","response","method","body","result","status","success","warning","console","className","_jsx","FaUser","onChange","FaPhone","FaEnvelope","FaMapMarkerAlt","Select","options","map","s","id","label","find","placeholder","isClearable","FaCity","c","isDisabled","FaMoneyBillWave","FaLayerGroup","size","i","FaHome","checked","accept","file","files","URL","createObjectURL","src","alt","ToastContainer","position","autoClose","LeasePropertyPage"],"sourceRoot":""}