{"version":3,"file":"static/js/2694.2b5e26ee.chunk.js","mappings":"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","sources":["admin/MarketingInquiries.jsx","admin/Sidebar.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport './marketing.css';\r\nimport Sidebar from './Sidebar';\r\nimport { getApiUrl } from '../utils/api'; // ✅ Import helper\r\n\r\nconst MarketingInquiries = () => {\r\n    const [inquiries, setInquiries] = useState([]);\r\n    const [show, setShow] = useState({});\r\n    const roleId = 1; // Replace with session or context\r\n    const userId = 1; // Replace with session or context\r\n\r\n    useEffect(() => {\r\n        fetch(getApiUrl('get-marketing-inquiries.php')) // ✅ Use helper\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                if (data.status === \"success\") {\r\n                    setInquiries(data.inquiries);\r\n                }\r\n            });\r\n    }, []);\r\n\r\n    const toggle = async (id, field) => {\r\n        const alreadyShown = show[id]?.[field];\r\n\r\n        if (!alreadyShown) {\r\n            try {\r\n                await fetch(getApiUrl('log-marketing-view.php'), { // ✅ Use helper\r\n                    method: 'POST',\r\n                    headers: {\r\n                        'Content-Type': 'application/json',\r\n                    },\r\n                    body: JSON.stringify({\r\n                        inquiry_id: id,\r\n                        role_id: roleId,\r\n                        user_id: userId,\r\n                        field: field\r\n                    }),\r\n                });\r\n\r\n                setShow(prev => ({\r\n                    ...prev,\r\n                    [id]: {\r\n                        ...prev[id],\r\n                        [field]: true\r\n                    }\r\n                }));\r\n\r\n            } catch (err) {\r\n                console.error(\"Failed to log view:\", err);\r\n            }\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"snb-marketing-page\">\r\n            <Sidebar />\r\n            <div className=\"snb-marketing-content\">\r\n                <h2 className=\"snb-marketing-title\">Marketing Inquiries</h2>\r\n                <div className=\"snb-marketing-table-wrapper\">\r\n                    <table className=\"snb-marketing-table\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>#</th>\r\n                                <th>Name</th>\r\n                                <th>Brand</th>\r\n                                <th>State</th>\r\n                                <th>City</th>\r\n                                <th>Services</th>\r\n                                <th>Contact</th>\r\n                                <th>Email</th>\r\n                                <th>Inquiry Date</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {inquiries.map((inq, idx) => (\r\n                                <tr key={inq.id}>\r\n                                    <td>{idx + 1}</td>\r\n                                    <td>{inq.name}</td>\r\n                                    <td>{inq.brand_name}</td>\r\n                                    <td>{inq.state_name}</td>\r\n                                    <td>{inq.city_name}</td>\r\n                                    <td>{inq.services}</td>\r\n                                    <td>\r\n                                        {show[inq.id]?.contact ? (\r\n                                            inq.contact\r\n                                        ) : (\r\n                                            <button onClick={() => toggle(inq.id, \"contact\")} className=\"snb-show-btn\">Show</button>\r\n                                        )}\r\n                                    </td>\r\n                                    <td>\r\n                                        {show[inq.id]?.email ? (\r\n                                            inq.email\r\n                                        ) : (\r\n                                            <button onClick={() => toggle(inq.id, \"email\")} className=\"snb-show-btn\">Show</button>\r\n                                        )}\r\n                                    </td>\r\n                                    <td>{inq.created_at}</td>\r\n                                </tr>\r\n                            ))}\r\n                            {inquiries.length === 0 && (\r\n                                <tr><td colSpan=\"9\" style={{ textAlign: 'center' }}>No inquiries found.</td></tr>\r\n                            )}\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MarketingInquiries;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Link, useNavigate } from 'react-router-dom'; // Import Link and useNavigate\r\nimport { toast } from 'react-toastify'; // Import toast for logout message\r\nimport './sidebar.css'; // Ensure this path is correct\r\nimport {\r\n  FaChevronDown, FaChevronRight, FaBuilding, FaUserTie,\r\n  FaBullhorn, FaCity, FaUsers, FaUserCircle, FaThLarge, FaBars, FaTimes\r\n} from 'react-icons/fa';\r\n\r\nconst Sidebar = () => {\r\n  // State to manage the collapse/expand status of each menu section\r\n  const [sectionCollapsed, setSectionCollapsed] = useState({\r\n    master: false, // Set initial state to open for better visibility\r\n    franchising: false, \r\n    marketing: false,\r\n    leasing: false,\r\n    admin: false,\r\n  });\r\n\r\n  // State to manage the overall collapse/expand status of the sidebar itself\r\n  const [sidebarCollapsed, setSidebarCollapsed] = useState(false);\r\n\r\n  // States to hold admin user's name and email from localStorage\r\n  const [adminName, setAdminName] = useState('Guest');\r\n  const [adminEmail, setAdminEmail] = useState('');\r\n\r\n  // Hook from react-router-dom for programmatic navigation\r\n  const navigate = useNavigate();\r\n\r\n  // Effect to read admin information from localStorage when the component mounts\r\n  useEffect(() => {\r\n    const storedAdminName = localStorage.getItem('adminName');\r\n    const storedAdminEmail = localStorage.getItem('adminEmail');\r\n    if (storedAdminName) {\r\n      setAdminName(storedAdminName);\r\n    }\r\n    if (storedAdminEmail) {\r\n      setAdminEmail(storedAdminEmail);\r\n    }\r\n  }, []); // Empty dependency array ensures this runs only once on mount\r\n\r\n  // Toggles the collapse/expand state of a specific menu section\r\n  const toggleSection = (section) => {\r\n    setSectionCollapsed((prev) => ({\r\n      ...prev,\r\n      [section]: !prev[section]\r\n    }));\r\n  };\r\n\r\n  // Handles the logout action\r\n  const handleLogout = () => {\r\n    // ✅ This is where localStorage items are removed\r\n    localStorage.removeItem('adminId');\r\n    localStorage.removeItem('adminName');\r\n    localStorage.removeItem('adminEmail');\r\n    \r\n    toast.info('You have been logged out.'); // Show a logout message\r\n    navigate('/admin/login'); // Redirect to the login page\r\n  };\r\n\r\n  return (\r\n    <aside className={`snbs-sidebar ${sidebarCollapsed ? 'collapsed' : ''}`}>\r\n      <div className=\"snbs-sidebar-header\">\r\n        <div className=\"snbs-logo\">\r\n          {!sidebarCollapsed && (\r\n            <>\r\n              <h2>FRANMAX INDIA</h2>\r\n              {/* Display admin's name and email */}\r\n              <p className=\"snbs-role\">Welcome, {adminName}</p>\r\n              {adminEmail && <p className=\"snbs-email\">{adminEmail}</p>}\r\n            </>\r\n          )}\r\n        </div>\r\n        {/* Button to toggle sidebar collapse/expand */}\r\n        <button\r\n          className=\"snbs-toggle-btn\"\r\n          onClick={() => setSidebarCollapsed(!sidebarCollapsed)}\r\n        >\r\n          {sidebarCollapsed ? <FaBars /> : <FaTimes />}\r\n        </button>\r\n      </div>\r\n\r\n      <nav className=\"snbs-menu\">\r\n        {/* Master Section */}\r\n        \r\n        {/* Franchising Section */}\r\n        <div className=\"snbs-section\">\r\n          <div className=\"snbs-section-header\" onClick={() => toggleSection('franchising')}>\r\n            <span>FRANCHISING</span>\r\n            {sectionCollapsed.franchising ? <FaChevronDown /> : <FaChevronRight />}\r\n          </div>\r\n          {sectionCollapsed.franchising && !sidebarCollapsed && (\r\n            <>\r\n              <Link to=\"/admin/brand-list\" className=\"snbs-link\"><FaBuilding /> Brand</Link>\r\n              <Link to=\"/admin/investors\" className=\"snbs-link\"><FaUserTie /> Investor</Link>\r\n              <Link to=\"/admin/leads\" className=\"snbs-link\"><FaUserTie />Generic Inquiries</Link>\r\n              <Link to=\"/admin/brand-inquiries\" className=\"snbs-link\"><FaUserTie />Brand Specific Inquiries</Link>\r\n              <Link to=\"/admin/partner-inquiries\" className=\"snbs-link\"><FaUserTie />Partner Inquiries</Link>\r\n               <Link to=\"/admin/newsletter\" className=\"snbs-link\"><FaUserTie />Newsletter</Link>\r\n                <Link to=\"/admin/faq\" className=\"snbs-link\"><FaUserTie />FAQ</Link>\r\n                <Link to=\"/admin/event\"  className=\"snbs-link\"><FaUserTie />Event</Link>\r\n            </>\r\n          )}\r\n        </div>\r\n        \r\n        {/* Marketing Section */}\r\n        <div className=\"snbs-section\">\r\n          <div className=\"snbs-section-header\" onClick={() => toggleSection('marketing')}>\r\n            <span>MARKETING</span>\r\n            {sectionCollapsed.marketing ? <FaChevronDown /> : <FaChevronRight />}\r\n          </div>\r\n          {sectionCollapsed.marketing && !sidebarCollapsed && (\r\n            <Link to=\"/admin/marketing-inquiries\" className=\"snbs-link\"><FaBullhorn /> Marketing</Link>\r\n          )}\r\n        </div>\r\n\r\n        {/* Leasing Section */}\r\n        <div className=\"snbs-section\">\r\n          <div className=\"snbs-section-header\" onClick={() => toggleSection('leasing')}>\r\n            <span>LEASING</span>\r\n            {sectionCollapsed.leasing ? <FaChevronDown /> : <FaChevronRight />}\r\n          </div>\r\n          {sectionCollapsed.leasing && !sidebarCollapsed && (\r\n            <>\r\n              <Link to=\"#\" className=\"snbs-link\"><FaCity /> Buy Lease Property inquiries</Link>\r\n              <Link to=\"/admin/lease-properties\" className=\"snbs-link\"><FaCity /> Lease Property inquiries</Link>\r\n              \r\n              <Link to=\"#\" className=\"snbs-link\"><FaCity /> Sell Property</Link>\r\n              <Link to=\"/admin/buy-business-inquiries\" className=\"snbs-link\"><FaCity />Buy Business Inquiry</Link>\r\n              <Link to=\"/admin/sell-business-inquiries\" className=\"snbs-link\"><FaCity /> Sell Business</Link>\r\n            </>\r\n          )}\r\n        </div>\r\n\r\n        {/* Admin Section */}\r\n        <div className=\"snbs-section\">\r\n          <div className=\"snbs-section-header\" onClick={() => toggleSection('admin')}>\r\n            <span>ADMIN</span>\r\n            {sectionCollapsed.admin ? <FaChevronDown /> : <FaChevronRight />}\r\n          </div>\r\n          {sectionCollapsed.admin && !sidebarCollapsed && (\r\n            <>\r\n              <Link to=\"/user-list\" className=\"snbs-link\"><FaUsers /> Users</Link>\r\n          \r\n              {/* Logout link calls the handleLogout function */}\r\n              <Link to=\"#\" onClick={handleLogout} className=\"snbs-link\"><FaThLarge /> Logout</Link>\r\n            </>\r\n          )}\r\n        </div>\r\n      </nav>\r\n    </aside>\r\n  );\r\n};\r\n\r\nexport default Sidebar;\r\n"],"names":["MarketingInquiries","inquiries","setInquiries","useState","show","setShow","useEffect","fetch","getApiUrl","then","res","json","data","status","toggle","async","id","field","_show$id","method","headers","body","JSON","stringify","inquiry_id","role_id","user_id","prev","_objectSpread","err","console","error","_jsxs","className","children","_jsx","Sidebar","map","inq","idx","_show$inq$id","_show$inq$id2","name","brand_name","state_name","city_name","services","contact","onClick","email","created_at","length","colSpan","style","textAlign","sectionCollapsed","setSectionCollapsed","master","franchising","marketing","leasing","admin","sidebarCollapsed","setSidebarCollapsed","adminName","setAdminName","adminEmail","setAdminEmail","navigate","useNavigate","storedAdminName","localStorage","getItem","storedAdminEmail","toggleSection","section","concat","_Fragment","FaBars","FaTimes","FaChevronDown","FaChevronRight","Link","to","FaBuilding","FaUserTie","FaBullhorn","FaCity","FaUsers","handleLogout","removeItem","toast","info","FaThLarge"],"sourceRoot":""}