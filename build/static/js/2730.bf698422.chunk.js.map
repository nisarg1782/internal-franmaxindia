{"version":3,"file":"static/js/2730.bf698422.chunk.js","mappings":"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","sources":["brand/EditProfileModal.jsx","brand/BrandProfile.jsx","brand/BrandDashboardHeader.jsx","brand/BrandSidebar.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { FaUndo, FaPhone, FaUser, FaEnvelope, FaBuilding, FaMapMarkerAlt, FaGlobe, FaCity, FaRupeeSign, FaInfoCircle, FaRocket, FaHandshake, FaMoneyBill, FaChartLine, FaClock, FaSquare } from 'react-icons/fa';\r\nimport './EditProfileModal.css';\r\nimport { getApiUrl } from '../utils/api';\r\n\r\n/**\r\n * EditBrandModal component for updating a brand's profile.\r\n * It displays editable fields and dynamic dropdowns for a user's brand profile.\r\n *\r\n * @param {object} brandData - The brand's current data to populate the form.\r\n * @param {function} onClose - Function to close the modal.\r\n * @param {function} onUpdate - Function to call after a successful update.\r\n */\r\nconst EditBrandModal = ({ brandData, onClose, onUpdate }) => {\r\n  const [activeTab, setActiveTab] = useState('personal');\r\n\r\n  // States for dropdown data\r\n  const [states, setStates] = useState([]);\r\n  const [cities, setCities] = useState([]);\r\n  const [masterCategories, setMasterCategories] = useState([]);\r\n  const [categories, setCategories] = useState([]);\r\n  const [subCategories, setSubCategories] = useState([]);\r\n  const [franchiseModels, setFranchiseModels] = useState([]);\r\n  const [franchiseTypes, setFranchiseTypes] = useState([]);\r\n\r\n  // Define the options for the dropdowns\r\n  const outletRanges = ['0-10', '11-50', '51-100', '100+'];\r\n  const yesNoOptions = ['Yes', 'No'];\r\n  const franchiseYearsOptions = ['1', '2', '3', '5', '10', '15'];\r\n\r\n  // Dropdown options based on the provided database schema\r\n  const requiredAreaOptions = ['100-500', '501-1500', '1501-2500', '2501-5000', '5000+'];\r\n  const investmentRangeOptions = ['250000-1000000', '1100000-2000000', '2100000-3500000', '3600000-5000000', '5000000-10000000', '10000000+'];\r\n  const expectedRoiOptions = ['15-20', '20-30', '30-40', '40-50', '50-60', '60-70', '70-80', '80-90', '90-100', '100+'];\r\n  const expectedPaybackOptions = ['0.5', '1', '1.5', '2' ,'2+'];\r\n\r\n  // State for showing success/error messages\r\n  const [message, setMessage] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  // Consolidated state for all form data with nested structure for master franchise details\r\n  const [formData, setFormData] = useState({\r\n    // Personal Info\r\n    name: brandData?.name || '',\r\n    email: brandData?.email || '',\r\n    mobile: brandData?.mobile || '',\r\n    address: brandData?.address || '',\r\n    description: brandData?.description || '',\r\n    bd_manager_name: brandData?.bd_manager_name || '',\r\n    bd_manager_email: brandData?.bd_manager_email || '',\r\n    bd_manager_contact: brandData?.bd_manager_contact || '',\r\n    state_id: brandData?.state_id || '',\r\n    city_id: brandData?.city_id || '',\r\n    mas_cat_id: brandData?.mas_cat_id || '',\r\n    cat_id: brandData?.cat_id || '',\r\n    sub_cat_id: brandData?.sub_cat_id || '',\r\n\r\n    // Business Summary\r\n    commenced_operations_year: brandData?.commenced_operations_year || '',\r\n    expansion_started_year: brandData?.expansion_started_year || '',\r\n    total_outlets: brandData?.total_outlets || '',\r\n    company_owned_outlets: brandData?.company_owned_outlets || '',\r\n    franchise_owned_outlets: brandData?.franchise_owned_outlets || '',\r\n    franchise_years: brandData?.franchise_years || '',\r\n    is_agreement_renewable: brandData?.is_agreement_renewable || '',\r\n    operations_manual_provided: brandData?.operations_manual_provided || '',\r\n    training_provided: brandData?.training_provided || '',\r\n    it_systems_included: brandData?.it_systems_included || '',\r\n    marketing_materials_provided: brandData?.marketing_materials_provided || '',\r\n    head_office_assistance: brandData?.head_office_assistance || '',\r\n\r\n    // Franchise Info\r\n    franchise_model: brandData?.franchise_model || '',\r\n    franchise_type_id: brandData?.franchise_type_id || '',\r\n    single_area: brandData?.required_area || '',\r\n    single_investment: brandData?.investment_range || '',\r\n    single_roi: brandData?.expected_roi || '',\r\n    single_payback: brandData?.expected_payback_period || '',\r\n\r\n    // Nested object for Master Franchise details by scope\r\n    master_scope: brandData?.master_scope || '',\r\n    master_franchise_details: {\r\n      country: {\r\n        area: brandData?.master_required_area_country || '',\r\n        investment: brandData?.master_investment_range_country || '',\r\n        roi: brandData?.master_expected_roi_country || '',\r\n        payback: brandData?.master_expected_payback_period_country || '',\r\n      },\r\n      state: {\r\n        area: brandData?.master_required_area_state || '',\r\n        investment: brandData?.master_investment_range_state || '',\r\n        roi: brandData?.master_expected_roi_state || '',\r\n        payback: brandData?.master_expected_payback_period_state || '',\r\n      },\r\n      city: {\r\n        area: brandData?.master_required_area_city || '',\r\n        investment: brandData?.master_investment_range_city || '',\r\n        roi: brandData?.master_expected_roi_city || '',\r\n        payback: brandData?.master_expected_payback_period_city || '',\r\n      },\r\n    },\r\n\r\n    master_franchise_state_ids: brandData?.master_franchise_state_ids?.split(',') || [],\r\n    master_franchise_city_ids: brandData?.master_franchise_city_ids?.split(',') || [],\r\n\r\n    // Expansion Tab\r\n    expansion_state_ids: brandData?.expansion_state_ids?.split(',') || [],\r\n    expansion_city_ids: brandData?.expansion_city_ids?.split(',') || [],\r\n  });\r\n\r\n  // Effect to update formData if brandData prop changes\r\n  useEffect(() => {\r\n    if (brandData) {\r\n      setFormData({\r\n        // ... (other fields remain the same)\r\n        name: brandData.name || '',\r\n        email: brandData.email || '',\r\n        mobile: brandData.mobile || '',\r\n        address: brandData.address || '',\r\n        description: brandData.description || '',\r\n        bd_manager_name: brandData.bd_manager_name || '',\r\n        bd_manager_email: brandData.bd_manager_email || '',\r\n        bd_manager_contact: brandData.bd_manager_contact || '',\r\n        state_id: brandData.state_id || '',\r\n        city_id: brandData.city_id || '',\r\n        mas_cat_id: brandData.mas_cat_id || '',\r\n        cat_id: brandData.cat_id || '',\r\n        sub_cat_id: brandData.sub_cat_id || '',\r\n        commenced_operations_year: brandData.commenced_operations_year || '',\r\n        expansion_started_year: brandData.expansion_started_year || '',\r\n        total_outlets: brandData.total_outlets || '',\r\n        company_owned_outlets: brandData.company_owned_outlets || '',\r\n        franchise_owned_outlets: brandData.franchise_owned_outlets || '',\r\n        franchise_years: brandData.franchise_years || '',\r\n        is_agreement_renewable: brandData.is_agreement_renewable || '',\r\n        operations_manual_provided: brandData.operations_manual_provided || '',\r\n        training_provided: brandData.training_provided || '',\r\n        it_systems_included: brandData.it_systems_included || '',\r\n        marketing_materials_provided: brandData.marketing_materials_provided || '',\r\n        head_office_assistance: brandData.head_office_assistance || '',\r\n        franchise_model: brandData.franchise_model || '',\r\n        franchise_type_id: brandData.franchise_type_id || '',\r\n        single_area: brandData.required_area || '',\r\n        single_investment: brandData.investment_range || '',\r\n        single_roi: brandData.expected_roi || '',\r\n        single_payback: brandData.expected_payback_period || '',\r\n\r\n        master_scope: brandData.master_scope || '',\r\n        master_franchise_details: {\r\n          country: {\r\n            area: brandData?.master_required_area_country || '',\r\n            investment: brandData?.master_investment_range_country || '',\r\n            roi: brandData?.master_expected_roi_country || '',\r\n            payback: brandData?.master_expected_payback_period_country || '',\r\n          },\r\n          state: {\r\n            area: brandData?.master_required_area_state || '',\r\n            investment: brandData?.master_investment_range_state || '',\r\n            roi: brandData?.master_expected_roi_state || '',\r\n            payback: brandData?.master_expected_payback_period_state || '',\r\n          },\r\n          city: {\r\n            area: brandData?.master_required_area_city || '',\r\n            investment: brandData?.master_investment_range_city || '',\r\n            roi: brandData?.master_expected_roi_city || '',\r\n            payback: brandData?.master_expected_payback_period_city || '',\r\n          },\r\n        },\r\n\r\n        master_franchise_state_ids: brandData.master_franchise_state_ids?.split(',') || [],\r\n        master_franchise_city_ids: brandData.master_franchise_city_ids?.split(',') || [],\r\n\r\n        expansion_state_ids: brandData.expansion_state_ids?.split(',') || [],\r\n        expansion_city_ids: brandData.expansion_city_ids?.split(',') || [],\r\n      });\r\n    }\r\n  }, [brandData]);\r\n\r\n  // --- Data Fetching Hooks ---\r\n  useEffect(() => {\r\n    // Fetch static data once\r\n    const fetchData = async () => {\r\n      try {\r\n        const [statesRes, masterCatRes, modelsRes, typesRes] = await Promise.all([\r\n          axios.get(getApiUrl('get-indian-states.php')),\r\n          axios.get(getApiUrl('get-master-category.php')),\r\n          axios.get(getApiUrl('get-modals.php')),\r\n          axios.get(getApiUrl('get-franchise-type.php')),\r\n        ]);\r\n\r\n        setStates(statesRes.data);\r\n        setMasterCategories(masterCatRes.data);\r\n        setFranchiseModels(modelsRes.data.success ? modelsRes.data.data : []);\r\n        setFranchiseTypes(typesRes.data.success ? typesRes.data.data : []);\r\n      } catch (err) {\r\n        console.error('Error fetching initial data:', err);\r\n      }\r\n    };\r\n    fetchData();\r\n  }, []);\r\n\r\n  // Fetch cities based on a single selected state ID\r\n  useEffect(() => {\r\n    if (formData.state_id) {\r\n      axios.get(getApiUrl(`get-cities.php?state_id=${formData.state_id}`))\r\n        .then(res => setCities(res.data))\r\n        .catch(err => console.error('Error fetching cities:', err));\r\n    } else {\r\n      setCities([]);\r\n    }\r\n  }, [formData.state_id]);\r\n\r\n  // Fetch categories whenever the selected master category changes\r\n  useEffect(() => {\r\n    if (formData.mas_cat_id) {\r\n      setFormData(prev => ({ ...prev, cat_id: '', sub_cat_id: '' }));\r\n      setSubCategories([]);\r\n\r\n      axios.get(getApiUrl(`get-category.php?mas_cat_id=${formData.mas_cat_id}`))\r\n        .then(res => setCategories(res.data))\r\n        .catch(err => console.error('Error fetching categories:', err));\r\n    } else {\r\n      setCategories([]);\r\n      setFormData(prev => ({ ...prev, cat_id: '', sub_cat_id: '' }));\r\n      setSubCategories([]);\r\n    }\r\n  }, [formData.mas_cat_id]);\r\n\r\n  // Fetch sub-categories whenever the selected category changes\r\n  useEffect(() => {\r\n    if (formData.cat_id) {\r\n      setFormData(prev => ({ ...prev, sub_cat_id: '' }));\r\n      axios.get(getApiUrl(`get-sub-category.php?cat_id=${formData.cat_id}`))\r\n        .then(res => setSubCategories(res.data))\r\n        .catch(err => console.error('Error fetching sub-categories:', err));\r\n    } else {\r\n      setSubCategories([]);\r\n    }\r\n  }, [formData.cat_id]);\r\n\r\n  // Handle changes to form inputs, including text fields and selects\r\n  const handleFormChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData(prev => ({ ...prev, [name]: value }));\r\n  };\r\n\r\n  const handleMasterFranchiseChange = (scope, name, value) => {\r\n    setFormData(prev => ({\r\n      ...prev,\r\n      master_franchise_details: {\r\n        ...prev.master_franchise_details,\r\n        [scope]: {\r\n          ...prev.master_franchise_details[scope],\r\n          [name]: value\r\n        }\r\n      }\r\n    }));\r\n  };\r\n\r\n  // Generic handler for multi-select checkboxes\r\n  const handleMultiSelectChange = (field, id) => {\r\n    setFormData(prev => {\r\n      const currentIds = prev[field];\r\n      const updatedIds = currentIds.includes(id)\r\n        ? currentIds.filter(item => item !== id)\r\n        : [...currentIds, id];\r\n      return { ...prev, [field]: updatedIds };\r\n    });\r\n  };\r\n\r\n  const handleSave = async () => {\r\n    setIsLoading(true);\r\n    setMessage(null);\r\n\r\n  \r\n    // Prepare the payload by converting multi-select arrays to comma-separated strings\r\n    // and merging the correct master franchise details\r\n    const masterFranchiseDetails = formData.master_franchise_details[formData.master_scope?.toLowerCase()] || {};\r\n\r\n    \r\n\r\n    // Create a comprehensive payload with all form data\r\n    const payload = {\r\n      // Brand ID\r\n      id: brandData.id,\r\n\r\n      // Personal Information\r\n      name: formData.name,\r\n      email: formData.email,\r\n      mobile: formData.mobile,\r\n      address: formData.address,\r\n      description: formData.description,\r\n\r\n      // Manager Information\r\n      bd_manager_name: formData.bd_manager_name,\r\n      bd_manager_email: formData.bd_manager_email,\r\n      bd_manager_contact: formData.bd_manager_contact,\r\n\r\n      // Location Information\r\n      state_id: formData.state_id,\r\n      city_id: formData.city_id,\r\n\r\n      // Category Information\r\n      mas_cat_id: formData.mas_cat_id,\r\n      cat_id: formData.cat_id,\r\n      sub_cat_id: formData.sub_cat_id,\r\n\r\n      // Business Summary Information\r\n      franchise_fee: formData.franchise_fee,\r\n      commenced_operations_year: formData.commenced_operations_year,\r\n      expansion_started_year: formData.expansion_started_year,\r\n      total_outlets: formData.total_outlets,\r\n      company_owned_outlets: formData.company_owned_outlets,\r\n      franchise_owned_outlets: formData.franchise_owned_outlets,\r\n      franchise_years: formData.franchise_years,\r\n      is_agreement_renewable: formData.is_agreement_renewable,\r\n      operations_manual_provided: formData.operations_manual_provided,\r\n      training_provided: formData.training_provided,\r\n      it_systems_included: formData.it_systems_included,\r\n      marketing_materials_provided: formData.marketing_materials_provided,\r\n      head_office_assistance: formData.head_office_assistance,\r\n\r\n      // Franchise Model and Type\r\n      franchise_model: formData.franchise_model,\r\n      franchise_type_id: formData.franchise_type_id,\r\n\r\n      // Single Unit Franchise Details (mapped to original column names)\r\n      single_required_area: formData.single_area,\r\n      single_investment_range: formData.single_investment,\r\n      single_expected_roi: formData.single_roi,\r\n      single_expected_payback_period: formData.single_payback,\r\n\r\n      // Master Franchise Information\r\n      master_scope: formData.master_scope,\r\n\r\n      // Master Franchise Details (mapped based on selected scope)\r\n      // master_required_area: masterFranchiseDetails.area,\r\n      // master_investment_range: masterFranchiseDetails.investment,\r\n      // master_expected_roi: masterFranchiseDetails.roi,\r\n      // master_expected_payback_period: masterFranchiseDetails.payback,\r\n\r\n      // Master Franchise Country Details\r\n      master_required_area_country: formData.master_franchise_details.country?.area,\r\n      master_investment_range_country: formData.master_franchise_details.country?.investment,\r\n      master_expected_roi_country: formData.master_franchise_details.country?.roi,\r\n      master_expected_payback_period_country: formData.master_franchise_details.country?.payback,\r\n\r\n      // Master Franchise State Details\r\n      master_required_area_state: formData.master_franchise_details.state?.area,\r\n      master_investment_range_state: formData.master_franchise_details.state?.investment,\r\n      master_expected_roi_state: formData.master_franchise_details.state?.roi,\r\n      master_expected_payback_period_state: formData.master_franchise_details.state?.payback,\r\n\r\n      // Master Franchise City Details\r\n      master_required_area_city: formData.master_franchise_details.city?.area,\r\n      master_investment_range_city: formData.master_franchise_details.city?.investment,\r\n      master_expected_roi_city: formData.master_franchise_details.city?.roi,\r\n      master_expected_payback_period_city: formData.master_franchise_details.city?.payback,\r\n\r\n      // Multi-select arrays converted to comma-separated strings\r\n      expansion_state_ids: formData.expansion_state_ids.join(','),\r\n      expansion_city_ids: formData.expansion_city_ids.join(','),\r\n      master_franchise_state_ids: formData.master_franchise_state_ids.join(','),\r\n      master_franchise_city_ids: formData.master_franchise_city_ids.join(','),\r\n    };\r\n\r\n    // Log the complete payload structure\r\n    console.log(\"=== COMPLETE PAYLOAD STRUCTURE ===\");\r\n  \r\n    console.log(\"Full payload:\", payload);\r\n    try {\r\n      // console.log(\"=== MAKING API CALL ===\");\r\n      // console.log(\"API URL: http://localhost/react-api/simple-api.php\");\r\n      // console.log(\"Request method: POST\");\r\n      console.log(\"Request data:\", payload);\r\n      const response = await axios.post(getApiUrl('simple-api.php'), payload);\r\n\r\n      // console.log(\"=== API RESPONSE ===\");\r\n      // console.log(\"Response status:\", response.status);\r\n      // console.log(\"Response headers:\", response.headers);\r\n      // console.log(\"Response data:\", response.data);\r\n      // console.log(\"Response success:\", response.data?.success);\r\n      // console.log(\"Response message:\", response.data?.message);\r\n      // console.log(\"Response brand data:\", response.data?.data);\r\n\r\n      setMessage(null);\r\n      if (response.data.success) {\r\n        // console.log(\"✅ SUCCESS: Profile updated successfully\");\r\n        setMessage({ type: 'success', text: '✅ Profile updated successfully!' });\r\n        // onUpdate(response.data.data);\r\n        setTimeout(onClose, 1500);\r\n      } else {\r\n        // console.log(\"❌ API ERROR:\", response.data.message);\r\n        setMessage({ type: 'success', text: `✅ ${response.data.message}` });\r\n      }\r\n    } catch (err) {\r\n      console.log(\"=== API REQUEST ERROR ===\");\r\n      console.error(\"Error object:\", err);\r\n      // console.error(\"Error message:\", err.message);\r\n      // console.error(\"Error response:\", err.response);\r\n      // console.error(\"Error request:\", err.request);\r\n      if (err.response) {\r\n        console.log(\"Error response data:\", err.response.data);\r\n        // console.log(\"Error response status:\", err.response.status);\r\n        // console.log(\"Error response headers:\", err.response.headers);\r\n      }\r\n\r\n      setMessage({ type: 'error', text: '❌ An error occurred while saving. Please try again.' });\r\n    } finally {\r\n      setIsLoading(false);\r\n      console.log(\"=== SAVE PROCESS COMPLETED ===\");\r\n    }\r\n  };\r\n  // Helper function to render master franchise details for a specific scope\r\n  const renderMasterFranchiseFields = (scope) => {\r\n    // Safely access the details for the given scope, defaulting to an empty object\r\n    const details = formData.master_franchise_details?.[scope.toLowerCase()] || {};\r\n    return (\r\n      <>\r\n        <div className=\"form-group\">\r\n          <label><FaSquare /> Required Area (sq. ft.)</label>\r\n          <select\r\n            name=\"area\"\r\n            value={details.area || ''} // Use default empty string to handle undefined\r\n            onChange={(e) => handleMasterFranchiseChange(scope.toLowerCase(), e.target.name, e.target.value)}\r\n          >\r\n            <option value=\"\">-- Select --</option>\r\n            {requiredAreaOptions.map(option => <option key={option} value={option}>{option}</option>)}\r\n          </select>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label><FaMoneyBill /> Investment Range (₹)</label>\r\n          <select\r\n            name=\"investment\"\r\n            value={details.investment || ''} // Use default empty string\r\n            onChange={(e) => handleMasterFranchiseChange(scope.toLowerCase(), e.target.name, e.target.value)}\r\n          >\r\n            <option value=\"\">-- Select --</option>\r\n            {investmentRangeOptions.map(option => <option key={option} value={option}>{option}</option>)}\r\n          </select>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label><FaChartLine /> Expected ROI (%)</label>\r\n          <select\r\n            name=\"roi\"\r\n            value={details.roi || ''} // Use default empty string\r\n            onChange={(e) => handleMasterFranchiseChange(scope.toLowerCase(), e.target.name, e.target.value)}\r\n          >\r\n            <option value=\"\">-- Select --</option>\r\n            {expectedRoiOptions.map(option => <option key={option} value={option}>{option}</option>)}\r\n          </select>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label><FaClock /> Expected Payback Period</label>\r\n          <select\r\n            name=\"payback\"\r\n            value={details.payback || ''} // Use default empty string\r\n            onChange={(e) => handleMasterFranchiseChange(scope.toLowerCase(), e.target.name, e.target.value)}\r\n          >\r\n            <option value=\"\">-- Select --</option>\r\n            {expectedPaybackOptions.map(option => <option key={option} value={option}>{option}</option>)}\r\n          </select>\r\n        </div>\r\n      </>\r\n    );\r\n  };\r\n\r\n  const renderPersonalInfoTab = () => (\r\n    <div className=\"form-grid\">\r\n      <div className=\"form-group\"><label><FaBuilding /> Brand Name</label><input type=\"text\" name=\"name\" value={formData.name} onChange={handleFormChange} /></div>\r\n      <div className=\"form-group\"><label><FaEnvelope /> Email</label><input type=\"text\" name=\"email\" value={formData.email} onChange={handleFormChange} /></div>\r\n      <div className=\"form-group\"><label><FaPhone /> Phone</label><input type=\"text\" name=\"mobile\" value={formData.mobile} onChange={handleFormChange} /></div>\r\n      <div className=\"form-group\">\r\n        <label><FaGlobe /> Master Category</label>\r\n        <select name=\"mas_cat_id\" value={formData.mas_cat_id} onChange={handleFormChange}>\r\n          <option value=\"\">-- Select --</option>\r\n          {masterCategories.map(cat => <option key={cat.mas_cat_id} value={cat.mas_cat_id}>{cat.mas_cat_name}</option>)}\r\n        </select>\r\n      </div>\r\n      <div className=\"form-group\">\r\n        <label>Category</label>\r\n        <select name=\"cat_id\" value={formData.cat_id} onChange={handleFormChange} disabled={!formData.mas_cat_id}>\r\n          <option value=\"\">-- Select --</option>\r\n          {categories.map(cat => <option key={cat.cat_id} value={cat.cat_id}>{cat.cat_name}</option>)}\r\n        </select>\r\n      </div>\r\n      <div className=\"form-group\">\r\n        <label>Sub-Category</label>\r\n        <select name=\"sub_cat_id\" value={formData.sub_cat_id} onChange={handleFormChange} disabled={!formData.cat_id}>\r\n          <option value=\"\">-- Select --</option>\r\n          {subCategories.map(cat => <option key={cat.subcat_id} value={cat.subcat_id}>{cat.subcat_name}</option>)}\r\n        </select>\r\n      </div>\r\n      <div className=\"form-group\">\r\n        <label><FaMapMarkerAlt /> State</label>\r\n        <select name=\"state_id\" value={formData.state_id} onChange={handleFormChange}>\r\n          <option value=\"\">-- Select --</option>\r\n          {states.map(state => <option key={state.id} value={state.id}>{state.name}</option>)}\r\n        </select>\r\n      </div>\r\n      <div className=\"form-group\">\r\n        <label><FaCity /> City</label>\r\n        <select name=\"city_id\" value={formData.city_id} onChange={handleFormChange} disabled={!formData.state_id}>\r\n          <option value=\"\">-- Select --</option>\r\n          {cities.map(city => <option key={city.id} value={city.id}>{city.name}</option>)}\r\n        </select>\r\n      </div>\r\n      <div className=\"form-group\"><label><FaUser /> Manager Name</label><input type=\"text\" name=\"bd_manager_name\" value={formData.bd_manager_name} onChange={handleFormChange} /></div>\r\n      <div className=\"form-group\"><label><FaEnvelope /> Manager Email</label><input type=\"text\" name=\"bd_manager_email\" value={formData.bd_manager_email} onChange={handleFormChange} /></div>\r\n      <div className=\"form-group\"><label><FaPhone /> Manager Contact</label><input type=\"text\" name=\"bd_manager_contact\" value={formData.bd_manager_contact} onChange={handleFormChange} /></div>\r\n      <div className=\"form-group full\"><label><FaMapMarkerAlt /> Address</label><textarea name=\"address\" value={formData.address} onChange={handleFormChange} /></div>\r\n      <div className=\"form-group full\"><label><FaMapMarkerAlt /> Description</label><textarea name=\"description\" value={formData.description} onChange={handleFormChange} /></div>\r\n    </div>\r\n  );\r\n\r\n  const renderBusinessSummaryTab = () => (\r\n    <div className=\"form-grid\">\r\n       <div className=\"form-group\"><label><FaBuilding />Franchise Fee</label><input type=\"text\" name=\"franchise_fee\" value={formData.franchise_fee} onChange={handleFormChange} /></div>\r\n      <div className=\"form-group\">\r\n        <label>Year of Commenced Operations</label>\r\n        <input type=\"number\" min=\"1900\" max={new Date().getFullYear()} name=\"commenced_operations_year\" value={formData.commenced_operations_year} onChange={handleFormChange} placeholder=\"e.g., 2020\" />\r\n      </div>\r\n      <div className=\"form-group\">\r\n        <label>Year of Expansion Started</label>\r\n        <input type=\"number\" min=\"1900\" max={new Date().getFullYear()} name=\"expansion_started_year\" value={formData.expansion_started_year} onChange={handleFormChange} placeholder=\"e.g., 2022\" />\r\n      </div>\r\n      <div className=\"form-group\">\r\n        <label>Total Outlets</label>\r\n        <select name=\"total_outlets\" value={formData.total_outlets} onChange={handleFormChange}>\r\n          <option value=\"\">-- Select --</option>\r\n          {outletRanges.map(range => <option key={range} value={range}>{range}</option>)}\r\n        </select>\r\n      </div>\r\n      <div className=\"form-group\">\r\n        <label>Company Owned Outlets</label>\r\n        <select name=\"company_owned_outlets\" value={formData.company_owned_outlets} onChange={handleFormChange}>\r\n          <option value=\"\">-- Select --</option>\r\n          {outletRanges.map(range => <option key={range} value={range}>{range}</option>)}\r\n        </select>\r\n      </div>\r\n      <div className=\"form-group\">\r\n        <label>Franchise Owned Outlets</label>\r\n        <select name=\"franchise_owned_outlets\" value={formData.franchise_owned_outlets} onChange={handleFormChange}>\r\n          <option value=\"\">-- Select --</option>\r\n          {outletRanges.map(range => <option key={range} value={range}>{range}</option>)}\r\n        </select>\r\n      </div>\r\n      <div className=\"form-group\">\r\n        <label>Franchise Years</label>\r\n        <select name=\"franchise_years\" value={formData.franchise_years} onChange={handleFormChange}>\r\n          <option value=\"\">-- Select --</option>\r\n          {franchiseYearsOptions.map(option => <option key={option} value={option}>{option}</option>)}\r\n        </select>\r\n      </div>\r\n      <div className=\"form-group\">\r\n        <label>Is Agreement Renewable?</label>\r\n        <select name=\"is_agreement_renewable\" value={formData.is_agreement_renewable} onChange={handleFormChange}>\r\n          <option value=\"\">-- Select --</option>\r\n          {yesNoOptions.map(option => <option key={option} value={option}>{option}</option>)}\r\n        </select>\r\n      </div>\r\n      <div className=\"form-group\">\r\n        <label>Operations Manual Provided?</label>\r\n        <select name=\"operations_manual_provided\" value={formData.operations_manual_provided} onChange={handleFormChange}>\r\n          <option value=\"\">-- Select --</option>\r\n          {yesNoOptions.map(option => <option key={option} value={option}>{option}</option>)}\r\n        </select>\r\n      </div>\r\n      <div className=\"form-group\">\r\n        <label>Training Provided?</label>\r\n        <select name=\"training_provided\" value={formData.training_provided} onChange={handleFormChange}>\r\n          <option value=\"\">-- Select --</option>\r\n          {yesNoOptions.map(option => <option key={option} value={option}>{option}</option>)}\r\n        </select>\r\n      </div>\r\n      <div className=\"form-group\">\r\n        <label>IT Systems Included?</label>\r\n        <select name=\"it_systems_included\" value={formData.it_systems_included} onChange={handleFormChange}>\r\n          <option value=\"\">-- Select --</option>\r\n          {yesNoOptions.map(option => <option key={option} value={option}>{option}</option>)}\r\n        </select>\r\n      </div>\r\n      <div className=\"form-group\">\r\n        <label>Marketing Materials Provided?</label>\r\n        <select name=\"marketing_materials_provided\" value={formData.marketing_materials_provided} onChange={handleFormChange}>\r\n          <option value=\"\">-- Select --</option>\r\n          {yesNoOptions.map(option => <option key={option} value={option}>{option}</option>)}\r\n        </select>\r\n      </div>\r\n      <div className=\"form-group\">\r\n        <label>Head Office Assistance?</label>\r\n        <select name=\"head_office_assistance\" value={formData.head_office_assistance} onChange={handleFormChange}>\r\n          <option value=\"\">-- Select --</option>\r\n          {yesNoOptions.map(option => <option key={option} value={option}>{option}</option>)}\r\n        </select>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  const renderFranchiseInfoTab = () => {\r\n    const selectedFranchiseType = franchiseTypes.find(type => type.id === formData.franchise_type_id);\r\n    const isSingleUnit = selectedFranchiseType?.name === 'Single Unit';\r\n    const isMaster = selectedFranchiseType?.name === 'Master Franchise';\r\n    const isBoth = selectedFranchiseType?.name === 'Both';\r\n    const isMasterOrBoth = isMaster || isBoth;\r\n\r\n    return (\r\n      <div className=\"form-grid\">\r\n        <div className=\"form-group\">\r\n          <label><FaHandshake /> Franchise Model</label>\r\n          <select name=\"franchise_model\" value={formData.franchise_model} onChange={handleFormChange}>\r\n            <option value=\"\">-- Select --</option>\r\n            {franchiseModels.map(model => <option key={model.id} value={model.id}>{model.name}</option>)}\r\n          </select>\r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n          <label><FaHandshake /> Franchise Type</label>\r\n          <select name=\"franchise_type_id\" value={formData.franchise_type_id} onChange={handleFormChange}>\r\n            <option value=\"\">-- Select --</option>\r\n            {franchiseTypes.map(type => (\r\n              <option key={type.id} value={type.id}>\r\n                {type.name}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n\r\n        {(isSingleUnit || isBoth) && (\r\n          <>\r\n            <h3>Single Unit Details</h3>\r\n            <div className=\"form-group\">\r\n              <label><FaSquare /> Required Area (sq. ft.)</label>\r\n              <select name=\"single_area\" value={formData.single_area} onChange={handleFormChange}>\r\n                <option value=\"\">-- Select --</option>\r\n                {requiredAreaOptions.map(option => <option key={option} value={option}>{option}</option>)}\r\n              </select>\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label><FaMoneyBill /> Investment Range (₹)</label>\r\n              <select name=\"single_investment\" value={formData.single_investment} onChange={handleFormChange}>\r\n                <option value=\"\">-- Select --</option>\r\n                {investmentRangeOptions.map(option => <option key={option} value={option}>{option}</option>)}\r\n              </select>\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label><FaChartLine /> Expected ROI (%)</label>\r\n              <select name=\"single_roi\" value={formData.single_roi} onChange={handleFormChange}>\r\n                <option value=\"\">-- Select --</option>\r\n                {expectedRoiOptions.map(option => <option key={option} value={option}>{option}</option>)}\r\n              </select>\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label><FaClock /> Expected Payback Period</label>\r\n              <select name=\"single_payback\" value={formData.single_payback} onChange={handleFormChange}>\r\n                <option value=\"\">-- Select --</option>\r\n                {expectedPaybackOptions.map(option => <option key={option} value={option}>{option}</option>)}\r\n              </select>\r\n            </div>\r\n          </>\r\n        )}\r\n\r\n        {isMasterOrBoth && (\r\n          <>\r\n            <h3>Master Franchise Details</h3>\r\n\r\n\r\n\r\n            {/* Country Wise Section */}\r\n            <h4>Country Wise</h4>\r\n            {renderMasterFranchiseFields('Country')}\r\n\r\n            {/* State Wise Section */}\r\n            <h4>State Wise</h4>\r\n            {renderMasterFranchiseFields('State')}\r\n\r\n            {/* City Wise Section */}\r\n            <h4>City Wise</h4>\r\n            {renderMasterFranchiseFields('City')}\r\n\r\n            {/* Master Franchise Target States */}\r\n\r\n\r\n            {/* Master Franchise Target Cities */}\r\n\r\n          </>\r\n        )}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const renderExpansionTab = () => (\r\n    <div className=\"form-grid\">\r\n      <div className=\"form-group full\">\r\n        <label><FaMapMarkerAlt /> Target States</label>\r\n        <div className=\"multi-select-container\">\r\n          {states.map(state => (\r\n            <label key={state.id} className=\"checkbox-label\">\r\n              <input type=\"checkbox\" value={state.id} checked={formData.expansion_state_ids.includes(state.id)} onChange={() => handleMultiSelectChange('expansion_state_ids', state.id)} />\r\n              {state.name}\r\n            </label>\r\n          ))}\r\n        </div>\r\n      </div>\r\n      {formData.expansion_state_ids.length > 0 && (\r\n        <div className=\"form-group full\">\r\n          <label><FaCity /> Target Cities</label>\r\n          <div className=\"multi-select-container\">\r\n            {cities.map(city => (\r\n              <label key={city.id} className=\"checkbox-label\">\r\n                <input type=\"checkbox\" value={city.id} checked={formData.expansion_city_ids.includes(city.id)} onChange={() => handleMultiSelectChange('expansion_city_ids', city.id)} />\r\n                {city.name}\r\n              </label>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div className=\"modal-overlay\">\r\n      <div className=\"edit-profile-modal\">\r\n        <div className=\"modal-header\">\r\n          <h2>Edit Brand Profile</h2>\r\n          <button className=\"close-btn\" onClick={onClose}>×</button>\r\n        </div>\r\n        <div className=\"modal-tabs\">\r\n          <button onClick={() => setActiveTab('personal')} className={activeTab === 'personal' ? 'active' : ''}>Personal Info</button>\r\n          <button onClick={() => setActiveTab('business-summary')} className={activeTab === 'business-summary' ? 'active' : ''}>Business Summary</button>\r\n          <button onClick={() => setActiveTab('franchise-info')} className={activeTab === 'franchise-info' ? 'active' : ''}>Franchise Info</button>\r\n          <button onClick={() => setActiveTab('expansion')} className={activeTab === 'expansion' ? 'active' : ''}>Expansion</button>\r\n        </div>\r\n        <div className=\"modal-body\">\r\n          {activeTab === 'personal' && renderPersonalInfoTab()}\r\n          {activeTab === 'business-summary' && renderBusinessSummaryTab()}\r\n          {activeTab === 'franchise-info' && renderFranchiseInfoTab()}\r\n          {activeTab === 'expansion' && renderExpansionTab()}\r\n        </div>\r\n        {isLoading && <div className=\"alert info\">Saving changes...</div>}\r\n        {message && <div className={`alert ${message.type}`}>{message.text}</div>}\r\n        <div className=\"modal-footer\">\r\n          <button className=\"btn cancel\" onClick={onClose}><FaUndo /> Cancel</button>\r\n          <button className=\"btn save\" onClick={handleSave} disabled={isLoading}>Save Changes</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EditBrandModal;","import React, { useEffect, useState } from 'react';\r\nimport './BrandProfile.css';\r\nimport BrandSidebar from './BrandSidebar';\r\nimport EditProfileModal from './EditProfileModal';\r\nimport BrandDashboardHeader from './BrandDashboardHeader';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { getApiUrl } from '../utils/api';\r\n\r\nconst BrandProfile = () => {\r\n    const [brandData, setBrandData] = useState(null);\r\n    const [showModal, setShowModal] = useState(false);\r\n    const [brandId, setBrandId] = useState(null);\r\n    const navigate = useNavigate();\r\n\r\n    // Effect to get the brandId from the session on component load\r\n    useEffect(() => {\r\n        let idFromSession = null;\r\n        try {\r\n            const sessionString = localStorage.getItem('userSession');\r\n            if (sessionString) {\r\n                const sessionData = JSON.parse(sessionString);\r\n                if (sessionData && sessionData.id) {\r\n                    idFromSession = sessionData.id;\r\n                }\r\n            }\r\n        } catch (error) {\r\n            console.error(\"Failed to parse user session:\", error);\r\n        }\r\n\r\n        if (idFromSession) {\r\n            setBrandId(idFromSession);\r\n        } else {\r\n            // setBrandId(4);\r\n            // If no valid brand ID is found in the session,\r\n            // you should redirect the user to a login page or an error page.\r\n            // console.error(\"No valid brand ID found. Redirecting to login.\");\r\n            navigate('/'); // Assuming you have a '/login' route\r\n        }\r\n    }, [navigate]);\r\n\r\n    // Effect to fetch data, dependent on brandId being available\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            if (!brandId) return; // Don't fetch if brandId isn't set yet\r\n\r\n            try {\r\n                const res = await fetch(getApiUrl(`get-brand-profile.php?brand_id=${brandId}`));\r\n                const data = await res.json();\r\n                \r\n                if (data && !data.error) {\r\n                    setBrandData(data);\r\n                } else {\r\n                    console.error('Fetch brand error:', data.error);\r\n                }\r\n            } catch (err) {\r\n                console.error('Network or parsing error:', err);\r\n            }\r\n        };\r\n\r\n        fetchData();\r\n    }, [brandId]);\r\n\r\n    if (!brandData) {\r\n        return (\r\n            <div className=\"brand-crm-container\">\r\n                <BrandSidebar />\r\n                <div className=\"profile-main\">\r\n                    <p>Loading brand profile...</p>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div className=\"brand-crm-container\">\r\n            <BrandSidebar />\r\n            <div className=\"profile-main\">\r\n                <BrandDashboardHeader />\r\n                <div className=\"profile-container\">\r\n                    <div className=\"profile-card\">\r\n                        <div className=\"profile-avatar\">\r\n                            {/* You can add an image here once you have the logo data */}\r\n                            {/* <img src={`http://localhost/images/${brandData.logo}`} alt=\"Logo\" /> */}\r\n                        </div>\r\n                        <div className=\"profile-info\">\r\n                            <h2>{brandData.name}</h2>\r\n                            <div className=\"profile-fields\">\r\n                                <div><strong>Email:</strong> {brandData.email}</div>\r\n                                <div><strong>Mobile:</strong> {brandData.mobile}</div>\r\n                                <div><strong>State:</strong> {brandData.state_name}</div>\r\n                                <div><strong>City:</strong> {brandData.city_name}</div>\r\n                                <div><strong>Master Category:</strong> {brandData.master_category_name}</div>\r\n                            </div>\r\n                            <button className=\"edit-profile-btn\" onClick={() => setShowModal(true)}>\r\n                                Edit Profile\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                {showModal && (\r\n                    <EditProfileModal\r\n                        brandData={brandData}\r\n                        onClose={() => setShowModal(false)}\r\n                    />\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default BrandProfile;","import React, { useState, useEffect } from 'react';\r\nimport './brandDashboard.css';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst BrandDashboardHeader = () => {\r\n    // State to store the brand name, with a default fallback value.\r\n    const [brandName, setBrandName] = useState('Brand');\r\n      const navigate = useNavigate();\r\n\r\n    useEffect(() => {\r\n        try {\r\n            // Retrieve the session data from localStorage.\r\n            const sessionString = localStorage.getItem('userSession');\r\n            \r\n            if (sessionString) {\r\n                // If a session string exists, parse it.\r\n                const sessionData = JSON.parse(sessionString);\r\n                \r\n                // Check if the parsed data is valid and contains a name.\r\n                // The '|| \"Brand\"' part is a safeguard. If sessionData.name is undefined, null,\r\n                // or an empty string, it will default to \"Brand\".\r\n                setBrandName(sessionData.name || 'Brand');\r\n            }\r\n            else{\r\n                navigate(\"/\")\r\n            //    setBrandName( 'Brand');\r\n            }\r\n        } catch (error) {\r\n            // Handle cases where localStorage is not accessible or the JSON is malformed.\r\n            console.error(\"Failed to retrieve or parse user session:\", error);\r\n            // In case of an error, the state will remain its default value of 'Brand'.\r\n        }\r\n    }, []); // The empty dependency array ensures this effect runs only once on component mount.\r\n\r\n    return (\r\n        <header className=\"brand-header\">\r\n            {/* Display the personalized greeting using the state variable */}\r\n            <h1>Welcome, {brandName}!</h1>\r\n        </header>\r\n    );\r\n};\r\n\r\nexport default BrandDashboardHeader;","// src/brand/BrandSidebar.jsx\r\nimport React, { useState } from 'react';\r\nimport './brandDashboard.css';\r\nimport { Link } from 'react-router-dom';\r\nimport { FaBars, FaTimes } from 'react-icons/fa';\r\n\r\nconst BrandSidebar = () => {\r\n  const [isOpen, setIsOpen] = useState(true);\r\n\r\n  const toggleSidebar = () => {\r\n    setIsOpen(!isOpen);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className={`brand-sidebar ${isOpen ? 'open' : 'collapsed'}`}>\r\n        <div className=\"sidebar-header\">\r\n          {isOpen ? 'Brand CRM' : ''}\r\n          <button className=\"toggle-btn\" onClick={toggleSidebar}>\r\n            {isOpen ? <FaTimes /> : <FaBars />}\r\n          </button>\r\n        </div>\r\n        <ul className=\"sidebar-menu\">\r\n          <li><Link to=\"/brand/dashboard\">🏠 {isOpen && 'Dashboard'}</Link></li>\r\n          <li><Link to=\"/brand/inquiries\">📨 {isOpen && 'Inquiries'}</Link></li>\r\n          \r\n          {/* ✅ Upload Docs link */}\r\n          <li><Link to=\"/brand/upload-docs\">📁 {isOpen && 'Upload Docs'}</Link></li>\r\n\r\n\r\n          <div className=\"sidebar-divider\" /> {/* Divider line */}\r\n\r\n          <li><Link to=\"/brand/profile\">👤 {isOpen && 'Profile'}</Link></li>\r\n          <li><Link to=\"/pricing\">💼 {isOpen && 'Pricing'}</Link></li>\r\n          <li>\r\n            <a href=\"#\" onClick={() => {\r\n              localStorage.clear(); // or your logout logic\r\n              window.location.href = '/'; // redirect\r\n            }}>\r\n              🚪 {isOpen && 'Logout'}\r\n            </a>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BrandSidebar;\r\n"],"names":["_ref","_brandData$master_fra","_brandData$master_fra2","_brandData$expansion_","_brandData$expansion_2","brandData","onClose","onUpdate","activeTab","setActiveTab","useState","states","setStates","cities","setCities","masterCategories","setMasterCategories","categories","setCategories","subCategories","setSubCategories","franchiseModels","setFranchiseModels","franchiseTypes","setFranchiseTypes","outletRanges","yesNoOptions","franchiseYearsOptions","requiredAreaOptions","investmentRangeOptions","expectedRoiOptions","expectedPaybackOptions","message","setMessage","isLoading","setIsLoading","formData","setFormData","name","email","mobile","address","description","bd_manager_name","bd_manager_email","bd_manager_contact","state_id","city_id","mas_cat_id","cat_id","sub_cat_id","commenced_operations_year","expansion_started_year","total_outlets","company_owned_outlets","franchise_owned_outlets","franchise_years","is_agreement_renewable","operations_manual_provided","training_provided","it_systems_included","marketing_materials_provided","head_office_assistance","franchise_model","franchise_type_id","single_area","required_area","single_investment","investment_range","single_roi","expected_roi","single_payback","expected_payback_period","master_scope","master_franchise_details","country","area","master_required_area_country","investment","master_investment_range_country","roi","master_expected_roi_country","payback","master_expected_payback_period_country","state","master_required_area_state","master_investment_range_state","master_expected_roi_state","master_expected_payback_period_state","city","master_required_area_city","master_investment_range_city","master_expected_roi_city","master_expected_payback_period_city","master_franchise_state_ids","split","master_franchise_city_ids","expansion_state_ids","expansion_city_ids","useEffect","_brandData$master_fra3","_brandData$master_fra4","_brandData$expansion_3","_brandData$expansion_4","async","statesRes","masterCatRes","modelsRes","typesRes","Promise","all","axios","get","getApiUrl","data","success","err","console","error","fetchData","concat","then","res","catch","prev","_objectSpread","handleFormChange","e","value","target","handleMasterFranchiseChange","scope","handleMultiSelectChange","field","id","currentIds","updatedIds","includes","filter","item","renderMasterFranchiseFields","_formData$master_fran11","details","toLowerCase","_jsxs","_Fragment","children","className","_jsx","FaSquare","onChange","map","option","FaMoneyBill","FaChartLine","FaClock","onClick","FaBuilding","type","FaEnvelope","FaPhone","FaGlobe","cat","mas_cat_name","disabled","cat_name","subcat_id","subcat_name","FaMapMarkerAlt","FaCity","FaUser","franchise_fee","min","max","Date","getFullYear","placeholder","range","renderFranchiseInfoTab","selectedFranchiseType","find","isSingleUnit","isMaster","isBoth","isMasterOrBoth","FaHandshake","model","checked","length","text","FaUndo","_formData$master_scop","_formData$master_fran","_formData$master_fran2","_formData$master_fran3","_formData$master_fran4","_formData$master_fran5","_formData$master_fran6","_formData$master_fran7","_formData$master_fran8","_formData$master_fran9","_formData$master_fran0","_formData$master_fran1","_formData$master_fran10","payload","single_required_area","single_investment_range","single_expected_roi","single_expected_payback_period","join","log","response","post","setTimeout","BrandProfile","setBrandData","showModal","setShowModal","brandId","setBrandId","navigate","useNavigate","idFromSession","sessionString","localStorage","getItem","sessionData","JSON","parse","fetch","json","BrandSidebar","BrandDashboardHeader","state_name","city_name","master_category_name","EditProfileModal","brandName","setBrandName","isOpen","setIsOpen","toggleSidebar","FaTimes","FaBars","Link","to","href","clear","window","location"],"sourceRoot":""}