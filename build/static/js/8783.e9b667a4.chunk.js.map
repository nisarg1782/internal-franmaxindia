{"version":3,"file":"static/js/8783.e9b667a4.chunk.js","mappings":"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","sources":["admin/Sidebar.jsx","admin/Newsletter.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Link, useNavigate } from 'react-router-dom'; // Import Link and useNavigate\r\nimport { toast } from 'react-toastify'; // Import toast for logout message\r\nimport './sidebar.css'; // Ensure this path is correct\r\nimport {\r\n  FaChevronDown, FaChevronRight, FaBuilding, FaUserTie,\r\n  FaBullhorn, FaCity, FaUsers, FaUserCircle, FaThLarge, FaBars, FaTimes\r\n} from 'react-icons/fa';\r\n\r\nconst Sidebar = () => {\r\n  // State to manage the collapse/expand status of each menu section\r\n  const [sectionCollapsed, setSectionCollapsed] = useState({\r\n    master: false, // Set initial state to open for better visibility\r\n    franchising: false, \r\n    marketing: false,\r\n    leasing: false,\r\n    admin: false,\r\n  });\r\n\r\n  // State to manage the overall collapse/expand status of the sidebar itself\r\n  const [sidebarCollapsed, setSidebarCollapsed] = useState(false);\r\n\r\n  // States to hold admin user's name and email from localStorage\r\n  const [adminName, setAdminName] = useState('Guest');\r\n  const [adminEmail, setAdminEmail] = useState('');\r\n\r\n  // Hook from react-router-dom for programmatic navigation\r\n  const navigate = useNavigate();\r\n\r\n  // Effect to read admin information from localStorage when the component mounts\r\n  useEffect(() => {\r\n    const storedAdminName = localStorage.getItem('adminName');\r\n    const storedAdminEmail = localStorage.getItem('adminEmail');\r\n    if (storedAdminName) {\r\n      setAdminName(storedAdminName);\r\n    }\r\n    if (storedAdminEmail) {\r\n      setAdminEmail(storedAdminEmail);\r\n    }\r\n  }, []); // Empty dependency array ensures this runs only once on mount\r\n\r\n  // Toggles the collapse/expand state of a specific menu section\r\n  const toggleSection = (section) => {\r\n    setSectionCollapsed((prev) => ({\r\n      ...prev,\r\n      [section]: !prev[section]\r\n    }));\r\n  };\r\n\r\n  // Handles the logout action\r\n  const handleLogout = () => {\r\n    // ✅ This is where localStorage items are removed\r\n    localStorage.removeItem('adminId');\r\n    localStorage.removeItem('adminName');\r\n    localStorage.removeItem('adminEmail');\r\n    \r\n    toast.info('You have been logged out.'); // Show a logout message\r\n    navigate('/admin/login'); // Redirect to the login page\r\n  };\r\n\r\n  return (\r\n    <aside className={`snbs-sidebar ${sidebarCollapsed ? 'collapsed' : ''}`}>\r\n      <div className=\"snbs-sidebar-header\">\r\n        <div className=\"snbs-logo\">\r\n          {!sidebarCollapsed && (\r\n            <>\r\n              <h2>FRANMAX INDIA</h2>\r\n              {/* Display admin's name and email */}\r\n              <p className=\"snbs-role\">Welcome, {adminName}</p>\r\n              {adminEmail && <p className=\"snbs-email\">{adminEmail}</p>}\r\n            </>\r\n          )}\r\n        </div>\r\n        {/* Button to toggle sidebar collapse/expand */}\r\n        <button\r\n          className=\"snbs-toggle-btn\"\r\n          onClick={() => setSidebarCollapsed(!sidebarCollapsed)}\r\n        >\r\n          {sidebarCollapsed ? <FaBars /> : <FaTimes />}\r\n        </button>\r\n      </div>\r\n\r\n      <nav className=\"snbs-menu\">\r\n        {/* Master Section */}\r\n        \r\n        {/* Franchising Section */}\r\n        <div className=\"snbs-section\">\r\n          <div className=\"snbs-section-header\" onClick={() => toggleSection('franchising')}>\r\n            <span>FRANCHISING</span>\r\n            {sectionCollapsed.franchising ? <FaChevronDown /> : <FaChevronRight />}\r\n          </div>\r\n          {sectionCollapsed.franchising && !sidebarCollapsed && (\r\n            <>\r\n              <Link to=\"/admin/brand-list\" className=\"snbs-link\"><FaBuilding /> Brand</Link>\r\n              <Link to=\"/admin/investors\" className=\"snbs-link\"><FaUserTie /> Investor</Link>\r\n              <Link to=\"/admin/leads\" className=\"snbs-link\"><FaUserTie />Generic Inquiries</Link>\r\n              <Link to=\"/admin/brand-inquiries\" className=\"snbs-link\"><FaUserTie />Brand Specific Inquiries</Link>\r\n              <Link to=\"/admin/partner-inquiries\" className=\"snbs-link\"><FaUserTie />Partner Inquiries</Link>\r\n               <Link to=\"/admin/newsletter\" className=\"snbs-link\"><FaUserTie />Newsletter</Link>\r\n                <Link to=\"/admin/faq\" className=\"snbs-link\"><FaUserTie />FAQ</Link>\r\n                <Link to=\"/admin/event\"  className=\"snbs-link\"><FaUserTie />Event</Link>\r\n            </>\r\n          )}\r\n        </div>\r\n        \r\n        {/* Marketing Section */}\r\n        <div className=\"snbs-section\">\r\n          <div className=\"snbs-section-header\" onClick={() => toggleSection('marketing')}>\r\n            <span>MARKETING</span>\r\n            {sectionCollapsed.marketing ? <FaChevronDown /> : <FaChevronRight />}\r\n          </div>\r\n          {sectionCollapsed.marketing && !sidebarCollapsed && (\r\n            <Link to=\"/admin/marketing-inquiries\" className=\"snbs-link\"><FaBullhorn /> Marketing</Link>\r\n          )}\r\n        </div>\r\n\r\n        {/* Leasing Section */}\r\n        <div className=\"snbs-section\">\r\n          <div className=\"snbs-section-header\" onClick={() => toggleSection('leasing')}>\r\n            <span>LEASING</span>\r\n            {sectionCollapsed.leasing ? <FaChevronDown /> : <FaChevronRight />}\r\n          </div>\r\n          {sectionCollapsed.leasing && !sidebarCollapsed && (\r\n            <>\r\n              <Link to=\"#\" className=\"snbs-link\"><FaCity /> Buy Lease Property inquiries</Link>\r\n              <Link to=\"/admin/lease-properties\" className=\"snbs-link\"><FaCity /> Lease Property inquiries</Link>\r\n              \r\n              <Link to=\"#\" className=\"snbs-link\"><FaCity /> Sell Property</Link>\r\n              <Link to=\"/admin/buy-business-inquiries\" className=\"snbs-link\"><FaCity />Buy Business Inquiry</Link>\r\n              <Link to=\"/admin/sell-business-inquiries\" className=\"snbs-link\"><FaCity /> Sell Business</Link>\r\n            </>\r\n          )}\r\n        </div>\r\n\r\n        {/* Admin Section */}\r\n        <div className=\"snbs-section\">\r\n          <div className=\"snbs-section-header\" onClick={() => toggleSection('admin')}>\r\n            <span>ADMIN</span>\r\n            {sectionCollapsed.admin ? <FaChevronDown /> : <FaChevronRight />}\r\n          </div>\r\n          {sectionCollapsed.admin && !sidebarCollapsed && (\r\n            <>\r\n              <Link to=\"/user-list\" className=\"snbs-link\"><FaUsers /> Users</Link>\r\n          \r\n              {/* Logout link calls the handleLogout function */}\r\n              <Link to=\"#\" onClick={handleLogout} className=\"snbs-link\"><FaThLarge /> Logout</Link>\r\n            </>\r\n          )}\r\n        </div>\r\n      </nav>\r\n    </aside>\r\n  );\r\n};\r\n\r\nexport default Sidebar;\r\n","import React, { useState, useEffect } from 'react';\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\nimport './Newsletter.css';\r\nimport Sidebar from './Sidebar';\r\nimport { FaPlus, FaEdit, FaSave, FaTimes, FaTrash } from 'react-icons/fa';\r\nimport { toast, ToastContainer } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { getApiUrl ,getImageUrl } from '../utils/api';\r\n\r\n// Utility function to get API URL\r\n// const getApiUrl = (endpoint) => `http://localhost/react-api/${endpoint}`;\r\n\r\nexport default function NewsletterTable() {\r\n    const [newsletters, setNewsletters] = useState([]);\r\n    const [expandedId, setExpandedId] = useState(null);\r\n    const [loading, setLoading] = useState(true);\r\n    const [isModalOpen, setIsModalOpen] = useState(false);\r\n\r\n    // State for editing functionality\r\n    const [editingNewsId, setEditingNewsId] = useState(null);\r\n    const [editingNewsData, setEditingNewsData] = useState({ title: '', description: '' });\r\n\r\n    // State for delete confirmation\r\n    const [deletingNewsId, setDeletingNewsId] = useState(null);\r\n\r\n    const [newNews, setNewNews] = useState({\r\n        title: '',\r\n        image: null,\r\n        description: '',\r\n    });\r\n\r\n    const toggleExpand = (id) => {\r\n        setExpandedId(expandedId === id ? null : id);\r\n    };\r\n\r\n    const openModal = () => setIsModalOpen(true);\r\n    const closeModal = () => {\r\n        setIsModalOpen(false);\r\n        setNewNews({\r\n            title: '',\r\n            image: null,\r\n            description: '',\r\n        });\r\n    };\r\n\r\n    const handleInputChange = (e) => {\r\n        const { name, value, files } = e.target;\r\n        setNewNews((prevNews) => ({\r\n            ...prevNews,\r\n            [name]: files ? files[0] : value,\r\n        }));\r\n    };\r\n\r\n    const handleDescriptionChange = (content) => {\r\n        setNewNews((prevNews) => ({\r\n            ...prevNews,\r\n            description: content,\r\n        }));\r\n    };\r\n\r\n    // New handlers for editing\r\n    const handleEditClick = (news) => {\r\n        setEditingNewsId(news.id);\r\n        setEditingNewsData({ title: news.title, description: news.description });\r\n    };\r\n\r\n    const handleEditCancel = () => {\r\n        setEditingNewsId(null);\r\n        setEditingNewsData({ title: '', description: '' });\r\n    };\r\n\r\n    const handleEditChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setEditingNewsData(prevData => ({ ...prevData, [name]: value }));\r\n    };\r\n\r\n    const handleEditDescriptionChange = (content) => {\r\n        setEditingNewsData(prevData => ({ ...prevData, description: content }));\r\n    };\r\n\r\n    // New handlers for deletion\r\n    const handleDeleteClick = (id) => {\r\n        setDeletingNewsId(id);\r\n    };\r\n\r\n    const handleConfirmDelete = () => {\r\n        const formData = new FormData();\r\n        formData.append('id', deletingNewsId);\r\n        formData.append('action', 'delete');\r\n        manageNews(formData);\r\n        setDeletingNewsId(null); // Close the confirmation modal\r\n    };\r\n\r\n    const handleCancelDelete = () => {\r\n        setDeletingNewsId(null); // Close the confirmation modal\r\n    };\r\n\r\n    // Unified function to handle add, edit, and delete API calls\r\n    const manageNews = async (formData) => {\r\n        setLoading(true);\r\n        try {\r\n            const res = await fetch(getApiUrl('add-news.php'), {\r\n                method: 'POST',\r\n                body: formData,\r\n            });\r\n\r\n            if (!res.ok) {\r\n                throw new Error('Network response was not ok.');\r\n            }\r\n\r\n            const result = await res.json();\r\n            if (result.success) {\r\n                toast.success(result.message);\r\n                fetchNewsletters(); // Refresh the list\r\n                closeModal();\r\n                setEditingNewsId(null); // Exit edit mode\r\n            } else {\r\n                toast.error(result.message || 'An unexpected error occurred.');\r\n            }\r\n        } catch (err) {\r\n            toast.error('Failed to communicate with the server.');\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        const formData = new FormData();\r\n        formData.append('action', 'add');\r\n        formData.append('title', newNews.title);\r\n        formData.append('image', newNews.image);\r\n        formData.append('description', newNews.description);\r\n        manageNews(formData);\r\n    };\r\n\r\n    const handleEditSubmit = (e) => {\r\n        e.preventDefault();\r\n        const formData = new FormData();\r\n        formData.append('action', 'edit');\r\n        formData.append('id', editingNewsId);\r\n        formData.append('title', editingNewsData.title);\r\n        formData.append('description', editingNewsData.description);\r\n        manageNews(formData);\r\n    };\r\n\r\n    const fetchNewsletters = async () => {\r\n        setLoading(true);\r\n        try {\r\n            const res = await fetch(getApiUrl('get-news.php'));\r\n            if (!res.ok) {\r\n                throw new Error('Network response was not ok');\r\n            }\r\n            const data = await res.json();\r\n\r\n            if (data.success) {\r\n                setNewsletters(data.news);\r\n            } else {\r\n                setNewsletters([]);\r\n            }\r\n        } catch (err) {\r\n            toast.error('Failed to fetch newsletters.');\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        fetchNewsletters();\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"newsletter-page-container\">\r\n            <Sidebar />\r\n            <div className=\"main-content\">\r\n                <ToastContainer />\r\n                <div className=\"table-header\">\r\n                    <h2 className=\"table-title\">Newsletters</h2>\r\n                    <button onClick={openModal} className=\"add-news-btn\">\r\n                        <FaPlus className=\"icon\" /> Add News\r\n                    </button>\r\n                </div>\r\n\r\n                {loading && <div className=\"loading\">Loading...</div>}\r\n\r\n                {!loading && newsletters.length === 0 && (\r\n                    <div className=\"no-data-message\">No newsletters found.</div>\r\n                )}\r\n\r\n                {!loading && newsletters.length > 0 && (\r\n                    <div className=\"table-wrapper\">\r\n                        <table className=\"newsletter-table\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>ID</th>\r\n                                    <th>Title</th>\r\n                                    <th>Created At</th>\r\n                                    <th>Action</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {newsletters.map((news) => (\r\n                                    <React.Fragment key={news.id}>\r\n                                        {editingNewsId === news.id ? (\r\n                                            // Editable Row\r\n                                            <tr className=\"edit-row\">\r\n                                                <td>{news.id}</td>\r\n                                                <td>\r\n                                                    <input\r\n                                                        type=\"text\"\r\n                                                        name=\"title\"\r\n                                                        value={editingNewsData.title}\r\n                                                        onChange={handleEditChange}\r\n                                                    />\r\n                                                </td>\r\n                                                <td>{news.created_at}</td>\r\n                                                <td className=\"action-buttons\">\r\n                                                    <button onClick={handleEditSubmit} className=\"save-btn\">\r\n                                                        <FaSave /> Save\r\n                                                    </button>\r\n                                                    <button onClick={handleEditCancel} className=\"cancel-btn\">\r\n                                                        <FaTimes /> Cancel\r\n                                                    </button>\r\n                                                </td>\r\n                                            </tr>\r\n                                        ) : (\r\n                                            // Summary Row\r\n                                            <tr className=\"summary-row\">\r\n                                                <td>{news.id}</td>\r\n                                                <td>{news.title}</td>\r\n                                                <td>{news.created_at}</td>\r\n                                                <td className=\"action-buttons\">\r\n                                                    <button onClick={() => toggleExpand(news.id)} className=\"expand-btn\">\r\n                                                        {expandedId === news.id ? 'Hide Details' : 'View Details'}\r\n                                                    </button>\r\n                                                    <button onClick={() => handleEditClick(news)} className=\"edit-btn\">\r\n                                                        <FaEdit /> Edit\r\n                                                    </button>\r\n                                                    <button onClick={() => handleDeleteClick(news.id)} className=\"delete-btn\">\r\n                                                        <FaTrash /> Delete\r\n                                                    </button>\r\n                                                </td>\r\n                                            </tr>\r\n                                        )}\r\n                                        {editingNewsId === news.id && (\r\n                                            <tr className=\"details-row\">\r\n                                                <td colSpan=\"4\">\r\n                                                    <div className=\"details-box\">\r\n                                                        <ReactQuill\r\n                                                            theme=\"snow\"\r\n                                                            value={editingNewsData.description}\r\n                                                            onChange={handleEditDescriptionChange}\r\n                                                        />\r\n                                                    </div>\r\n                                                </td>\r\n                                            </tr>\r\n                                        )}\r\n                                        {expandedId === news.id && (\r\n                                            <tr className=\"details-row\">\r\n                                                <td colSpan=\"4\">\r\n                                                    <div className=\"details-box\">\r\n                                                        {news.image && (\r\n                                                            <img\r\n                                                                src={getImageUrl(`${news.image}`)}\r\n                                                                alt={news.title}\r\n                                                                className=\"newsletter-image\"\r\n                                                            />\r\n                                                        )}\r\n                                                        <div\r\n                                                            className=\"newsletter-description-html\"\r\n                                                            dangerouslySetInnerHTML={{ __html: news.description }}\r\n                                                        />\r\n                                                    </div>\r\n                                                </td>\r\n                                            </tr>\r\n                                        )}\r\n                                    </React.Fragment>\r\n                                ))}\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                )}\r\n            </div>\r\n\r\n            {/* Modal for adding a new newsletter */}\r\n            {isModalOpen && (\r\n                <div className=\"modal-overlay\">\r\n                    <div className=\"modal-content\">\r\n                        <div className=\"modal-header\">\r\n                            <h3>Add New Newsletter</h3>\r\n                            <button className=\"close-btn\" onClick={closeModal}>&times;</button>\r\n                        </div>\r\n                        <form onSubmit={handleSubmit} className=\"add-news-form\" encType=\"multipart/form-data\">\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"title\">Title</label>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    id=\"title\"\r\n                                    name=\"title\"\r\n                                    value={newNews.title}\r\n                                    onChange={handleInputChange}\r\n                                    required\r\n                                />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"image\">Image</label>\r\n                                <input\r\n                                    type=\"file\"\r\n                                    id=\"image\"\r\n                                    name=\"image\"\r\n                                    accept=\"image/*\"\r\n                                    onChange={handleInputChange}\r\n                                    required\r\n                                />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label>Description</label>\r\n                                <ReactQuill\r\n                                    theme=\"snow\"\r\n                                    value={newNews.description}\r\n                                    onChange={handleDescriptionChange}\r\n                                />\r\n                            </div>\r\n                            <div className=\"form-actions\">\r\n                                <button type=\"submit\" className=\"submit-btn\">Add News</button>\r\n                                <button type=\"button\" className=\"cancel-btn\" onClick={closeModal}>Cancel</button>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            )}\r\n\r\n            {/* Modal for delete confirmation */}\r\n            {deletingNewsId && (\r\n                <div className=\"modal-overlay\">\r\n                    <div className=\"modal-content\">\r\n                        <div className=\"modal-header\">\r\n                            <h3>Confirm Deletion</h3>\r\n                            <button className=\"close-btn\" onClick={handleCancelDelete}>&times;</button>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                            <p>Are you sure you want to delete this newsletter? This action cannot be undone.</p>\r\n                        </div>\r\n                        <div className=\"modal-footer\">\r\n                            <button className=\"delete-btn\" onClick={handleConfirmDelete}>\r\n                                <FaTrash /> Delete\r\n                            </button>\r\n                            <button className=\"cancel-btn\" onClick={handleCancelDelete}>\r\n                                <FaTimes /> Cancel\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n}"],"names":["Sidebar","sectionCollapsed","setSectionCollapsed","useState","master","franchising","marketing","leasing","admin","sidebarCollapsed","setSidebarCollapsed","adminName","setAdminName","adminEmail","setAdminEmail","navigate","useNavigate","useEffect","storedAdminName","localStorage","getItem","storedAdminEmail","toggleSection","section","prev","_objectSpread","_jsxs","className","concat","children","_jsx","_Fragment","onClick","FaBars","FaTimes","FaChevronDown","FaChevronRight","Link","to","FaBuilding","FaUserTie","FaBullhorn","FaCity","FaUsers","handleLogout","removeItem","toast","info","FaThLarge","NewsletterTable","newsletters","setNewsletters","expandedId","setExpandedId","loading","setLoading","isModalOpen","setIsModalOpen","editingNewsId","setEditingNewsId","editingNewsData","setEditingNewsData","title","description","deletingNewsId","setDeletingNewsId","newNews","setNewNews","image","closeModal","handleInputChange","e","name","value","files","target","prevNews","handleEditCancel","handleEditChange","prevData","handleEditDescriptionChange","content","handleCancelDelete","manageNews","async","res","fetch","getApiUrl","method","body","formData","ok","Error","result","json","success","message","fetchNewsletters","error","err","handleEditSubmit","preventDefault","FormData","append","data","news","ToastContainer","openModal","FaPlus","length","map","React","id","type","onChange","created_at","FaSave","toggleExpand","handleEditClick","FaEdit","handleDeleteClick","FaTrash","colSpan","ReactQuill","theme","src","getImageUrl","alt","dangerouslySetInnerHTML","__html","onSubmit","encType","htmlFor","required","accept","handleConfirmDelete"],"sourceRoot":""}