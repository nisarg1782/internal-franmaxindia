{"version":3,"file":"static/js/848.64ef3ad8.chunk.js","mappings":"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","sources":["brand/FilterBar.jsx","brand/DetailModal.jsx","brand/BrandInquiries.jsx","brand/BrandDashboardHeader.jsx","brand/BrandSidebar.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport './FilterBar.css';\r\nimport { useSearchParams } from 'react-router-dom';\r\nimport { getApiUrl } from '../utils/api';\r\nconst statusOptions = ['open', 'contacted', 'not contacted', 'closed'];\r\nconst remarkOptions = ['interested', 'not interested', 'deal', 'not qualified', 'not received'];\r\n\r\nconst defaultFilters = {\r\n  name: '',\r\n  status: 'All',\r\n  remark: '',\r\n  stateId: '',\r\n  stateName: '',\r\n  city: '',\r\n  startDate: '',\r\n  endDate: ''\r\n};\r\n\r\nconst FilterBar = ({ filters, onChange }) => {\r\n  const [states, setStates] = useState([]);\r\n  const [cities, setCities] = useState([]);\r\n  const [searchParams] = useSearchParams();\r\n\r\n  // Initial remark from URL\r\n  useEffect(() => {\r\n    const urlRemark = searchParams.get('remark');\r\n    if (urlRemark && remarkOptions.includes(urlRemark) && !filters.remark) {\r\n      onChange({ ...filters, remark: urlRemark });\r\n    }\r\n  }, [searchParams, filters, onChange]);\r\n\r\n  // Load states\r\n  useEffect(() => {\r\n    fetch(getApiUrl('get-indian-states.php'))\r\n      .then(res => res.json())\r\n      .then(data => setStates(data))\r\n      .catch(err => console.error('State load error:', err));\r\n  }, []);\r\n\r\n  // Load cities based on stateId\r\n  useEffect(() => {\r\n    if (filters.stateId) {\r\n      fetch(getApiUrl(`get-cities.php?state_id=${filters.stateId}`))\r\n        .then(res => res.json())\r\n        .then(data => setCities(data))\r\n        .catch(err => console.error('City load error:', err));\r\n    } else {\r\n      setCities([]);\r\n    }\r\n  }, [filters.stateId]);\r\n\r\n  // Handle change\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n\r\n    if (name === 'stateId') {\r\n      const selectedState = states.find((s) => String(s.id) === value);\r\n      onChange({\r\n        ...filters,\r\n        stateId: value,\r\n        stateName: selectedState?.name || '',\r\n        city: '',\r\n      });\r\n    } else {\r\n      onChange({ ...filters, [name]: value });\r\n    }\r\n  };\r\n\r\n  // Reset filters\r\n  const handleReset = () => {\r\n    onChange({ ...defaultFilters });\r\n  };\r\n\r\n  return (\r\n    <div className=\"filter-bar\">\r\n      <input\r\n        type=\"text\"\r\n        name=\"name\"\r\n        value={filters.name}\r\n        placeholder=\"Search by name\"\r\n        onChange={handleChange}\r\n      />\r\n\r\n      <select name=\"status\" value={filters.status} onChange={handleChange}>\r\n        <option value=\"All\">All Status</option>\r\n        {statusOptions.map(opt => (\r\n          <option key={opt} value={opt}>{opt}</option>\r\n        ))}\r\n      </select>\r\n\r\n      <select name=\"remark\" value={filters.remark} onChange={handleChange}>\r\n        <option value=\"\">All Remarks</option>\r\n        {remarkOptions.map(opt => (\r\n          <option key={opt} value={opt}>{opt}</option>\r\n        ))}\r\n      </select>\r\n\r\n      <select name=\"stateId\" value={filters.stateId} onChange={handleChange}>\r\n        <option value=\"\">All States</option>\r\n        {states.map(s => (\r\n          <option key={s.id} value={s.id}>{s.name}</option>\r\n        ))}\r\n      </select>\r\n\r\n      <select name=\"city\" value={filters.city} onChange={handleChange}>\r\n        <option value=\"\">All Cities</option>\r\n        {cities.map(c => (\r\n          <option key={c.id} value={c.name}>{c.name}</option>\r\n        ))}\r\n      </select>\r\n\r\n      <input\r\n        type={filters.startDate ? 'date' : 'text'}\r\n        name=\"startDate\"\r\n        value={filters.startDate}\r\n        placeholder=\"Select Start Date\"\r\n        onFocus={(e) => (e.target.type = 'date')}\r\n        onBlur={(e) => {\r\n          if (!filters.startDate) e.target.type = 'text';\r\n        }}\r\n        onChange={handleChange}\r\n      />\r\n\r\n      <input\r\n        type={filters.endDate ? 'date' : 'text'}\r\n        name=\"endDate\"\r\n        value={filters.endDate}\r\n        placeholder=\"Select End Date\"\r\n        onFocus={(e) => (e.target.type = 'date')}\r\n        onBlur={(e) => {\r\n          if (!filters.endDate) e.target.type = 'text';\r\n        }}\r\n        onChange={handleChange}\r\n      />\r\n\r\n      <button className=\"reset-btn\" onClick={handleReset}>Reset Filters</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FilterBar;\r\n","// src/brand/DetailModal.jsx\r\nimport React from 'react';\r\nimport './DetailModal.css';\r\nimport {\r\n  FaUser, FaEnvelope, FaPhone, FaMapMarkedAlt,\r\n  FaCity, FaCommentDots, FaClock\r\n} from 'react-icons/fa';\r\n\r\nconst DetailModal = ({ inquiry, onClose }) => {\r\n  return (\r\n    <div className=\"modal-backdrop\">\r\n      <div className=\"modal-content\">\r\n        <button className=\"modal-close\" onClick={onClose}>×</button>\r\n        <h3>Inquiry Details</h3>\r\n        <div className=\"modal-info-grid\">\r\n          <p><FaUser /> <strong>Name:</strong> {inquiry.name}</p>\r\n          <p><FaEnvelope /> <strong>Email:</strong> {inquiry.email}</p>\r\n          <p><FaMapMarkedAlt /> <strong>State:</strong> {inquiry.state}</p>\r\n          <p><FaCity /> <strong>City:</strong> {inquiry.city}</p>\r\n          <p><FaCommentDots /> <strong>Message:</strong> {inquiry.message}</p>\r\n          {inquiry.remark && (\r\n            <p><strong>Remark:</strong> {inquiry.remark}</p>\r\n          )}\r\n          <p><strong>Status:</strong> {inquiry.status}</p>\r\n          <p><strong>Inquiry Date:</strong> {inquiry.date}</p>\r\n          {inquiry.updated_at && (\r\n            <p><FaClock /> <strong>Last Updated:</strong> {inquiry.updated_at}</p>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DetailModal;\r\n","import React, { useState, useEffect } from 'react';\r\nimport './brandDashboard.css';\r\nimport BrandSidebar from './BrandSidebar';\r\nimport BrandDashboardHeader from './BrandDashboardHeader';\r\nimport FilterBar from './FilterBar';\r\nimport DetailModal from './DetailModal';\r\nimport { FaPhoneAlt, FaEdit, FaSave, FaEye, FaWhatsapp } from 'react-icons/fa';\r\nimport { getApiUrl } from '../utils/api';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst statusOptions = ['open', 'contacted', 'not contacted', 'closed'];\r\nconst remarkOptions = ['interested', 'not interested', 'deal', 'not qualified', 'not received'];\r\n\r\nconst BrandInquiries = ({ openLoginModal }) => {\r\n  const [brandId, setBrandId] = useState(null);\r\n  const [isPremium, setIsPremium] = useState(null);\r\n  const [visibleContacts, setVisibleContacts] = useState([]);\r\n  const [editModeId, setEditModeId] = useState(null);\r\n  const [editedStatus, setEditedStatus] = useState('');\r\n  const [editedRemark, setEditedRemark] = useState('');\r\n  const [comment, setComment] = useState('');\r\n  const [errors, setErrors] = useState({});\r\n  const [inquiries, setInquiries] = useState([]);\r\n  const [filters, setFilters] = useState({\r\n    name: '',\r\n    status: 'All',\r\n    remark: '',\r\n    startDate: '',\r\n    endDate: ''\r\n  });\r\n  const [selectedInquiry, setSelectedInquiry] = useState(null);\r\n  const navigate = useNavigate();\r\n\r\n  // Fetch brand_id from session\r\n  useEffect(() => {\r\n    const sessionData = localStorage.getItem('userSession');\r\n    if (sessionData) {\r\n      const brandData = JSON.parse(sessionData);\r\n      if (brandData.user_type === 'brand') {\r\n        setBrandId(brandData.id);\r\n      } else {\r\n        navigate('/');\r\n      }\r\n    } else {\r\n      navigate('/');\r\n    }\r\n  }, [navigate]);\r\n\r\n  const handleWhatsAppClick = (inq) => {\r\n    fetch(getApiUrl('log-view-contact.php'), {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({\r\n        inquiry_id: inq.id,\r\n        brand_id: brandId,\r\n        description: 'clicked WhatsApp link'\r\n      })\r\n    }).catch(err => console.error('Failed to log WhatsApp click', err));\r\n\r\n    const phoneNumber = inq.phone.replace(/\\D/g, '');\r\n    window.open(`https://wa.me/91${phoneNumber}`, '_blank');\r\n  };\r\n\r\n  // Check if brand is premium\r\n  useEffect(() => {\r\n    if (!brandId) return;\r\n    const checkPremium = async () => {\r\n      try {\r\n        const res = await fetch(getApiUrl('check_brand_premium.php'), {\r\n          method: 'POST',\r\n          headers: { 'Content-Type': 'application/json' },\r\n          body: JSON.stringify({ brand_id: brandId })\r\n        });\r\n        const result = await res.json();\r\n        setIsPremium(result.success && result.is_premium);\r\n      } catch (err) {\r\n        console.error(\"Failed to check premium status\", err);\r\n        setIsPremium(false);\r\n      }\r\n    };\r\n    checkPremium();\r\n  }, [brandId]);\r\n\r\n  // Load inquiries only if premium\r\n  useEffect(() => {\r\n    if (brandId && isPremium === true) {\r\n      fetch(getApiUrl(`get_inquiries_by_brand.php?brand_id=${brandId}`))\r\n        .then(res => res.json())\r\n        .then(data => setInquiries(data))\r\n        .catch(err => console.error('Failed to load inquiries', err));\r\n    }\r\n  }, [brandId, isPremium]);\r\n\r\n  const handleViewContact = (inquiryId) => {\r\n    if (!visibleContacts.includes(inquiryId)) {\r\n      setVisibleContacts(prev => [...prev, inquiryId]);\r\n      fetch(getApiUrl('log-view-contact.php'), {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ inquiry_id: inquiryId, brand_id: brandId, description: 'viewed contact details' })\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleEditClick = (inq) => {\r\n    setEditModeId(inq.id);\r\n    setEditedStatus(inq.status);\r\n    setEditedRemark(inq.remark || '');\r\n    setComment('');\r\n    setErrors({});\r\n  };\r\n\r\n  const handleSave = async (id) => {\r\n    if (!comment.trim()) {\r\n      setErrors({ comment: 'Comment is required' });\r\n      return;\r\n    }\r\n    try {\r\n      const res = await fetch(getApiUrl('update_inquiry_status.php'), {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({\r\n          id,\r\n          status: editedStatus,\r\n          remark: editedRemark,\r\n          comment\r\n        })\r\n      });\r\n      const result = await res.json();\r\n      if (result.success) {\r\n        const updated = inquiries.map(inq =>\r\n          inq.id === id\r\n            ? {\r\n                ...inq,\r\n                status: editedStatus,\r\n                remark: editedRemark,\r\n                comment,\r\n                updated_at: result.updated_at\r\n              }\r\n            : inq\r\n        );\r\n        setInquiries(updated);\r\n        setEditModeId(null);\r\n        setComment('');\r\n        setErrors({});\r\n      } else {\r\n        alert(\"Failed to save changes.\");\r\n      }\r\n    } catch (err) {\r\n      console.error(\"Save failed\", err);\r\n    }\r\n  };\r\n\r\n  const filteredInquiries = inquiries.filter((inq) => {\r\n    const matchesName = inq.name.toLowerCase().includes(filters.name.toLowerCase());\r\n    const matchesStatus = filters.status === 'All' || inq.status === filters.status;\r\n    const matchesRemark = !filters.remark || inq.remark === filters.remark;\r\n    const matchesState = !filters.stateName || inq.state === filters.stateName;\r\n    const matchesCity = !filters.city || inq.city === filters.city;\r\n    const inquiryDate = new Date(inq.date);\r\n    const startDate = filters.startDate ? new Date(filters.startDate) : null;\r\n    const endDate = filters.endDate ? new Date(filters.endDate) : null;\r\n    const matchesDate = (!startDate || inquiryDate >= startDate) && (!endDate || inquiryDate <= endDate);\r\n    return matchesName && matchesStatus && matchesRemark && matchesState && matchesCity && matchesDate;\r\n  });\r\n\r\n  if (isPremium === null || !brandId) {\r\n    return <div className=\"brand-crm-container\"><p>Loading...</p></div>;\r\n  }\r\n\r\n  if (isPremium === false) {\r\n    return (\r\n      <div className=\"brand-crm-container\">\r\n        <BrandSidebar openLoginModal={openLoginModal} />\r\n        <div className=\"brand-crm-main\">\r\n          <BrandDashboardHeader />\r\n          <div className=\"upgrade-box\">\r\n            <h2>Upgrade to Premium</h2>\r\n            <p>This feature is available only for premium brands. Please contact support to upgrade your plan.</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"brand-crm-container\">\r\n      <BrandSidebar openLoginModal={openLoginModal} />\r\n      <div className=\"brand-crm-main\">\r\n        <BrandDashboardHeader />\r\n        <div className=\"inquiries-section\">\r\n          <h2>Franchise Inquiries</h2>\r\n          <FilterBar filters={filters} onChange={setFilters} />\r\n          <table className=\"inquiries-table\">\r\n            <thead>\r\n              <tr>\r\n                <th>#</th>\r\n                <th>Name</th>\r\n                <th>Contact</th>\r\n                <th>Status</th>\r\n                <th>Remark</th>\r\n                <th>State</th>\r\n                <th>Enquiry Date</th>\r\n                <th>Whatsapp</th>\r\n                <th>Actions</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {filteredInquiries.map((inq, index) => (\r\n                <tr key={inq.id} className=\"inquiry-row\">\r\n                  <td>{index + 1}</td>\r\n                  <td>{inq.name}</td>\r\n                  <td>\r\n                    {visibleContacts.includes(inq.id) ? (\r\n                      <>\r\n                        📞 {inq.phone} <br /> ✉️ {inq.email}\r\n                      </>\r\n                    ) : (\r\n                      <button className=\"icon-btn green\" onClick={() => handleViewContact(inq.id)}>\r\n                        <FaPhoneAlt className=\"icon\" />\r\n                        <span className=\"btn-label\">Show</span>\r\n                      </button>\r\n                    )}\r\n                  </td>\r\n                  <td>\r\n                    {editModeId === inq.id ? (\r\n                      <select value={editedStatus} onChange={(e) => setEditedStatus(e.target.value)}>\r\n                        {statusOptions.map(opt => <option key={opt} value={opt}>{opt}</option>)}\r\n                      </select>\r\n                    ) : (\r\n                      <span className={`status-badge ${inq.status.replace(/\\s+/g, '').toLowerCase()}`}>\r\n                        {inq.status}\r\n                      </span>\r\n                    )}\r\n                  </td>\r\n                  <td>\r\n                    {editModeId === inq.id ? (\r\n                      <select value={editedRemark} onChange={(e) => setEditedRemark(e.target.value)}>\r\n                        {remarkOptions.map(opt => <option key={opt} value={opt}>{opt}</option>)}\r\n                      </select>\r\n                    ) : (\r\n                      <span>{inq.remark}</span>\r\n                    )}\r\n                  </td>\r\n                  <td>{inq.state}</td>\r\n                  <td>{inq.date}</td>\r\n                  <td>\r\n                    {inq.updated_at ? (\r\n                      <FaWhatsapp\r\n                        className=\"wa-icon\"\r\n                        style={{ color: '#25D366', cursor: 'pointer', marginLeft: '6px', fontSize: '20px' }}\r\n                        onClick={() => handleWhatsAppClick(inq)}\r\n                        title=\"Chat on WhatsApp\"\r\n                      />\r\n                    ) : (\r\n                      '-'\r\n                    )}\r\n                  </td>\r\n                  <td>\r\n                    <div className=\"icon-action-group\">\r\n                      {editModeId === inq.id ? (\r\n                        <>\r\n                          <input\r\n                            type=\"text\"\r\n                            placeholder=\"Enter comment\"\r\n                            value={comment}\r\n                            onChange={(e) => setComment(e.target.value)}\r\n                            style={{ width: '100%', marginBottom: '4px' }}\r\n                          />\r\n                          {errors.comment && <div className=\"error-text\">{errors.comment}</div>}\r\n                          <button className=\"icon-only-btn icon-save\" onClick={() => handleSave(inq.id)}>\r\n                            <FaSave />\r\n                            <span className=\"icon-label\">Save</span>\r\n                          </button>\r\n                        </>\r\n                      ) : (\r\n                        <>\r\n                          <button className=\"icon-only-btn icon-edit\" onClick={() => handleEditClick(inq)}>\r\n                            <FaEdit />\r\n                            <span className=\"icon-label\">Edit</span>\r\n                          </button>\r\n                          <button className=\"icon-only-btn icon-detail\" onClick={() => setSelectedInquiry(inq)}>\r\n                            <FaEye />\r\n                            <span className=\"icon-label\">Details</span>\r\n                          </button>\r\n                        </>\r\n                      )}\r\n                    </div>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n      {selectedInquiry && (\r\n        <DetailModal inquiry={selectedInquiry} onClose={() => setSelectedInquiry(null)} />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BrandInquiries;\r\n","import React, { useState, useEffect } from 'react';\r\nimport './brandDashboard.css';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst BrandDashboardHeader = () => {\r\n    // State to store the brand name, with a default fallback value.\r\n    const [brandName, setBrandName] = useState('Brand');\r\n      const navigate = useNavigate();\r\n\r\n    useEffect(() => {\r\n        try {\r\n            // Retrieve the session data from localStorage.\r\n            const sessionString = localStorage.getItem('userSession');\r\n            \r\n            if (sessionString) {\r\n                // If a session string exists, parse it.\r\n                const sessionData = JSON.parse(sessionString);\r\n                \r\n                // Check if the parsed data is valid and contains a name.\r\n                // The '|| \"Brand\"' part is a safeguard. If sessionData.name is undefined, null,\r\n                // or an empty string, it will default to \"Brand\".\r\n                setBrandName(sessionData.name || 'Brand');\r\n            }\r\n            else{\r\n                navigate(\"/\")\r\n            //    setBrandName( 'Brand');\r\n            }\r\n        } catch (error) {\r\n            // Handle cases where localStorage is not accessible or the JSON is malformed.\r\n            console.error(\"Failed to retrieve or parse user session:\", error);\r\n            // In case of an error, the state will remain its default value of 'Brand'.\r\n        }\r\n    }, []); // The empty dependency array ensures this effect runs only once on component mount.\r\n\r\n    return (\r\n        <header className=\"brand-header\">\r\n            {/* Display the personalized greeting using the state variable */}\r\n            <h1>Welcome, {brandName}!</h1>\r\n        </header>\r\n    );\r\n};\r\n\r\nexport default BrandDashboardHeader;","// src/brand/BrandSidebar.jsx\r\nimport React, { useState } from 'react';\r\nimport './brandDashboard.css';\r\nimport { Link } from 'react-router-dom';\r\nimport { FaBars, FaTimes } from 'react-icons/fa';\r\n\r\nconst BrandSidebar = () => {\r\n  const [isOpen, setIsOpen] = useState(true);\r\n\r\n  const toggleSidebar = () => {\r\n    setIsOpen(!isOpen);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className={`brand-sidebar ${isOpen ? 'open' : 'collapsed'}`}>\r\n        <div className=\"sidebar-header\">\r\n          {isOpen ? 'Brand CRM' : ''}\r\n          <button className=\"toggle-btn\" onClick={toggleSidebar}>\r\n            {isOpen ? <FaTimes /> : <FaBars />}\r\n          </button>\r\n        </div>\r\n        <ul className=\"sidebar-menu\">\r\n          <li><Link to=\"/brand/dashboard\">🏠 {isOpen && 'Dashboard'}</Link></li>\r\n          <li><Link to=\"/brand/inquiries\">📨 {isOpen && 'Inquiries'}</Link></li>\r\n          \r\n          {/* ✅ Upload Docs link */}\r\n          <li><Link to=\"/brand/upload-docs\">📁 {isOpen && 'Upload Docs'}</Link></li>\r\n\r\n\r\n          <div className=\"sidebar-divider\" /> {/* Divider line */}\r\n\r\n          <li><Link to=\"/brand/profile\">👤 {isOpen && 'Profile'}</Link></li>\r\n          <li><Link to=\"/pricing\">💼 {isOpen && 'Pricing'}</Link></li>\r\n          <li>\r\n            <a href=\"#\" onClick={() => {\r\n              localStorage.clear(); // or your logout logic\r\n              window.location.href = '/'; // redirect\r\n            }}>\r\n              🚪 {isOpen && 'Logout'}\r\n            </a>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BrandSidebar;\r\n"],"names":["statusOptions","remarkOptions","defaultFilters","name","status","remark","stateId","stateName","city","startDate","endDate","_ref","filters","onChange","states","setStates","useState","cities","setCities","searchParams","useSearchParams","useEffect","urlRemark","get","includes","_objectSpread","fetch","getApiUrl","then","res","json","data","catch","err","console","error","concat","handleChange","e","value","target","selectedState","find","s","String","id","_jsxs","className","children","_jsx","type","placeholder","map","opt","c","onFocus","onBlur","onClick","handleReset","inquiry","onClose","FaUser","FaEnvelope","email","FaMapMarkedAlt","state","FaCity","FaCommentDots","message","date","updated_at","FaClock","openLoginModal","brandId","setBrandId","isPremium","setIsPremium","visibleContacts","setVisibleContacts","editModeId","setEditModeId","editedStatus","setEditedStatus","editedRemark","setEditedRemark","comment","setComment","errors","setErrors","inquiries","setInquiries","setFilters","selectedInquiry","setSelectedInquiry","navigate","useNavigate","sessionData","localStorage","getItem","brandData","JSON","parse","user_type","async","method","headers","body","stringify","brand_id","result","success","is_premium","checkPremium","filteredInquiries","filter","inq","matchesName","toLowerCase","matchesStatus","matchesRemark","matchesState","matchesCity","inquiryDate","Date","BrandSidebar","BrandDashboardHeader","FilterBar","index","_Fragment","phone","handleViewContact","inquiryId","prev","inquiry_id","description","FaPhoneAlt","replace","FaWhatsapp","style","color","cursor","marginLeft","fontSize","phoneNumber","window","open","handleWhatsAppClick","title","width","marginBottom","trim","updated","alert","handleSave","FaSave","handleEditClick","FaEdit","FaEye","DetailModal","brandName","setBrandName","sessionString","isOpen","setIsOpen","toggleSidebar","FaTimes","FaBars","Link","to","href","clear","location"],"sourceRoot":""}