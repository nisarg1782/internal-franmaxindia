{"version":3,"file":"static/js/897.47636d13.chunk.js","mappings":"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","sources":["admin/LeaseProperties.jsx","admin/Sidebar.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport './LeaseProperties.css';\r\nimport Sidebar from './Sidebar';\r\nimport { getApiUrl } from '../utils/api';\r\n\r\nconst LeaseProperties = () => {\r\n    // State to hold the fetched data\r\n    const [properties, setProperties] = useState([]);\r\n    // State to manage which row's details are expanded\r\n    const [expandedRowId, setExpandedRowId] = useState(null);\r\n    // State to handle loading and errors\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [error, setError] = useState(null);\r\n\r\n    // Fetch data from the API on component mount\r\n    useEffect(() => {\r\n        const apiUrl = getApiUrl('get-lease-properties.php');\r\n\r\n        fetch(apiUrl)\r\n            .then(res => {\r\n                if (!res.ok) {\r\n                    throw new Error('Network response was not ok');\r\n                }\r\n                return res.json();\r\n            })\r\n            .then(data => {\r\n                if (data.status === \"success\" && Array.isArray(data.data)) {\r\n                    setProperties(data.data);\r\n                } else {\r\n                    setProperties([]);\r\n                }\r\n            })\r\n            .catch(err => {\r\n                console.error(\"Error fetching lease properties:\", err);\r\n                setError(err.message);\r\n            })\r\n            .finally(() => {\r\n                setIsLoading(false);\r\n            });\r\n    }, []);\r\n\r\n    // Function to toggle the expanded details of a row\r\n    const toggleDetails = (propertyKey) => {\r\n        setExpandedRowId(expandedRowId === propertyKey ? null : propertyKey);\r\n    };\r\n\r\n    return (\r\n        <div className=\"lease-properties-page\">\r\n            <Sidebar />\r\n            <div className=\"lease-properties-content\">\r\n                <h2 className=\"lease-properties-title\">Lease Property Inquiries</h2>\r\n                \r\n                {isLoading ? (\r\n                    <div className=\"text-center text-lg text-gray-500\">Loading...</div>\r\n                ) : error ? (\r\n                    <div className=\"text-center text-lg text-red-500\">Error: {error}</div>\r\n                ) : (\r\n                    <div className=\"lease-properties-table-wrapper\">\r\n                        <table className=\"lease-properties-table\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>#</th>\r\n                                    <th>Owner Name</th>\r\n                                    <th>Contact</th>\r\n                                    <th>Expected Rent</th>\r\n                                    <th>Property Type</th>\r\n                                    <th>View Details</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {properties.length > 0 ? (\r\n                                    properties.map((prop, idx) => (\r\n                                        <React.Fragment key={prop.property_key}>\r\n                                            <tr className=\"hover:bg-gray-100 transition-colors duration-200\">\r\n                                                <td>{idx + 1}</td>\r\n                                                <td>{prop.owner_name}</td>\r\n                                                <td>{prop.contact}</td>\r\n                                                <td>₹{prop.expected_rent}</td>\r\n                                                <td>{prop.property_type}</td>\r\n                                                <td>\r\n                                                    <button \r\n                                                        onClick={() => toggleDetails(prop.property_key)}\r\n                                                        className=\"details-toggle-button\"\r\n                                                    >\r\n                                                        {expandedRowId === prop.property_key ? 'Hide Details' : 'View Details'}\r\n                                                    </button>\r\n                                                </td>\r\n                                            </tr>\r\n                                            {expandedRowId === prop.property_key && (\r\n                                                <tr className=\"detailed-row\">\r\n                                                    <td colSpan=\"6\" className=\"p-4\">\r\n                                                        <div className=\"detailed-content\">\r\n                                                            <p><strong>Email:</strong> {prop.email}</p>\r\n                                                            <p><strong>Address:</strong> {prop.address}</p>\r\n                                                            <p><strong>SQFT:</strong> {prop.sqft}</p>\r\n                                                            <p><strong>Floor Type:</strong> {prop.floor_type}</p>\r\n                                                            <p><strong>State:</strong> {prop.state_name}</p>\r\n                                                            <p><strong>City:</strong> {prop.city_name}</p>\r\n                                                            <p><strong>Message:</strong> {prop.message}</p>\r\n                                                            <p><strong>Created At:</strong> {prop.created_at}</p>\r\n                                                        </div>\r\n                                                    </td>\r\n                                                </tr>\r\n                                            )}\r\n                                        </React.Fragment>\r\n                                    ))\r\n                                ) : (\r\n                                    <tr>\r\n                                        <td colSpan=\"6\" className=\"text-center py-4 text-gray-500\">No lease properties found.</td>\r\n                                    </tr>\r\n                                )}\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default LeaseProperties;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Link, useNavigate } from 'react-router-dom'; // Import Link and useNavigate\r\nimport { toast } from 'react-toastify'; // Import toast for logout message\r\nimport './sidebar.css'; // Ensure this path is correct\r\nimport {\r\n  FaChevronDown, FaChevronRight, FaBuilding, FaUserTie,\r\n  FaBullhorn, FaCity, FaUsers, FaUserCircle, FaThLarge, FaBars, FaTimes\r\n} from 'react-icons/fa';\r\n\r\nconst Sidebar = () => {\r\n  // State to manage the collapse/expand status of each menu section\r\n  const [sectionCollapsed, setSectionCollapsed] = useState({\r\n    master: false, // Set initial state to open for better visibility\r\n    franchising: false, \r\n    marketing: false,\r\n    leasing: false,\r\n    admin: false,\r\n  });\r\n\r\n  // State to manage the overall collapse/expand status of the sidebar itself\r\n  const [sidebarCollapsed, setSidebarCollapsed] = useState(false);\r\n\r\n  // States to hold admin user's name and email from localStorage\r\n  const [adminName, setAdminName] = useState('Guest');\r\n  const [adminEmail, setAdminEmail] = useState('');\r\n\r\n  // Hook from react-router-dom for programmatic navigation\r\n  const navigate = useNavigate();\r\n\r\n  // Effect to read admin information from localStorage when the component mounts\r\n  useEffect(() => {\r\n    const storedAdminName = localStorage.getItem('adminName');\r\n    const storedAdminEmail = localStorage.getItem('adminEmail');\r\n    if (storedAdminName) {\r\n      setAdminName(storedAdminName);\r\n    }\r\n    if (storedAdminEmail) {\r\n      setAdminEmail(storedAdminEmail);\r\n    }\r\n  }, []); // Empty dependency array ensures this runs only once on mount\r\n\r\n  // Toggles the collapse/expand state of a specific menu section\r\n  const toggleSection = (section) => {\r\n    setSectionCollapsed((prev) => ({\r\n      ...prev,\r\n      [section]: !prev[section]\r\n    }));\r\n  };\r\n\r\n  // Handles the logout action\r\n  const handleLogout = () => {\r\n    // ✅ This is where localStorage items are removed\r\n    localStorage.removeItem('adminId');\r\n    localStorage.removeItem('adminName');\r\n    localStorage.removeItem('adminEmail');\r\n    \r\n    toast.info('You have been logged out.'); // Show a logout message\r\n    navigate('/admin/login'); // Redirect to the login page\r\n  };\r\n\r\n  return (\r\n    <aside className={`snbs-sidebar ${sidebarCollapsed ? 'collapsed' : ''}`}>\r\n      <div className=\"snbs-sidebar-header\">\r\n        <div className=\"snbs-logo\">\r\n          {!sidebarCollapsed && (\r\n            <>\r\n              <h2>FRANMAX INDIA</h2>\r\n              {/* Display admin's name and email */}\r\n              <p className=\"snbs-role\">Welcome, {adminName}</p>\r\n              {adminEmail && <p className=\"snbs-email\">{adminEmail}</p>}\r\n            </>\r\n          )}\r\n        </div>\r\n        {/* Button to toggle sidebar collapse/expand */}\r\n        <button\r\n          className=\"snbs-toggle-btn\"\r\n          onClick={() => setSidebarCollapsed(!sidebarCollapsed)}\r\n        >\r\n          {sidebarCollapsed ? <FaBars /> : <FaTimes />}\r\n        </button>\r\n      </div>\r\n\r\n      <nav className=\"snbs-menu\">\r\n        {/* Master Section */}\r\n        \r\n        {/* Franchising Section */}\r\n        <div className=\"snbs-section\">\r\n          <div className=\"snbs-section-header\" onClick={() => toggleSection('franchising')}>\r\n            <span>FRANCHISING</span>\r\n            {sectionCollapsed.franchising ? <FaChevronDown /> : <FaChevronRight />}\r\n          </div>\r\n          {sectionCollapsed.franchising && !sidebarCollapsed && (\r\n            <>\r\n              <Link to=\"/admin/brand-list\" className=\"snbs-link\"><FaBuilding /> Brand</Link>\r\n              <Link to=\"/admin/investors\" className=\"snbs-link\"><FaUserTie /> Investor</Link>\r\n              <Link to=\"/admin/leads\" className=\"snbs-link\"><FaUserTie />Generic Inquiries</Link>\r\n              <Link to=\"/admin/brand-inquiries\" className=\"snbs-link\"><FaUserTie />Brand Specific Inquiries</Link>\r\n              <Link to=\"/admin/partner-inquiries\" className=\"snbs-link\"><FaUserTie />Partner Inquiries</Link>\r\n               <Link to=\"/admin/newsletter\" className=\"snbs-link\"><FaUserTie />Newsletter</Link>\r\n                <Link to=\"/admin/faq\" className=\"snbs-link\"><FaUserTie />FAQ</Link>\r\n                <Link to=\"/admin/event\"  className=\"snbs-link\"><FaUserTie />Event</Link>\r\n            </>\r\n          )}\r\n        </div>\r\n        \r\n        {/* Marketing Section */}\r\n        <div className=\"snbs-section\">\r\n          <div className=\"snbs-section-header\" onClick={() => toggleSection('marketing')}>\r\n            <span>MARKETING</span>\r\n            {sectionCollapsed.marketing ? <FaChevronDown /> : <FaChevronRight />}\r\n          </div>\r\n          {sectionCollapsed.marketing && !sidebarCollapsed && (\r\n            <Link to=\"/admin/marketing-inquiries\" className=\"snbs-link\"><FaBullhorn /> Marketing</Link>\r\n          )}\r\n        </div>\r\n\r\n        {/* Leasing Section */}\r\n        <div className=\"snbs-section\">\r\n          <div className=\"snbs-section-header\" onClick={() => toggleSection('leasing')}>\r\n            <span>LEASING</span>\r\n            {sectionCollapsed.leasing ? <FaChevronDown /> : <FaChevronRight />}\r\n          </div>\r\n          {sectionCollapsed.leasing && !sidebarCollapsed && (\r\n            <>\r\n              <Link to=\"#\" className=\"snbs-link\"><FaCity /> Buy Lease Property inquiries</Link>\r\n              <Link to=\"/admin/lease-properties\" className=\"snbs-link\"><FaCity /> Lease Property inquiries</Link>\r\n              \r\n              <Link to=\"#\" className=\"snbs-link\"><FaCity /> Sell Property</Link>\r\n              <Link to=\"/admin/buy-business-inquiries\" className=\"snbs-link\"><FaCity />Buy Business Inquiry</Link>\r\n              <Link to=\"/admin/sell-business-inquiries\" className=\"snbs-link\"><FaCity /> Sell Business</Link>\r\n            </>\r\n          )}\r\n        </div>\r\n\r\n        {/* Admin Section */}\r\n        <div className=\"snbs-section\">\r\n          <div className=\"snbs-section-header\" onClick={() => toggleSection('admin')}>\r\n            <span>ADMIN</span>\r\n            {sectionCollapsed.admin ? <FaChevronDown /> : <FaChevronRight />}\r\n          </div>\r\n          {sectionCollapsed.admin && !sidebarCollapsed && (\r\n            <>\r\n              <Link to=\"/user-list\" className=\"snbs-link\"><FaUsers /> Users</Link>\r\n          \r\n              {/* Logout link calls the handleLogout function */}\r\n              <Link to=\"#\" onClick={handleLogout} className=\"snbs-link\"><FaThLarge /> Logout</Link>\r\n            </>\r\n          )}\r\n        </div>\r\n      </nav>\r\n    </aside>\r\n  );\r\n};\r\n\r\nexport default Sidebar;\r\n"],"names":["LeaseProperties","properties","setProperties","useState","expandedRowId","setExpandedRowId","isLoading","setIsLoading","error","setError","useEffect","apiUrl","getApiUrl","fetch","then","res","ok","Error","json","data","status","Array","isArray","catch","err","console","message","finally","_jsxs","className","children","_jsx","Sidebar","length","map","prop","idx","React","owner_name","contact","expected_rent","property_type","onClick","toggleDetails","propertyKey","property_key","colSpan","email","address","sqft","floor_type","state_name","city_name","created_at","sectionCollapsed","setSectionCollapsed","master","franchising","marketing","leasing","admin","sidebarCollapsed","setSidebarCollapsed","adminName","setAdminName","adminEmail","setAdminEmail","navigate","useNavigate","storedAdminName","localStorage","getItem","storedAdminEmail","toggleSection","section","prev","_objectSpread","concat","_Fragment","FaBars","FaTimes","FaChevronDown","FaChevronRight","Link","to","FaBuilding","FaUserTie","FaBullhorn","FaCity","FaUsers","handleLogout","removeItem","toast","info","FaThLarge"],"sourceRoot":""}