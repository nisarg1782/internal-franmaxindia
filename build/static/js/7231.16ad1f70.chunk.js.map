{"version":3,"file":"static/js/7231.16ad1f70.chunk.js","mappings":"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","sources":["admin/Sidebar.jsx","admin/AddUserModal.jsx","admin/UserList.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Link, useNavigate } from 'react-router-dom'; // Import Link and useNavigate\r\nimport { toast } from 'react-toastify'; // Import toast for logout message\r\nimport './sidebar.css'; // Ensure this path is correct\r\nimport {\r\n  FaChevronDown, FaChevronRight, FaBuilding, FaUserTie,\r\n  FaBullhorn, FaCity, FaUsers, FaUserCircle, FaThLarge, FaBars, FaTimes\r\n} from 'react-icons/fa';\r\n\r\nconst Sidebar = () => {\r\n  // State to manage the collapse/expand status of each menu section\r\n  const [sectionCollapsed, setSectionCollapsed] = useState({\r\n    master: false, // Set initial state to open for better visibility\r\n    franchising: false, \r\n    marketing: false,\r\n    leasing: false,\r\n    admin: false,\r\n  });\r\n\r\n  // State to manage the overall collapse/expand status of the sidebar itself\r\n  const [sidebarCollapsed, setSidebarCollapsed] = useState(false);\r\n\r\n  // States to hold admin user's name and email from localStorage\r\n  const [adminName, setAdminName] = useState('Guest');\r\n  const [adminEmail, setAdminEmail] = useState('');\r\n\r\n  // Hook from react-router-dom for programmatic navigation\r\n  const navigate = useNavigate();\r\n\r\n  // Effect to read admin information from localStorage when the component mounts\r\n  useEffect(() => {\r\n    const storedAdminName = localStorage.getItem('adminName');\r\n    const storedAdminEmail = localStorage.getItem('adminEmail');\r\n    if (storedAdminName) {\r\n      setAdminName(storedAdminName);\r\n    }\r\n    if (storedAdminEmail) {\r\n      setAdminEmail(storedAdminEmail);\r\n    }\r\n  }, []); // Empty dependency array ensures this runs only once on mount\r\n\r\n  // Toggles the collapse/expand state of a specific menu section\r\n  const toggleSection = (section) => {\r\n    setSectionCollapsed((prev) => ({\r\n      ...prev,\r\n      [section]: !prev[section]\r\n    }));\r\n  };\r\n\r\n  // Handles the logout action\r\n  const handleLogout = () => {\r\n    // ✅ This is where localStorage items are removed\r\n    localStorage.removeItem('adminId');\r\n    localStorage.removeItem('adminName');\r\n    localStorage.removeItem('adminEmail');\r\n    \r\n    toast.info('You have been logged out.'); // Show a logout message\r\n    navigate('/admin/login'); // Redirect to the login page\r\n  };\r\n\r\n  return (\r\n    <aside className={`snbs-sidebar ${sidebarCollapsed ? 'collapsed' : ''}`}>\r\n      <div className=\"snbs-sidebar-header\">\r\n        <div className=\"snbs-logo\">\r\n          {!sidebarCollapsed && (\r\n            <>\r\n              <h2>FRANMAX INDIA</h2>\r\n              {/* Display admin's name and email */}\r\n              <p className=\"snbs-role\">Welcome, {adminName}</p>\r\n              {adminEmail && <p className=\"snbs-email\">{adminEmail}</p>}\r\n            </>\r\n          )}\r\n        </div>\r\n        {/* Button to toggle sidebar collapse/expand */}\r\n        <button\r\n          className=\"snbs-toggle-btn\"\r\n          onClick={() => setSidebarCollapsed(!sidebarCollapsed)}\r\n        >\r\n          {sidebarCollapsed ? <FaBars /> : <FaTimes />}\r\n        </button>\r\n      </div>\r\n\r\n      <nav className=\"snbs-menu\">\r\n        {/* Master Section */}\r\n        \r\n        {/* Franchising Section */}\r\n        <div className=\"snbs-section\">\r\n          <div className=\"snbs-section-header\" onClick={() => toggleSection('franchising')}>\r\n            <span>FRANCHISING</span>\r\n            {sectionCollapsed.franchising ? <FaChevronDown /> : <FaChevronRight />}\r\n          </div>\r\n          {sectionCollapsed.franchising && !sidebarCollapsed && (\r\n            <>\r\n              <Link to=\"/admin/brand-list\" className=\"snbs-link\"><FaBuilding /> Brand</Link>\r\n              <Link to=\"/admin/investors\" className=\"snbs-link\"><FaUserTie /> Investor</Link>\r\n              <Link to=\"/admin/leads\" className=\"snbs-link\"><FaUserTie />Generic Inquiries</Link>\r\n              <Link to=\"/admin/brand-inquiries\" className=\"snbs-link\"><FaUserTie />Brand Specific Inquiries</Link>\r\n              <Link to=\"/admin/partner-inquiries\" className=\"snbs-link\"><FaUserTie />Partner Inquiries</Link>\r\n               <Link to=\"/admin/newsletter\" className=\"snbs-link\"><FaUserTie />Newsletter</Link>\r\n                <Link to=\"/admin/faq\" className=\"snbs-link\"><FaUserTie />FAQ</Link>\r\n                <Link to=\"/admin/event\"  className=\"snbs-link\"><FaUserTie />Event</Link>\r\n            </>\r\n          )}\r\n        </div>\r\n        \r\n        {/* Marketing Section */}\r\n        <div className=\"snbs-section\">\r\n          <div className=\"snbs-section-header\" onClick={() => toggleSection('marketing')}>\r\n            <span>MARKETING</span>\r\n            {sectionCollapsed.marketing ? <FaChevronDown /> : <FaChevronRight />}\r\n          </div>\r\n          {sectionCollapsed.marketing && !sidebarCollapsed && (\r\n            <Link to=\"/admin/marketing-inquiries\" className=\"snbs-link\"><FaBullhorn /> Marketing</Link>\r\n          )}\r\n        </div>\r\n\r\n        {/* Leasing Section */}\r\n        <div className=\"snbs-section\">\r\n          <div className=\"snbs-section-header\" onClick={() => toggleSection('leasing')}>\r\n            <span>LEASING</span>\r\n            {sectionCollapsed.leasing ? <FaChevronDown /> : <FaChevronRight />}\r\n          </div>\r\n          {sectionCollapsed.leasing && !sidebarCollapsed && (\r\n            <>\r\n              <Link to=\"#\" className=\"snbs-link\"><FaCity /> Buy Lease Property inquiries</Link>\r\n              <Link to=\"/admin/lease-properties\" className=\"snbs-link\"><FaCity /> Lease Property inquiries</Link>\r\n              \r\n              <Link to=\"#\" className=\"snbs-link\"><FaCity /> Sell Property</Link>\r\n              <Link to=\"/admin/buy-business-inquiries\" className=\"snbs-link\"><FaCity />Buy Business Inquiry</Link>\r\n              <Link to=\"/admin/sell-business-inquiries\" className=\"snbs-link\"><FaCity /> Sell Business</Link>\r\n            </>\r\n          )}\r\n        </div>\r\n\r\n        {/* Admin Section */}\r\n        <div className=\"snbs-section\">\r\n          <div className=\"snbs-section-header\" onClick={() => toggleSection('admin')}>\r\n            <span>ADMIN</span>\r\n            {sectionCollapsed.admin ? <FaChevronDown /> : <FaChevronRight />}\r\n          </div>\r\n          {sectionCollapsed.admin && !sidebarCollapsed && (\r\n            <>\r\n              <Link to=\"/user-list\" className=\"snbs-link\"><FaUsers /> Users</Link>\r\n          \r\n              {/* Logout link calls the handleLogout function */}\r\n              <Link to=\"#\" onClick={handleLogout} className=\"snbs-link\"><FaThLarge /> Logout</Link>\r\n            </>\r\n          )}\r\n        </div>\r\n      </nav>\r\n    </aside>\r\n  );\r\n};\r\n\r\nexport default Sidebar;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { toast } from 'react-toastify';\r\nimport { getApiUrl } from '../utils/api';\r\nimport './AddUserModal.css';\r\n\r\nexport default function AddUserModal({ isOpen, onClose, onSave }) {\r\n    const [formData, setFormData] = useState({\r\n        name: '',\r\n        email: '',\r\n        password: '',\r\n        status: 'active',\r\n        permissions: [],\r\n    });\r\n    const [isSubmitting, setIsSubmitting] = useState(false);\r\n    const [showPassword, setShowPassword] = useState(false); // New state for password visibility\r\n\r\n    const availablePermissions = [\r\n        'view_dashboard',\r\n        'view_users', 'add_users', 'edit_users',\r\n        'view_brands', 'add_brands', 'edit_brands',\r\n        'view_investors', 'add_investors', 'view_leads',\r\n        'view_marketing_inquiries', 'view_buy_business_inquiries',\r\n        'view_brand_inquiries', 'view_brand_dashboard', 'view_brand_profile', 'upload_brand_docs',\r\n        'view_sell_business_inquiries',\r\n        'view_lease_properties',\r\n        'view_partner_inquiries',\r\n        'view_newsletter',\r\n        \"view_faq\",,\r\n        \"view_events\"\r\n        // New permission added for partner inquiries\r\n        // Added the new permission from the previous context\r\n    ];\r\n\r\n    useEffect(() => {\r\n        if (isOpen) {\r\n            setFormData({\r\n                name: '',\r\n                email: '',\r\n                password: '',\r\n                status: 'active',\r\n                permissions: [],\r\n            });\r\n            setShowPassword(false); // Reset password visibility when the modal opens\r\n        }\r\n    }, [isOpen]);\r\n\r\n    const handleChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setFormData(prev => ({ ...prev, [name]: value }));\r\n    };\r\n\r\n    const handlePermissionChange = (e) => {\r\n        const { value, checked } = e.target;\r\n        setFormData(prev => {\r\n            const currentPermissions = prev.permissions;\r\n            if (checked) {\r\n                return { ...prev, permissions: [...currentPermissions, value] };\r\n            } else {\r\n                return { ...prev, permissions: currentPermissions.filter(p => p !== value) };\r\n            }\r\n        });\r\n    };\r\n\r\n    // New function to toggle password visibility\r\n    const togglePasswordVisibility = () => {\r\n        setShowPassword(!showPassword);\r\n    };\r\n\r\n    const handleSaveClick = async () => {\r\n        const { name, email, password, status, permissions } = formData;\r\n        if (!name || !email || !password || !status) {\r\n            toast.error('All fields (except permissions) are required.');\r\n            return;\r\n        }\r\n\r\n        if (isSubmitting) {\r\n            return;\r\n        }\r\n        setIsSubmitting(true);\r\n\r\n        const dataToSend = {\r\n            name,\r\n            email,\r\n            password,\r\n            status,\r\n            permissions,\r\n        };\r\n\r\n        try {\r\n            const response = await fetch(getApiUrl('add-user.php'), {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify(dataToSend),\r\n            });\r\n\r\n            const responseText = await response.text();\r\n            const result = JSON.parse(responseText);\r\n\r\n            if (result.success) {\r\n                toast.success(result.message);\r\n                onSave();\r\n                onClose();\r\n            } else {\r\n                toast.error(result.message || 'Failed to add user.');\r\n            }\r\n        } catch (e) {\r\n            toast.error('API error adding user: ' + e.message);\r\n            console.error('AddUserModal: Error during API call:', e);\r\n        } finally {\r\n            setIsSubmitting(false);\r\n        }\r\n    };\r\n\r\n    if (!isOpen) return null;\r\n\r\n    return (\r\n        <div className=\"modal-overlay\">\r\n            <div className=\"add-user-modal\">\r\n                <div className=\"modal-header\">\r\n                    <h3>Add New User</h3>\r\n                    <button className=\"close-btn\" onClick={onClose} disabled={isSubmitting}>&times;</button>\r\n                </div>\r\n                <div className=\"modal-body\">\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"name\">Name</label>\r\n                        <input\r\n                            type=\"text\"\r\n                            id=\"name\"\r\n                            name=\"name\"\r\n                            value={formData.name}\r\n                            onChange={handleChange}\r\n                            placeholder=\"Enter user's name\"\r\n                            required\r\n                            disabled={isSubmitting}\r\n                        />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"email\">Email</label>\r\n                        <input\r\n                            type=\"email\"\r\n                            id=\"email\"\r\n                            name=\"email\"\r\n                            value={formData.email}\r\n                            onChange={handleChange}\r\n                            placeholder=\"Enter user's email\"\r\n                            required\r\n                            disabled={isSubmitting}\r\n                        />\r\n                    </div>\r\n                    <div className=\"form-group password-group\"> {/* Added a wrapper for the password field */}\r\n                        <label htmlFor=\"password\">Password</label>\r\n                        <div className=\"password-input-wrapper\">\r\n                            <input\r\n                                type={showPassword ? \"text\" : \"password\"}\r\n                                id=\"password\"\r\n                                name=\"password\"\r\n                                value={formData.password}\r\n                                onChange={handleChange}\r\n                                placeholder=\"Enter password\"\r\n                                required\r\n                                disabled={isSubmitting}\r\n                            />\r\n                            <button\r\n                                type=\"button\"\r\n                                className=\"password-toggle-btn\"\r\n                                onClick={togglePasswordVisibility}\r\n                                disabled={isSubmitting}\r\n                            >\r\n                                {showPassword ? (\r\n                                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"18\" height=\"18\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" className=\"lucide lucide-eye-off\"><path d=\"M9.88 9.88a3 3 0 1 0 4.24 4.24\"/><path d=\"M10.73 5.08A10.43 10.43 0 0 1 12 5c7 0 10 7 10 7a13.16 13.16 0 0 1-1.67 2.68\"/><path d=\"M6.61 6.61A13.52 13.52 0 0 0 2 12s3 7 10 7a9.74 9.74 0 0 0 5.39-1.61\"/><line x1=\"2\" x2=\"22\" y1=\"2\" y2=\"22\"/></svg>\r\n                                ) : (\r\n                                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"18\" height=\"18\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" className=\"lucide lucide-eye\"><path d=\"M2 12s3-7 10-7 10 7 10 7-3 7-10 7-10-7-10-7Z\"/><circle cx=\"12\" cy=\"12\" r=\"3\"/></svg>\r\n                                )}\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"status\">Status</label>\r\n                        <select\r\n                            id=\"status\"\r\n                            name=\"status\"\r\n                            value={formData.status}\r\n                            onChange={handleChange}\r\n                            required\r\n                            disabled={isSubmitting}\r\n                        >\r\n                            <option value=\"active\">Active</option>\r\n                            <option value=\"not active\">Not Active</option>\r\n                        </select>\r\n                    </div>\r\n                    <div className=\"form-group permissions-group\">\r\n                        <label>Permissions</label>\r\n                        <div className=\"permissions-grid\">\r\n                            {availablePermissions.map(permission => (\r\n                                <div key={permission} className=\"permission-item\">\r\n                                    <input\r\n                                        type=\"checkbox\"\r\n                                        id={`perm-${permission}`}\r\n                                        name=\"permissions\"\r\n                                        value={permission}\r\n                                        checked={formData.permissions.includes(permission)}\r\n                                        onChange={handlePermissionChange}\r\n                                        disabled={isSubmitting}\r\n                                    />\r\n                                    <label htmlFor={`perm-${permission}`}>{permission.replace(/_/g, ' ')}</label>\r\n                                </div>\r\n                            ))}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"modal-footer\">\r\n                    <button className=\"save-btn\" onClick={handleSaveClick} disabled={isSubmitting}>\r\n                        {isSubmitting ? 'Saving...' : 'Save User'}\r\n                    </button>\r\n                    <button className=\"cancel-btn\" onClick={onClose} disabled={isSubmitting}>Cancel</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import React, { useEffect, useState, useCallback } from 'react';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { \r\n  FaUserCircle, FaEnvelope, FaLock, FaCheckCircle, FaTimesCircle, \r\n  FaSignInAlt, FaPlus, FaEdit, FaSave, FaTimes // Added edit, save, cancel icons\r\n} from 'react-icons/fa';\r\n\r\nimport { getApiUrl } from '../utils/api'; \r\nimport Sidebar from './Sidebar'; \r\nimport AddUserModal from './AddUserModal'; \r\n\r\nimport './UserList.css'; \r\n\r\nexport default function UserList() {\r\n  const [users, setUsers] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [showAddUserModal, setShowAddUserModal] = useState(false);\r\n\r\n  // State for the new user form (for AddUserModal)\r\n  const [newUserForm, setNewUserForm] = useState({\r\n    name: '',\r\n    email: '',\r\n    password: '',\r\n    status: 'active', // Default status\r\n  });\r\n\r\n  // States for editing an existing user\r\n  const [editingUserId, setEditingUserId] = useState(null);\r\n  const [editableUserName, setEditableUserName] = useState('');\r\n  const [editableUserEmail, setEditableUserEmail] = useState('');\r\n  const [editableUserStatus, setEditableUserStatus] = useState('');\r\n\r\n  // Function to fetch users from the API\r\n  const fetchUsers = useCallback(async () => {\r\n    setLoading(true);\r\n    setError(null);\r\n    try {\r\n      const response = await fetch(getApiUrl('get-users.php')); \r\n      \r\n      if (!response.ok) {\r\n        const errorData = await response.json();\r\n        throw new Error(errorData.message || `HTTP error! status: ${response.status}`);\r\n      }\r\n\r\n      const result = await response.json();\r\n\r\n      if (result.success) {\r\n        setUsers(result.data);\r\n        toast.success('Users loaded successfully!');\r\n      } else {\r\n        toast.error(result.message || 'Failed to fetch users.');\r\n        setError(result.message || 'Failed to fetch users.');\r\n      }\r\n    } catch (e) {\r\n      toast.error('Network error or API issue: ' + e.message);\r\n      setError('Network error or API issue: ' + e.message);\r\n      console.error('Error fetching users:', e);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    fetchUsers(); \r\n  }, [fetchUsers]);\r\n\r\n  // Handler for new user form changes (for AddUserModal)\r\n  const handleNewUserFormChange = (e) => {\r\n    setNewUserForm({ ...newUserForm, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  // Handler for adding a new user (called by AddUserModal)\r\n  const handleAddUserSubmit = async () => {\r\n    const { name, email, password, status } = newUserForm;\r\n    if (!name || !email || !password || !status) {\r\n      toast.error('All fields are required.');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await fetch(getApiUrl('add-user.php'), {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(newUserForm),\r\n      });\r\n\r\n      const result = await response.json();\r\n\r\n      if (result.success) {\r\n        toast.success(result.message);\r\n        setShowAddUserModal(false); // Close modal\r\n        setNewUserForm({ // Reset form\r\n          name: '',\r\n          email: '',\r\n          password: '',\r\n          status: 'active',\r\n        });\r\n        fetchUsers(); // Refresh user list\r\n      } else {\r\n        toast.error(result.message || 'Failed to add user.');\r\n      }\r\n    } catch (e) {\r\n      toast.error('API error adding user: ' + e.message);\r\n      console.error('Error adding user:', e);\r\n    }\r\n  };\r\n\r\n  // Handlers for editing existing users\r\n  const handleEditClick = (user) => {\r\n    setEditingUserId(user.id);\r\n    setEditableUserName(user.name);\r\n    setEditableUserEmail(user.email);\r\n    setEditableUserStatus(user.status);\r\n  };\r\n\r\n  const handleCancelEdit = () => {\r\n    setEditingUserId(null); // Exit edit mode\r\n    setEditableUserName('');\r\n    setEditableUserEmail('');\r\n    setEditableUserStatus('');\r\n  };\r\n\r\n  const handleSaveUser = async (userId) => {\r\n    // Basic validation for editable fields\r\n    if (!editableUserName || !editableUserEmail || !editableUserStatus) {\r\n      toast.error('Name, Email, and Status cannot be empty.');\r\n      return;\r\n    }\r\n    if (!/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(editableUserEmail)) {\r\n      toast.error('Please enter a valid email address.');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await fetch(getApiUrl('update-user.php'), { // Call the new update API\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          id: userId,\r\n          name: editableUserName,\r\n          email: editableUserEmail,\r\n          status: editableUserStatus,\r\n        }),\r\n      });\r\n\r\n      const result = await response.json();\r\n\r\n      if (result.success) {\r\n        toast.success(result.message);\r\n        fetchUsers(); // Refresh the list to show updated data\r\n        handleCancelEdit(); // Exit edit mode\r\n      } else {\r\n        toast.error(result.message || 'Failed to update user.');\r\n      }\r\n    } catch (e) {\r\n      toast.error('API error updating user: ' + e.message);\r\n      console.error('Error updating user:', e);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"dashboard-layout\">\r\n      <Sidebar />\r\n      \r\n      <div className=\"main-content user-list-container\">\r\n        <ToastContainer position=\"top-right\" autoClose={3000} hideProgressBar={false} newestOnTop={false} closeOnClick rtl={false} pauseOnFocusLoss draggable pauseOnHover />\r\n\r\n        <div className=\"user-list-header\">\r\n          <h2 className=\"user-list-title\">User List</h2>\r\n          <button className=\"add-user-btn\" onClick={() => setShowAddUserModal(true)}>\r\n            <FaPlus /> Add User\r\n          </button>\r\n        </div>\r\n\r\n        {loading ? (\r\n          <div className=\"status-message loading-message\">Loading users...</div>\r\n        ) : error ? (\r\n          <div className=\"status-message error-message\">Error: {error}</div>\r\n        ) : users.length === 0 ? (\r\n          <div className=\"status-message no-data-message\">No users found.</div>\r\n        ) : (\r\n          <div className=\"table-wrapper\">\r\n            <table className=\"user-table\">\r\n              <thead>\r\n                <tr>\r\n                  <th>ID</th>\r\n                  <th><FaEnvelope className=\"table-icon\" /> Email</th>\r\n                  <th><FaUserCircle className=\"table-icon\" /> Name</th>\r\n                  <th><FaLock className=\"table-icon\" /> Password</th>\r\n                  <th><FaCheckCircle className=\"table-icon\" /> Status</th>\r\n                  <th><FaSignInAlt className=\"table-icon\" /> Created At</th>\r\n                  <th>Actions</th> {/* New column for actions */}\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {users.map((user) => (\r\n                  <tr key={user.id}>\r\n                    <td>{user.id}</td>\r\n                    <td>\r\n                      {editingUserId === user.id ? (\r\n                        <input \r\n                          type=\"email\" \r\n                          value={editableUserEmail} \r\n                          onChange={(e) => setEditableUserEmail(e.target.value)} \r\n                          className=\"editable-input\"\r\n                        />\r\n                      ) : (\r\n                        user.email\r\n                      )}\r\n                    </td>\r\n                    <td>\r\n                      {editingUserId === user.id ? (\r\n                        <input \r\n                          type=\"text\" \r\n                          value={editableUserName} \r\n                          onChange={(e) => setEditableUserName(e.target.value)} \r\n                          className=\"editable-input\"\r\n                        />\r\n                      ) : (\r\n                        user.name\r\n                      )}\r\n                    </td>\r\n                    <td>********</td> {/* Password is not editable */}\r\n                    <td>\r\n                      {editingUserId === user.id ? (\r\n                        <select \r\n                          value={editableUserStatus} \r\n                          onChange={(e) => setEditableUserStatus(e.target.value)}\r\n                          className=\"editable-select\"\r\n                        >\r\n                          <option value=\"active\">Active</option>\r\n                          <option value=\"not active\">Not Active</option>\r\n                        </select>\r\n                      ) : (\r\n                        <span className={`status-badge ${user.status === 'active' ? 'status-active' : 'status-inactive'}`}>\r\n                          {user.status}\r\n                        </span>\r\n                      )}\r\n                    </td>\r\n                    <td>{user.created_at || 'N/A'}</td>\r\n                    <td>\r\n                      {editingUserId === user.id ? (\r\n                        <>\r\n                          <button \r\n                            className=\"action-btn save-btn\" \r\n                            onClick={() => handleSaveUser(user.id)}\r\n                            title=\"Save Changes\"\r\n                          >\r\n                            <FaSave />\r\n                          </button>\r\n                          <button \r\n                            className=\"action-btn cancel-btn\" \r\n                            onClick={handleCancelEdit}\r\n                            title=\"Cancel Edit\"\r\n                          >\r\n                            <FaTimes />\r\n                          </button>\r\n                        </>\r\n                      ) : (\r\n                        <button \r\n                          className=\"action-btn edit-btn\" \r\n                          onClick={() => handleEditClick(user)}\r\n                          title=\"Edit User\"\r\n                        >\r\n                          <FaEdit />\r\n                        </button>\r\n                      )}\r\n                    </td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        )}\r\n\r\n        {showAddUserModal && (\r\n          <AddUserModal\r\n            isOpen={showAddUserModal}\r\n            onClose={() => setShowAddUserModal(false)}\r\n            onSave={handleAddUserSubmit}\r\n            form={newUserForm}\r\n            handleFormChange={handleNewUserFormChange}\r\n          />\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"names":["Sidebar","sectionCollapsed","setSectionCollapsed","useState","master","franchising","marketing","leasing","admin","sidebarCollapsed","setSidebarCollapsed","adminName","setAdminName","adminEmail","setAdminEmail","navigate","useNavigate","useEffect","storedAdminName","localStorage","getItem","storedAdminEmail","toggleSection","section","prev","_objectSpread","_jsxs","className","concat","children","_jsx","_Fragment","onClick","FaBars","FaTimes","FaChevronDown","FaChevronRight","Link","to","FaBuilding","FaUserTie","FaBullhorn","FaCity","FaUsers","handleLogout","removeItem","toast","info","FaThLarge","AddUserModal","_ref","isOpen","onClose","onSave","formData","setFormData","name","email","password","status","permissions","isSubmitting","setIsSubmitting","showPassword","setShowPassword","handleChange","e","value","target","handlePermissionChange","checked","currentPermissions","filter","p","disabled","htmlFor","type","id","onChange","placeholder","required","togglePasswordVisibility","xmlns","width","height","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","d","x1","x2","y1","y2","cx","cy","r","map","permission","includes","replace","async","error","dataToSend","response","fetch","getApiUrl","method","headers","body","JSON","stringify","responseText","text","result","parse","success","message","console","UserList","users","setUsers","loading","setLoading","setError","showAddUserModal","setShowAddUserModal","newUserForm","setNewUserForm","editingUserId","setEditingUserId","editableUserName","setEditableUserName","editableUserEmail","setEditableUserEmail","editableUserStatus","setEditableUserStatus","fetchUsers","useCallback","ok","errorData","json","Error","data","handleCancelEdit","ToastContainer","position","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","FaPlus","length","FaEnvelope","FaUserCircle","FaLock","FaCheckCircle","FaSignInAlt","user","created_at","test","userId","handleSaveUser","title","FaSave","handleEditClick","FaEdit","form","handleFormChange"],"sourceRoot":""}