{"version":3,"file":"static/js/453.80116df9.chunk.js","mappings":"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","sources":["admin/Faqpage.jsx","admin/Sidebar.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\nimport './Newsletter.css';\r\nimport Sidebar from './Sidebar';\r\nimport { FaPlus, FaEdit, FaSave, FaTimes, FaTrash } from 'react-icons/fa';\r\nimport { getApiUrl } from '../utils/api';\r\nimport { toast, ToastContainer } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nexport default function NewsletterTable() {\r\n    const [faqs, setFaqs] = useState([]);\r\n    const [expandedId, setExpandedId] = useState(null);\r\n    const [loading, setLoading] = useState(true);\r\n    const [isModalOpen, setIsModalOpen] = useState(false);\r\n    \r\n    // State for editing functionality\r\n    const [editingFaqId, setEditingFaqId] = useState(null);\r\n    const [editingFaqData, setEditingFaqData] = useState({ question: '', answer: '' });\r\n\r\n    // New state for delete confirmation\r\n    const [deletingFaqId, setDeletingFaqId] = useState(null);\r\n\r\n    const [newFaq, setNewFaq] = useState({\r\n        question: '',\r\n        answer: '',\r\n    });\r\n\r\n    const toggleExpand = (id) => {\r\n        setExpandedId(expandedId === id ? null : id);\r\n    };\r\n\r\n    const openModal = () => setIsModalOpen(true);\r\n    const closeModal = () => {\r\n        setIsModalOpen(false);\r\n        setNewFaq({\r\n            question: '',\r\n            answer: '',\r\n        });\r\n    };\r\n\r\n    const handleQuestionChange = (e) => {\r\n        const { value } = e.target;\r\n        setNewFaq((prevFaq) => ({\r\n            ...prevFaq,\r\n            question: value,\r\n        }));\r\n    };\r\n\r\n    const handleAnswerChange = (content) => {\r\n        setNewFaq((prevFaq) => ({\r\n            ...prevFaq,\r\n            answer: content,\r\n        }));\r\n    };\r\n\r\n    // Handlers for the edit form\r\n    const handleEditClick = (faq) => {\r\n        setEditingFaqId(faq.id);\r\n        setEditingFaqData({ question: faq.question, answer: faq.answer });\r\n    };\r\n\r\n    const handleEditCancel = () => {\r\n        setEditingFaqId(null);\r\n        setEditingFaqData({ question: '', answer: '' });\r\n    };\r\n\r\n    const handleEditChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setEditingFaqData(prevData => ({ ...prevData, [name]: value }));\r\n    };\r\n\r\n    const handleEditQuillChange = (content) => {\r\n        setEditingFaqData(prevData => ({ ...prevData, answer: content }));\r\n    };\r\n\r\n    // New handlers for deletion\r\n    const handleDeleteClick = (id) => {\r\n        setDeletingFaqId(id);\r\n    };\r\n\r\n    const handleConfirmDelete = () => {\r\n        const formData = new FormData();\r\n        formData.append('id', deletingFaqId);\r\n        formData.append('action', 'delete');\r\n        manageFaq(formData);\r\n        setDeletingFaqId(null); // Close the confirmation modal\r\n    };\r\n\r\n    const handleCancelDelete = () => {\r\n        setDeletingFaqId(null); // Close the confirmation modal\r\n    };\r\n    \r\n    // Unified function to handle add, edit, and delete API calls\r\n    const manageFaq = async (formData) => {\r\n        setLoading(true);\r\n        try {\r\n            const res = await fetch(getApiUrl('add-faq.php'), {\r\n                method: 'POST',\r\n                body: formData,\r\n            });\r\n\r\n            if (!res.ok) {\r\n                throw new Error('Network response was not ok.');\r\n            }\r\n\r\n            const result = await res.json();\r\n            if (result.success) {\r\n                toast.success(result.message);\r\n                fetchFaqs();\r\n                closeModal();\r\n                setEditingFaqId(null); // Exit edit mode\r\n            } else {\r\n                toast.error(result.message || 'An unexpected error occurred.');\r\n            }\r\n        } catch (err) {\r\n            toast.error('Failed to communicate with the server.');\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        const formData = new FormData();\r\n        formData.append('action', 'add');\r\n        formData.append('question', newFaq.question);\r\n        formData.append('answer', newFaq.answer);\r\n        manageFaq(formData);\r\n    };\r\n\r\n    const handleEditSubmit = (e) => {\r\n        e.preventDefault();\r\n        const formData = new FormData();\r\n        formData.append('action', 'edit');\r\n        formData.append('id', editingFaqId);\r\n        formData.append('question', editingFaqData.question);\r\n        formData.append('answer', editingFaqData.answer);\r\n        manageFaq(formData);\r\n    };\r\n\r\n    const fetchFaqs = async () => {\r\n        setLoading(true);\r\n        try {\r\n            const res = await fetch(getApiUrl('get-faq.php'));\r\n            if (!res.ok) {\r\n                throw new Error('Network response was not ok');\r\n            }\r\n            const data = await res.json();\r\n\r\n            if (data.success) {\r\n                setFaqs(data.faq);\r\n            } else {\r\n                setFaqs([]);\r\n            }\r\n        } catch (err) {\r\n            toast.error('Failed to fetch FAQs.');\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        fetchFaqs();\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"newsletter-page-container\">\r\n            <Sidebar />\r\n            <div className=\"main-content\">\r\n                <ToastContainer />\r\n                <div className=\"table-header\">\r\n                    <h2 className=\"table-title\">FAQs</h2>\r\n                    <button onClick={openModal} className=\"add-news-btn\">\r\n                        <FaPlus className=\"icon\" /> Add FAQ\r\n                    </button>\r\n                </div>\r\n\r\n                {loading && <div className=\"loading\">Loading...</div>}\r\n\r\n                {!loading && faqs.length === 0 && (\r\n                    <div className=\"no-data-message\">No FAQs found.</div>\r\n                )}\r\n\r\n                {!loading && faqs.length > 0 && (\r\n                    <div className=\"table-wrapper\">\r\n                        <table className=\"newsletter-table\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>ID</th>\r\n                                    <th>Question</th>\r\n                                    <th>Created At</th>\r\n                                    <th>Action</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {faqs.map((faq) => (\r\n                                    <React.Fragment key={faq.id}>\r\n                                        {editingFaqId === faq.id ? (\r\n                                            <tr className=\"edit-row\">\r\n                                                <td>{faq.id}</td>\r\n                                                <td>\r\n                                                    <input\r\n                                                        type=\"text\"\r\n                                                        name=\"question\"\r\n                                                        value={editingFaqData.question}\r\n                                                        onChange={handleEditChange}\r\n                                                    />\r\n                                                </td>\r\n                                                <td>{faq.created_at}</td>\r\n                                                <td className=\"action-buttons\">\r\n                                                    <button onClick={handleEditSubmit} className=\"save-btn\">\r\n                                                        <FaSave /> Save\r\n                                                    </button>\r\n                                                    <button onClick={handleEditCancel} className=\"cancel-btn\">\r\n                                                        <FaTimes /> Cancel\r\n                                                    </button>\r\n                                                </td>\r\n                                            </tr>\r\n                                        ) : (\r\n                                            <tr className=\"summary-row\">\r\n                                                <td>{faq.id}</td>\r\n                                                <td>{faq.question}</td>\r\n                                                <td>{faq.created_at}</td>\r\n                                                <td className=\"action-buttons\">\r\n                                                    <button onClick={() => toggleExpand(faq.id)} className=\"expand-btn\">\r\n                                                        {expandedId === faq.id ? 'Hide Answer' : 'View Answer'}\r\n                                                    </button>\r\n                                                    <button onClick={() => handleEditClick(faq)} className=\"edit-btn\">\r\n                                                        <FaEdit /> Edit\r\n                                                    </button>\r\n                                                    <button onClick={() => handleDeleteClick(faq.id)} className=\"delete-btn\">\r\n                                                        <FaTrash /> Delete\r\n                                                    </button>\r\n                                                </td>\r\n                                            </tr>\r\n                                        )}\r\n                                        {editingFaqId === faq.id && (\r\n                                            <tr className=\"details-row\">\r\n                                                <td colSpan=\"4\">\r\n                                                    <div className=\"details-box\">\r\n                                                        <ReactQuill\r\n                                                            theme=\"snow\"\r\n                                                            value={editingFaqData.answer}\r\n                                                            onChange={handleEditQuillChange}\r\n                                                        />\r\n                                                    </div>\r\n                                                </td>\r\n                                            </tr>\r\n                                        )}\r\n                                        {expandedId === faq.id && (\r\n                                            <tr className=\"details-row\">\r\n                                                <td colSpan=\"4\">\r\n                                                    <div className=\"details-box\">\r\n                                                        <div\r\n                                                            className=\"newsletter-description-html\"\r\n                                                            dangerouslySetInnerHTML={{ __html: faq.answer }}\r\n                                                        />\r\n                                                    </div>\r\n                                                </td>\r\n                                            </tr>\r\n                                        )}\r\n                                    </React.Fragment>\r\n                                ))}\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                )}\r\n            </div>\r\n\r\n            {/* Modal for adding a new FAQ */}\r\n            {isModalOpen && (\r\n                <div className=\"modal-overlay\">\r\n                    <div className=\"modal-content\">\r\n                        <div className=\"modal-header\">\r\n                            <h3>Add New FAQ</h3>\r\n                            <button className=\"close-btn\" onClick={closeModal}>&times;</button>\r\n                        </div>\r\n                        <form onSubmit={handleSubmit} className=\"add-news-form\">\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"question\">Question</label>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    id=\"question\"\r\n                                    name=\"question\"\r\n                                    value={newFaq.question}\r\n                                    onChange={handleQuestionChange}\r\n                                    required\r\n                                />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label>Answer</label>\r\n                                <ReactQuill\r\n                                    theme=\"snow\"\r\n                                    value={newFaq.answer}\r\n                                    onChange={handleAnswerChange}\r\n                                />\r\n                            </div>\r\n                            <div className=\"form-actions\">\r\n                                <button type=\"submit\" className=\"submit-btn\">Add FAQ</button>\r\n                                <button type=\"button\" className=\"cancel-btn\" onClick={closeModal}>Cancel</button>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            )}\r\n            \r\n            {/* Modal for delete confirmation */}\r\n            {deletingFaqId && (\r\n                <div className=\"modal-overlay\">\r\n                    <div className=\"modal-content\">\r\n                        <div className=\"modal-header\">\r\n                            <h3>Confirm Deletion</h3>\r\n                            <button className=\"close-btn\" onClick={handleCancelDelete}>&times;</button>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                            <p>Are you sure you want to delete this FAQ? This action cannot be undone.</p>\r\n                        </div>\r\n                        <div className=\"modal-footer\">\r\n                            <button className=\"delete-btn\" onClick={handleConfirmDelete}>\r\n                                <FaTrash /> Delete\r\n                            </button>\r\n                            <button className=\"cancel-btn\" onClick={handleCancelDelete}>\r\n                                <FaTimes /> Cancel\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n}","import React, { useState, useEffect } from 'react';\r\nimport { Link, useNavigate } from 'react-router-dom'; // Import Link and useNavigate\r\nimport { toast } from 'react-toastify'; // Import toast for logout message\r\nimport './sidebar.css'; // Ensure this path is correct\r\nimport {\r\n  FaChevronDown, FaChevronRight, FaBuilding, FaUserTie,\r\n  FaBullhorn, FaCity, FaUsers, FaUserCircle, FaThLarge, FaBars, FaTimes\r\n} from 'react-icons/fa';\r\n\r\nconst Sidebar = () => {\r\n  // State to manage the collapse/expand status of each menu section\r\n  const [sectionCollapsed, setSectionCollapsed] = useState({\r\n    master: false, // Set initial state to open for better visibility\r\n    franchising: false, \r\n    marketing: false,\r\n    leasing: false,\r\n    admin: false,\r\n  });\r\n\r\n  // State to manage the overall collapse/expand status of the sidebar itself\r\n  const [sidebarCollapsed, setSidebarCollapsed] = useState(false);\r\n\r\n  // States to hold admin user's name and email from localStorage\r\n  const [adminName, setAdminName] = useState('Guest');\r\n  const [adminEmail, setAdminEmail] = useState('');\r\n\r\n  // Hook from react-router-dom for programmatic navigation\r\n  const navigate = useNavigate();\r\n\r\n  // Effect to read admin information from localStorage when the component mounts\r\n  useEffect(() => {\r\n    const storedAdminName = localStorage.getItem('adminName');\r\n    const storedAdminEmail = localStorage.getItem('adminEmail');\r\n    if (storedAdminName) {\r\n      setAdminName(storedAdminName);\r\n    }\r\n    if (storedAdminEmail) {\r\n      setAdminEmail(storedAdminEmail);\r\n    }\r\n  }, []); // Empty dependency array ensures this runs only once on mount\r\n\r\n  // Toggles the collapse/expand state of a specific menu section\r\n  const toggleSection = (section) => {\r\n    setSectionCollapsed((prev) => ({\r\n      ...prev,\r\n      [section]: !prev[section]\r\n    }));\r\n  };\r\n\r\n  // Handles the logout action\r\n  const handleLogout = () => {\r\n    // ✅ This is where localStorage items are removed\r\n    localStorage.removeItem('adminId');\r\n    localStorage.removeItem('adminName');\r\n    localStorage.removeItem('adminEmail');\r\n    \r\n    toast.info('You have been logged out.'); // Show a logout message\r\n    navigate('/admin/login'); // Redirect to the login page\r\n  };\r\n\r\n  return (\r\n    <aside className={`snbs-sidebar ${sidebarCollapsed ? 'collapsed' : ''}`}>\r\n      <div className=\"snbs-sidebar-header\">\r\n        <div className=\"snbs-logo\">\r\n          {!sidebarCollapsed && (\r\n            <>\r\n              <h2>FRANMAX INDIA</h2>\r\n              {/* Display admin's name and email */}\r\n              <p className=\"snbs-role\">Welcome, {adminName}</p>\r\n              {adminEmail && <p className=\"snbs-email\">{adminEmail}</p>}\r\n            </>\r\n          )}\r\n        </div>\r\n        {/* Button to toggle sidebar collapse/expand */}\r\n        <button\r\n          className=\"snbs-toggle-btn\"\r\n          onClick={() => setSidebarCollapsed(!sidebarCollapsed)}\r\n        >\r\n          {sidebarCollapsed ? <FaBars /> : <FaTimes />}\r\n        </button>\r\n      </div>\r\n\r\n      <nav className=\"snbs-menu\">\r\n        {/* Master Section */}\r\n        \r\n        {/* Franchising Section */}\r\n        <div className=\"snbs-section\">\r\n          <div className=\"snbs-section-header\" onClick={() => toggleSection('franchising')}>\r\n            <span>FRANCHISING</span>\r\n            {sectionCollapsed.franchising ? <FaChevronDown /> : <FaChevronRight />}\r\n          </div>\r\n          {sectionCollapsed.franchising && !sidebarCollapsed && (\r\n            <>\r\n              <Link to=\"/admin/brand-list\" className=\"snbs-link\"><FaBuilding /> Brand</Link>\r\n              <Link to=\"/admin/investors\" className=\"snbs-link\"><FaUserTie /> Investor</Link>\r\n              <Link to=\"/admin/leads\" className=\"snbs-link\"><FaUserTie />Generic Inquiries</Link>\r\n              <Link to=\"/admin/brand-inquiries\" className=\"snbs-link\"><FaUserTie />Brand Specific Inquiries</Link>\r\n              <Link to=\"/admin/partner-inquiries\" className=\"snbs-link\"><FaUserTie />Partner Inquiries</Link>\r\n               <Link to=\"/admin/newsletter\" className=\"snbs-link\"><FaUserTie />Newsletter</Link>\r\n                <Link to=\"/admin/faq\" className=\"snbs-link\"><FaUserTie />FAQ</Link>\r\n                <Link to=\"/admin/event\"  className=\"snbs-link\"><FaUserTie />Event</Link>\r\n            </>\r\n          )}\r\n        </div>\r\n        \r\n        {/* Marketing Section */}\r\n        <div className=\"snbs-section\">\r\n          <div className=\"snbs-section-header\" onClick={() => toggleSection('marketing')}>\r\n            <span>MARKETING</span>\r\n            {sectionCollapsed.marketing ? <FaChevronDown /> : <FaChevronRight />}\r\n          </div>\r\n          {sectionCollapsed.marketing && !sidebarCollapsed && (\r\n            <Link to=\"/admin/marketing-inquiries\" className=\"snbs-link\"><FaBullhorn /> Marketing</Link>\r\n          )}\r\n        </div>\r\n\r\n        {/* Leasing Section */}\r\n        <div className=\"snbs-section\">\r\n          <div className=\"snbs-section-header\" onClick={() => toggleSection('leasing')}>\r\n            <span>LEASING</span>\r\n            {sectionCollapsed.leasing ? <FaChevronDown /> : <FaChevronRight />}\r\n          </div>\r\n          {sectionCollapsed.leasing && !sidebarCollapsed && (\r\n            <>\r\n              <Link to=\"#\" className=\"snbs-link\"><FaCity /> Buy Lease Property inquiries</Link>\r\n              <Link to=\"/admin/lease-properties\" className=\"snbs-link\"><FaCity /> Lease Property inquiries</Link>\r\n              \r\n              <Link to=\"#\" className=\"snbs-link\"><FaCity /> Sell Property</Link>\r\n              <Link to=\"/admin/buy-business-inquiries\" className=\"snbs-link\"><FaCity />Buy Business Inquiry</Link>\r\n              <Link to=\"/admin/sell-business-inquiries\" className=\"snbs-link\"><FaCity /> Sell Business</Link>\r\n            </>\r\n          )}\r\n        </div>\r\n\r\n        {/* Admin Section */}\r\n        <div className=\"snbs-section\">\r\n          <div className=\"snbs-section-header\" onClick={() => toggleSection('admin')}>\r\n            <span>ADMIN</span>\r\n            {sectionCollapsed.admin ? <FaChevronDown /> : <FaChevronRight />}\r\n          </div>\r\n          {sectionCollapsed.admin && !sidebarCollapsed && (\r\n            <>\r\n              <Link to=\"/user-list\" className=\"snbs-link\"><FaUsers /> Users</Link>\r\n          \r\n              {/* Logout link calls the handleLogout function */}\r\n              <Link to=\"#\" onClick={handleLogout} className=\"snbs-link\"><FaThLarge /> Logout</Link>\r\n            </>\r\n          )}\r\n        </div>\r\n      </nav>\r\n    </aside>\r\n  );\r\n};\r\n\r\nexport default Sidebar;\r\n"],"names":["NewsletterTable","faqs","setFaqs","useState","expandedId","setExpandedId","loading","setLoading","isModalOpen","setIsModalOpen","editingFaqId","setEditingFaqId","editingFaqData","setEditingFaqData","question","answer","deletingFaqId","setDeletingFaqId","newFaq","setNewFaq","closeModal","handleEditCancel","handleEditChange","e","name","value","target","prevData","_objectSpread","handleEditQuillChange","content","handleCancelDelete","manageFaq","async","res","fetch","getApiUrl","method","body","formData","ok","Error","result","json","success","toast","message","fetchFaqs","error","err","handleEditSubmit","preventDefault","FormData","append","data","faq","useEffect","_jsxs","className","children","_jsx","Sidebar","ToastContainer","onClick","openModal","FaPlus","length","map","React","id","type","onChange","created_at","FaSave","FaTimes","toggleExpand","handleEditClick","FaEdit","handleDeleteClick","FaTrash","colSpan","ReactQuill","theme","dangerouslySetInnerHTML","__html","onSubmit","htmlFor","prevFaq","required","handleConfirmDelete","sectionCollapsed","setSectionCollapsed","master","franchising","marketing","leasing","admin","sidebarCollapsed","setSidebarCollapsed","adminName","setAdminName","adminEmail","setAdminEmail","navigate","useNavigate","storedAdminName","localStorage","getItem","storedAdminEmail","toggleSection","section","prev","concat","_Fragment","FaBars","FaChevronDown","FaChevronRight","Link","to","FaBuilding","FaUserTie","FaBullhorn","FaCity","FaUsers","handleLogout","removeItem","info","FaThLarge"],"sourceRoot":""}