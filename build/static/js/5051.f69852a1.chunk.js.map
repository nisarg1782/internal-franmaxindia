{"version":3,"file":"static/js/5051.f69852a1.chunk.js","mappings":"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","sources":["components/EnquiryModal.jsx","components/BusinessDetail.jsx"],"sourcesContent":["// src/components/EnquiryModal.jsx\r\nimport React, { useEffect, useState } from 'react';\r\nimport Select from 'react-select';\r\nimport { toast, ToastContainer } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport './design/EnquiryModal.css';\r\nimport { getApiUrl } from '../utils/api';\r\n\r\nconst EnquiryModal = ({ onClose, businessId }) => {\r\n  const [states, setStates] = useState([]);\r\n  const [cities, setCities] = useState([]);\r\n  const [form, setForm] = useState({\r\n    name: '',\r\n    number: '',\r\n    email: '',\r\n    state_id: '',\r\n    city_id: '',\r\n    message: '',\r\n    business_id: businessId || ''\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (businessId) {\r\n      setForm(prev => ({ ...prev, business_id: businessId }));\r\n    }\r\n  }, [businessId]);\r\n\r\n  useEffect(() => {\r\n    fetch(getApiUrl('get-indian-states.php'))\r\n      .then(res => res.json())\r\n      .then(data => {\r\n        if (Array.isArray(data)) {\r\n          const options = data.map(state => ({ value: state.id, label: state.name }));\r\n          setStates(options);\r\n        }\r\n      });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (form.state_id) {\r\n      fetch(getApiUrl(`get-cities.php?state_id=${form.state_id}`))\r\n        .then(res => res.json())\r\n        .then(data => {\r\n          if (Array.isArray(data)) {\r\n            const options = data.map(city => ({ value: city.id, label: city.name }));\r\n            setCities(options);\r\n          }\r\n        });\r\n    } else {\r\n      setCities([]);\r\n    }\r\n  }, [form.state_id]);\r\n\r\n  const handleChange = e => {\r\n    const { name, value } = e.target;\r\n    setForm(prev => ({ ...prev, [name]: value }));\r\n  };\r\n\r\n  const handleSelectChange = (selectedOption, actionMeta) => {\r\n    const { name } = actionMeta;\r\n    setForm(prev => ({ ...prev, [name]: selectedOption ? selectedOption.value : '' }));\r\n  };\r\n\r\n  const validateForm = () => {\r\n    const { name, number, email, state_id, city_id } = form;\r\n\r\n    const trimmedName = name.trim();\r\n    const nameRegex = /^[a-zA-Z\\s]+$/;\r\n    const numberRegex = /^[6-9]\\d{9}$/;\r\n\r\n    if (!trimmedName || !nameRegex.test(trimmedName)) {\r\n      toast.error(\"Please enter a valid name (no special characters or empty spaces)\");\r\n      return false;\r\n    }\r\n\r\n    if (!email || !/\\S+@\\S+\\.\\S+/.test(email)) {\r\n      toast.error(\"Please enter a valid email\");\r\n      return false;\r\n    }\r\n\r\n    if (!numberRegex.test(number)) {\r\n      toast.error(\"Phone number must start with 6/7/8/9 and be 10 digits\");\r\n      return false;\r\n    }\r\n\r\n    if (!state_id) {\r\n      toast.error(\"Please select a state\");\r\n      return false;\r\n    }\r\n\r\n    if (!city_id) {\r\n      toast.error(\"Please select a city\");\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    if (!validateForm()) return;\r\n\r\n    fetch(getApiUrl('submit-business-enquiry.php'), {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify(form)\r\n    })\r\n      .then(res => res.json())\r\n      .then(data => {\r\n        if (data.success) {\r\n          toast.success('Enquiry submitted successfully ✅');\r\n          setTimeout(() => onClose(), 2000);\r\n        } else {\r\n          toast.error(data.error || 'Submission failed ❌');\r\n        }\r\n      })\r\n      .catch(err => {\r\n        console.error('Submission error:', err);\r\n        toast.error('An error occurred during submission');\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"enquiry-modal-overlay\">\r\n      <div className=\"enquiry-modal\">\r\n        <button className=\"close-btn\" onClick={onClose}>&times;</button>\r\n        <h2>Send Enquiry</h2>\r\n        <form onSubmit={handleSubmit}>\r\n          <input type=\"hidden\" name=\"business_id\" value={form.business_id} />\r\n\r\n          <input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            placeholder=\"Full Name\"\r\n            value={form.name}\r\n            onChange={handleChange}\r\n            required\r\n          />\r\n\r\n          <input\r\n            type=\"email\"\r\n            name=\"email\"\r\n            placeholder=\"Email\"\r\n            value={form.email}\r\n            onChange={handleChange}\r\n            required\r\n          />\r\n\r\n          <input\r\n            type=\"text\"\r\n            name=\"number\"\r\n            placeholder=\"Phone Number\"\r\n            value={form.number}\r\n            onChange={handleChange}\r\n            required\r\n          />\r\n\r\n          <Select\r\n            name=\"state_id\"\r\n            placeholder=\"Select State\"\r\n            options={states}\r\n            value={states.find(s => s.value === form.state_id) || null}\r\n            onChange={handleSelectChange}\r\n            className=\"react-select\"\r\n            classNamePrefix=\"select\"\r\n          />\r\n\r\n          <Select\r\n            name=\"city_id\"\r\n            placeholder=\"Select City\"\r\n            options={cities}\r\n            value={cities.find(c => c.value === form.city_id) || null}\r\n            onChange={handleSelectChange}\r\n            className=\"react-select\"\r\n            classNamePrefix=\"select\"\r\n          />\r\n\r\n          <textarea\r\n            name=\"message\"\r\n            placeholder=\"Your message (optional)\"\r\n            value={form.message}\r\n            onChange={handleChange}\r\n          />\r\n\r\n          <button type=\"submit\" className=\"submit-btn\">Submit</button>\r\n        </form>\r\n      </div>\r\n      <ToastContainer position=\"top-right\" autoClose={3000} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EnquiryModal;\r\n","// src/pages/BusinessDetail.jsx\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport EnquiryModal from '../components/EnquiryModal';\r\nimport './design/BusinessDetail.css';\r\nimport { getApiUrl } from '../utils/api';\r\n\r\nconst BusinessDetail = () => {\r\n  const { id } = useParams();\r\n  const [business, setBusiness] = useState(null);\r\n  const [showModal, setShowModal] = useState(false);\r\n\r\n  useEffect(() => {\r\n    fetch(getApiUrl(`get-business-detail.php?uuid=${id}`))\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        if (data.success) {\r\n          setBusiness(data.business);\r\n        }\r\n      });\r\n  }, [id]);\r\n\r\n  if (!business) return <div className=\"loading\">Loading...</div>;\r\n\r\n  return (\r\n    <div className=\"business-detail\">\r\n      <div className=\"business-info\">\r\n        <div className=\"business-image\">\r\n          <img src={business.image} alt=\"image not available\" />\r\n        </div>\r\n        <div className=\"business-details\">\r\n          <p><strong>Expected Amount:</strong> ₹{business.expected_amount}</p>\r\n          <p><strong>Location:</strong> {business.city_name}, {business.state_name}</p>\r\n          <p><strong>Description:</strong></p>\r\n          <p className=\"description\">{business.description}</p>\r\n          <button onClick={() => setShowModal(true)} className=\"enquire-now-btn\">Enquire Now</button>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"business-quote-section\">\r\n        <h3>Why Invest in a Running Business?</h3>\r\n        <p className=\"quote\">\"Buying an existing business means cash flow from day one.\"</p>\r\n        <ul className=\"benefits-list\">\r\n          <li>✅ Immediate Revenue & Existing Customer Base</li>\r\n          <li>✅ Trained Staff & Established Brand</li>\r\n          <li>✅ Proven Business Model</li>\r\n          <li>✅ Easier to Finance from Banks/Investors</li>\r\n          <li>✅ Reduced Startup Risks</li>\r\n        </ul>\r\n      </div>\r\n\r\n      {showModal && (\r\n        <EnquiryModal onClose={() => setShowModal(false)} businessId={business.uuid} />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BusinessDetail;\r\n"],"names":["_ref","onClose","businessId","states","setStates","useState","cities","setCities","form","setForm","name","number","email","state_id","city_id","message","business_id","useEffect","prev","_objectSpread","fetch","getApiUrl","then","res","json","data","Array","isArray","options","map","state","value","id","label","concat","city","handleChange","e","target","handleSelectChange","selectedOption","actionMeta","_jsxs","className","children","_jsx","onClick","onSubmit","preventDefault","validateForm","trimmedName","trim","test","toast","error","method","headers","body","JSON","stringify","success","setTimeout","catch","err","console","type","placeholder","onChange","required","Select","find","s","classNamePrefix","c","ToastContainer","position","autoClose","BusinessDetail","useParams","business","setBusiness","showModal","setShowModal","src","image","alt","expected_amount","city_name","state_name","description","EnquiryModal","uuid"],"sourceRoot":""}