{"version":3,"file":"static/js/3265.e358012b.chunk.js","mappings":"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","sources":["admin/SellBusinessInquiries.jsx","admin/Sidebar.jsx"],"sourcesContent":["// File: src/components/BuyPropertyInquiries.jsx\r\nimport React, { useEffect, useState } from 'react';\r\nimport './SellBusinessInquiries.css'; // Ensure this path is correct\r\nimport Sidebar from './Sidebar';\r\nimport { getApiUrl } from '../utils/api';\r\n\r\nconst BuyPropertyInquiries = () => {\r\n    const [inquiries, setInquiries] = useState([]);\r\n    const [expandedRowId, setExpandedRowId] = useState(null);\r\n\r\n    useEffect(() => {\r\n        fetch(getApiUrl('get-sell-business-inquiries.php'))\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                if (data.status === \"success\") {\r\n                    setInquiries(data.inquiries);\r\n                }\r\n            });\r\n    }, []);\r\n\r\n    const toggleDetails = (id) => {\r\n        setExpandedRowId(expandedRowId === id ? null : id);\r\n    };\r\n\r\n    return (\r\n        <div className=\"snb-buyprop-page\">\r\n            <Sidebar />\r\n            <div className=\"snb-buyprop-content\">\r\n                <h2 className=\"snb-buyprop-title\">Sell Business Inquiries</h2>\r\n                <div className=\"snb-buyprop-table-wrapper\">\r\n                    <table className=\"snb-buyprop-table\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>#</th>\r\n                                <th>Business Name</th>\r\n                                <th>Full Name</th>\r\n                                <th>Contact</th>\r\n                                <th>Inquiry Date</th>\r\n                                <th>View Details</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {inquiries.length > 0 ? (\r\n                                inquiries.map((inq, idx) => (\r\n                                    <React.Fragment key={inq.id}>\r\n                                        <tr className=\"snb-overview-row\">\r\n                                            <td>{idx + 1}</td>\r\n                                            <td>{inq.business_name}</td>\r\n                                            <td>{inq.full_name}</td>\r\n                                            <td>{inq.contact}</td>\r\n                                            <td>{inq.created_at}</td>\r\n                                            <td className=\"snb-details-toggle\">\r\n                                                <button onClick={() => toggleDetails(inq.id)}>\r\n                                                    {expandedRowId === inq.id ? 'Hide Details' : 'View Details'}\r\n                                                </button>\r\n                                            </td>\r\n                                        </tr>\r\n                                        {expandedRowId === inq.id && (\r\n                                            <tr className=\"snb-detailed-row\">\r\n                                                <td colSpan=\"6\">\r\n                                                    <div className=\"snb-details-content\">\r\n                                                        <p><strong>Email:</strong> {inq.email}</p>\r\n                                                        <p><strong>Address:</strong> {inq.full_address}</p>\r\n                                                        <p><strong>Asking Price:</strong> {inq.expected_amount}</p>\r\n                                                        <p><strong>State:</strong> {inq.state_name}</p>\r\n                                                        <p><strong>City:</strong> {inq.city_name}</p>\r\n                                                        <p><strong>Message:</strong> {inq.description}</p>\r\n                                                        <p><strong>Sector:</strong> {inq.sector_name}</p>\r\n                                                    </div>\r\n                                                </td>\r\n                                            </tr>\r\n                                        )}\r\n                                    </React.Fragment>\r\n                                ))\r\n                            ) : (\r\n                                <tr>\r\n                                    <td colSpan=\"6\" style={{ textAlign: 'center' }}>No inquiries found.</td>\r\n                                </tr>\r\n                            )}\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default BuyPropertyInquiries;","import React, { useState, useEffect } from 'react';\r\nimport { Link, useNavigate } from 'react-router-dom'; // Import Link and useNavigate\r\nimport { toast } from 'react-toastify'; // Import toast for logout message\r\nimport './sidebar.css'; // Ensure this path is correct\r\nimport {\r\n  FaChevronDown, FaChevronRight, FaBuilding, FaUserTie,\r\n  FaBullhorn, FaCity, FaUsers, FaUserCircle, FaThLarge, FaBars, FaTimes\r\n} from 'react-icons/fa';\r\n\r\nconst Sidebar = () => {\r\n  // State to manage the collapse/expand status of each menu section\r\n  const [sectionCollapsed, setSectionCollapsed] = useState({\r\n    master: false, // Set initial state to open for better visibility\r\n    franchising: false, \r\n    marketing: false,\r\n    leasing: false,\r\n    admin: false,\r\n  });\r\n\r\n  // State to manage the overall collapse/expand status of the sidebar itself\r\n  const [sidebarCollapsed, setSidebarCollapsed] = useState(false);\r\n\r\n  // States to hold admin user's name and email from localStorage\r\n  const [adminName, setAdminName] = useState('Guest');\r\n  const [adminEmail, setAdminEmail] = useState('');\r\n\r\n  // Hook from react-router-dom for programmatic navigation\r\n  const navigate = useNavigate();\r\n\r\n  // Effect to read admin information from localStorage when the component mounts\r\n  useEffect(() => {\r\n    const storedAdminName = localStorage.getItem('adminName');\r\n    const storedAdminEmail = localStorage.getItem('adminEmail');\r\n    if (storedAdminName) {\r\n      setAdminName(storedAdminName);\r\n    }\r\n    if (storedAdminEmail) {\r\n      setAdminEmail(storedAdminEmail);\r\n    }\r\n  }, []); // Empty dependency array ensures this runs only once on mount\r\n\r\n  // Toggles the collapse/expand state of a specific menu section\r\n  const toggleSection = (section) => {\r\n    setSectionCollapsed((prev) => ({\r\n      ...prev,\r\n      [section]: !prev[section]\r\n    }));\r\n  };\r\n\r\n  // Handles the logout action\r\n  const handleLogout = () => {\r\n    // ✅ This is where localStorage items are removed\r\n    localStorage.removeItem('adminId');\r\n    localStorage.removeItem('adminName');\r\n    localStorage.removeItem('adminEmail');\r\n    \r\n    toast.info('You have been logged out.'); // Show a logout message\r\n    navigate('/admin/login'); // Redirect to the login page\r\n  };\r\n\r\n  return (\r\n    <aside className={`snbs-sidebar ${sidebarCollapsed ? 'collapsed' : ''}`}>\r\n      <div className=\"snbs-sidebar-header\">\r\n        <div className=\"snbs-logo\">\r\n          {!sidebarCollapsed && (\r\n            <>\r\n              <h2>FRANMAX INDIA</h2>\r\n              {/* Display admin's name and email */}\r\n              <p className=\"snbs-role\">Welcome, {adminName}</p>\r\n              {adminEmail && <p className=\"snbs-email\">{adminEmail}</p>}\r\n            </>\r\n          )}\r\n        </div>\r\n        {/* Button to toggle sidebar collapse/expand */}\r\n        <button\r\n          className=\"snbs-toggle-btn\"\r\n          onClick={() => setSidebarCollapsed(!sidebarCollapsed)}\r\n        >\r\n          {sidebarCollapsed ? <FaBars /> : <FaTimes />}\r\n        </button>\r\n      </div>\r\n\r\n      <nav className=\"snbs-menu\">\r\n        {/* Master Section */}\r\n        \r\n        {/* Franchising Section */}\r\n        <div className=\"snbs-section\">\r\n          <div className=\"snbs-section-header\" onClick={() => toggleSection('franchising')}>\r\n            <span>FRANCHISING</span>\r\n            {sectionCollapsed.franchising ? <FaChevronDown /> : <FaChevronRight />}\r\n          </div>\r\n          {sectionCollapsed.franchising && !sidebarCollapsed && (\r\n            <>\r\n              <Link to=\"/admin/brand-list\" className=\"snbs-link\"><FaBuilding /> Brand</Link>\r\n              <Link to=\"/admin/investors\" className=\"snbs-link\"><FaUserTie /> Investor</Link>\r\n              <Link to=\"/admin/leads\" className=\"snbs-link\"><FaUserTie />Generic Inquiries</Link>\r\n              <Link to=\"/admin/brand-inquiries\" className=\"snbs-link\"><FaUserTie />Brand Specific Inquiries</Link>\r\n              <Link to=\"/admin/partner-inquiries\" className=\"snbs-link\"><FaUserTie />Partner Inquiries</Link>\r\n               <Link to=\"/admin/newsletter\" className=\"snbs-link\"><FaUserTie />Newsletter</Link>\r\n                <Link to=\"/admin/faq\" className=\"snbs-link\"><FaUserTie />FAQ</Link>\r\n                <Link to=\"/admin/event\"  className=\"snbs-link\"><FaUserTie />Event</Link>\r\n            </>\r\n          )}\r\n        </div>\r\n        \r\n        {/* Marketing Section */}\r\n        <div className=\"snbs-section\">\r\n          <div className=\"snbs-section-header\" onClick={() => toggleSection('marketing')}>\r\n            <span>MARKETING</span>\r\n            {sectionCollapsed.marketing ? <FaChevronDown /> : <FaChevronRight />}\r\n          </div>\r\n          {sectionCollapsed.marketing && !sidebarCollapsed && (\r\n            <Link to=\"/admin/marketing-inquiries\" className=\"snbs-link\"><FaBullhorn /> Marketing</Link>\r\n          )}\r\n        </div>\r\n\r\n        {/* Leasing Section */}\r\n        <div className=\"snbs-section\">\r\n          <div className=\"snbs-section-header\" onClick={() => toggleSection('leasing')}>\r\n            <span>LEASING</span>\r\n            {sectionCollapsed.leasing ? <FaChevronDown /> : <FaChevronRight />}\r\n          </div>\r\n          {sectionCollapsed.leasing && !sidebarCollapsed && (\r\n            <>\r\n              <Link to=\"#\" className=\"snbs-link\"><FaCity /> Buy Lease Property inquiries</Link>\r\n              <Link to=\"/admin/lease-properties\" className=\"snbs-link\"><FaCity /> Lease Property inquiries</Link>\r\n              \r\n              <Link to=\"#\" className=\"snbs-link\"><FaCity /> Sell Property</Link>\r\n              <Link to=\"/admin/buy-business-inquiries\" className=\"snbs-link\"><FaCity />Buy Business Inquiry</Link>\r\n              <Link to=\"/admin/sell-business-inquiries\" className=\"snbs-link\"><FaCity /> Sell Business</Link>\r\n            </>\r\n          )}\r\n        </div>\r\n\r\n        {/* Admin Section */}\r\n        <div className=\"snbs-section\">\r\n          <div className=\"snbs-section-header\" onClick={() => toggleSection('admin')}>\r\n            <span>ADMIN</span>\r\n            {sectionCollapsed.admin ? <FaChevronDown /> : <FaChevronRight />}\r\n          </div>\r\n          {sectionCollapsed.admin && !sidebarCollapsed && (\r\n            <>\r\n              <Link to=\"/user-list\" className=\"snbs-link\"><FaUsers /> Users</Link>\r\n          \r\n              {/* Logout link calls the handleLogout function */}\r\n              <Link to=\"#\" onClick={handleLogout} className=\"snbs-link\"><FaThLarge /> Logout</Link>\r\n            </>\r\n          )}\r\n        </div>\r\n      </nav>\r\n    </aside>\r\n  );\r\n};\r\n\r\nexport default Sidebar;\r\n"],"names":["BuyPropertyInquiries","inquiries","setInquiries","useState","expandedRowId","setExpandedRowId","useEffect","fetch","getApiUrl","then","res","json","data","status","_jsxs","className","children","_jsx","Sidebar","length","map","inq","idx","React","business_name","full_name","contact","created_at","onClick","toggleDetails","id","colSpan","email","full_address","expected_amount","state_name","city_name","description","sector_name","style","textAlign","sectionCollapsed","setSectionCollapsed","master","franchising","marketing","leasing","admin","sidebarCollapsed","setSidebarCollapsed","adminName","setAdminName","adminEmail","setAdminEmail","navigate","useNavigate","storedAdminName","localStorage","getItem","storedAdminEmail","toggleSection","section","prev","_objectSpread","concat","_Fragment","FaBars","FaTimes","FaChevronDown","FaChevronRight","Link","to","FaBuilding","FaUserTie","FaBullhorn","FaCity","FaUsers","handleLogout","removeItem","toast","info","FaThLarge"],"sourceRoot":""}